!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(KCONFIG_CONFIG)	Makefile	/^$(KCONFIG_CONFIG) include\/config\/auto.conf.cmd: ;$/;"	t	language:Make
$(addprefix $(obj)/,$(filter-out fixdep,$(always)))	scripts/basic/Makefile	/^$(addprefix $(obj)\/,$(filter-out fixdep,$(always))): $(obj)\/fixdep$/;"	t	language:Make
$(openos-dirs)	Makefile	/^$(openos-dirs): prepare scripts$/;"	t	language:Make
$(clean-dirs)	Makefile	/^$(clean-dirs):$/;"	t	language:Make
$(cmd_files)	Makefile	/^  $(cmd_files): ;	# Do not try to update included dependency files$/;"	t	language:Make
$(mrproper-dirs)	Makefile	/^$(mrproper-dirs):$/;"	t	language:Make
$(obj)/%.moc	scripts/kconfig/Makefile	/^$(obj)\/%.moc: $(src)\/%.h$/;"	t	language:Make
$(obj)/.tmp_gtkcheck	scripts/kconfig/Makefile	/^$(obj)\/.tmp_gtkcheck:$/;"	t	language:Make
$(obj)/.tmp_qtcheck	scripts/kconfig/Makefile	/^$(obj)\/.tmp_qtcheck: $(src)\/Makefile$/;"	t	language:Make
$(obj)/.tmp_qtcheck	scripts/kconfig/Makefile	/^$(obj)\/.tmp_qtcheck:$/;"	t	language:Make
$(obj)/openos.bin	arch/arm64/boot/Makefile	/^$(obj)\/openos.bin: openos.strip FORCE$/;"	t	language:Make
$(obj)/dochecklxdialog	scripts/kconfig/Makefile	/^$(obj)\/dochecklxdialog:$/;"	t	language:Make
$(obj)/dochecklxdialog	scripts/kconfig/lxdialog/Makefile	/^$(obj)\/dochecklxdialog:$/;"	t	language:Make
$(obj)/gconf.o	scripts/kconfig/Makefile	/^$(obj)\/gconf.o: $(obj)\/.tmp_gtkcheck$/;"	t	language:Make
$(obj)/gconf.o	scripts/kconfig/Makefile	/^$(obj)\/gconf.o: $(obj)\/lkc_defs.h$/;"	t	language:Make
$(obj)/kconfig_load.o	scripts/kconfig/Makefile	/^$(obj)\/kconfig_load.o: $(obj)\/lkc_defs.h$/;"	t	language:Make
$(obj)/lex.zconf.c	scripts/kconfig/Makefile	/^$(obj)\/lex.zconf.c: $(src)\/zconf.l$/;"	t	language:Make
$(obj)/lkc_defs.h	scripts/kconfig/Makefile	/^$(obj)\/lkc_defs.h: $(src)\/lkc_proto.h$/;"	t	language:Make
$(obj)/qconf.o	scripts/kconfig/Makefile	/^$(obj)\/qconf.o: $(obj)\/.tmp_qtcheck$/;"	t	language:Make
$(obj)/qconf.o	scripts/kconfig/Makefile	/^$(obj)\/qconf.o: $(obj)\/qconf.moc $(obj)\/lkc_defs.h$/;"	t	language:Make
$(obj)/version.rel	init/Makefile	/^$(obj)\/version.rel: include\/target\/compile.h$/;"	t	language:Make
$(obj)/zconf.tab.c	scripts/kconfig/Makefile	/^$(obj)\/zconf.tab.c: $(src)\/zconf.y$/;"	t	language:Make
$(obj)/zconf.tab.o	scripts/kconfig/Makefile	/^$(obj)\/zconf.tab.o: $(obj)\/lex.zconf.c $(obj)\/zconf.hash.c$/;"	t	language:Make
$(sort $(openos-init) $(openos-main) $(openos-lds))	Makefile	/^$(sort $(openos-init) $(openos-main) $(openos-lds)): $(openos-dirs) ;$/;"	t	language:Make
%	Makefile	/^%:: FORCE$/;"	t	language:Make
%.tab.c	scripts/kconfig/Makefile	/^%.tab.c: %.y$/;"	t	language:Make
%_defconfig	scripts/kconfig/Makefile	/^%_defconfig: $(obj)\/conf$/;"	t	language:Make
%config	Makefile	/^%config: scripts_basic outputmakefile FORCE$/;"	t	language:Make
.bss	arch/arm64/kernel/openos.lds.S	/^	.bss : { *(.bss*) }$/;"	S	language:LdScript
.data	arch/arm64/kernel/openos.lds.S	/^	.data : { *(.data) }$/;"	S	language:LdScript
.rodata	arch/arm64/kernel/openos.lds.S	/^	.rodata : { *(.rodata) }$/;"	S	language:LdScript
.text	arch/arm64/kernel/openos.lds.S	/^	.text : { *(.text) }$/;"	S	language:LdScript
.text.boot	arch/arm64/kernel/openos.lds.S	/^	.text.boot : { *(.text.boot) }$/;"	S	language:LdScript
ACS_DARROW	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_DARROW /;"	d	language:C++
ACS_HLINE	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_HLINE /;"	d	language:C++
ACS_LLCORNER	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_LLCORNER /;"	d	language:C++
ACS_LRCORNER	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_LRCORNER /;"	d	language:C++
ACS_LTEE	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_LTEE /;"	d	language:C++
ACS_RTEE	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_RTEE /;"	d	language:C++
ACS_UARROW	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_UARROW /;"	d	language:C++
ACS_ULCORNER	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_ULCORNER /;"	d	language:C++
ACS_URCORNER	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_URCORNER /;"	d	language:C++
ACS_VLINE	scripts/kconfig/lxdialog/dialog.h	/^#define ACS_VLINE /;"	d	language:C++
AFLAGS	Makefile	/^AFLAGS          := -D__ASSEMBLY__$/;"	m	language:Make
AFLAGS_KERNEL	Makefile	/^AFLAGS_KERNEL	=$/;"	m	language:Make
ALIGN	include/target/linkage.h	/^#define ALIGN /;"	d	language:C++
ALIGN_STR	include/target/linkage.h	/^#define ALIGN_STR /;"	d	language:C++
AR	Makefile	/^AR		= $(CROSS_COMPILE)ar$/;"	m	language:Make
ARCH	Makefile	/^ARCH		?= $(SUBARCH)$/;"	m	language:Make
AS	Makefile	/^AS		= $(CROSS_COMPILE)as$/;"	m	language:Make
ATTRIB_NORET	include/target/linkage.h	/^#define ATTRIB_NORET /;"	d	language:C++
AUX_ENABLES	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_ENABLES /;"	d	language:C++
AUX_MU_BAUD_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_BAUD_REG /;"	d	language:C++
AUX_MU_CNTL_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_CNTL_REG /;"	d	language:C++
AUX_MU_IER_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_IER_REG /;"	d	language:C++
AUX_MU_IIR_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_IIR_REG /;"	d	language:C++
AUX_MU_IO_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_IO_REG /;"	d	language:C++
AUX_MU_LCR_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_LCR_REG /;"	d	language:C++
AUX_MU_LSR_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_LSR_REG /;"	d	language:C++
AUX_MU_MCR_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_MCR_REG /;"	d	language:C++
AUX_MU_MSR_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_MSR_REG /;"	d	language:C++
AUX_MU_SCRATCH	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_SCRATCH /;"	d	language:C++
AUX_MU_STAT_REG	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define AUX_MU_STAT_REG /;"	d	language:C++
AWK	Makefile	/^AWK		= awk$/;"	m	language:Make
BEGIN	scripts/kconfig/lex.zconf.c	/^#define BEGIN /;"	d	language:C	file:
BLANK	include/target/kbuild.h	/^#define BLANK(/;"	d	language:C++	signature:()
BORDER_BG	scripts/kconfig/lxdialog/colors.h	/^#define BORDER_BG /;"	d	language:C++
BORDER_FG	scripts/kconfig/lxdialog/colors.h	/^#define BORDER_FG /;"	d	language:C++
BORDER_HL	scripts/kconfig/lxdialog/colors.h	/^#define BORDER_HL /;"	d	language:C++
BUF_SIZE	scripts/kconfig/lxdialog/dialog.h	/^#define BUF_SIZE /;"	d	language:C++
BUTTON_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_ACTIVE_BG /;"	d	language:C++
BUTTON_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_ACTIVE_FG /;"	d	language:C++
BUTTON_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_ACTIVE_HL /;"	d	language:C++
BUTTON_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_INACTIVE_BG /;"	d	language:C++
BUTTON_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_INACTIVE_FG /;"	d	language:C++
BUTTON_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_INACTIVE_HL /;"	d	language:C++
BUTTON_KEY_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_ACTIVE_BG /;"	d	language:C++
BUTTON_KEY_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_ACTIVE_FG /;"	d	language:C++
BUTTON_KEY_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_ACTIVE_HL /;"	d	language:C++
BUTTON_KEY_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_INACTIVE_BG /;"	d	language:C++
BUTTON_KEY_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_INACTIVE_FG /;"	d	language:C++
BUTTON_KEY_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_KEY_INACTIVE_HL /;"	d	language:C++
BUTTON_LABEL_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_ACTIVE_BG /;"	d	language:C++
BUTTON_LABEL_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_ACTIVE_FG /;"	d	language:C++
BUTTON_LABEL_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_ACTIVE_HL /;"	d	language:C++
BUTTON_LABEL_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_INACTIVE_BG /;"	d	language:C++
BUTTON_LABEL_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_INACTIVE_FG /;"	d	language:C++
BUTTON_LABEL_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	/^#define BUTTON_LABEL_INACTIVE_HL /;"	d	language:C++
CC	Makefile	/^CC		= $(CROSS_COMPILE)gcc$/;"	m	language:Make
CFLAGS	Makefile	/^CFLAGS          := -g -Wall -DKBUILD_CONF $(TARGETINCLUDE) $(LINUXINCLUDE)$/;"	m	language:Make
CFLAGS_KERNEL	Makefile	/^CFLAGS_KERNEL	=$/;"	m	language:Make
CHECK	Makefile	/^CHECK		= sparse$/;"	m	language:Make
CHECKFLAGS	Makefile	/^CHECKFLAGS     := -D__STDC__ $(CF)$/;"	m	language:Make
CHECK_BG	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_BG /;"	d	language:C++
CHECK_FG	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_FG /;"	d	language:C++
CHECK_HL	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_HL /;"	d	language:C++
CHECK_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_SELECTED_BG /;"	d	language:C++
CHECK_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_SELECTED_FG /;"	d	language:C++
CHECK_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	/^#define CHECK_SELECTED_HL /;"	d	language:C++
CHK	scripts/checkpatch.pl	/^sub CHK {$/;"	s	language:Perl
COLOR_COUNT	scripts/kconfig/lxdialog/colors.h	/^#define COLOR_COUNT /;"	d	language:C++
COLOR_NAME_LEN	scripts/kconfig/lxdialog/colors.h	/^#define COLOR_NAME_LEN /;"	d	language:C++
COL_BTNACT	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_BTNINC	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_BTNRAD	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_BTNVIS	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_COLOR	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_EDIT	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_MENU	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_MOD	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_NAME	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_NO	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_NUMBER	scripts/kconfig/gconf.c	/^	COL_NUMBER$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_OPTION	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_PIXBUF	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_PIXVIS	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_VALUE	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COL_YES	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	language:C	enum:__anon51b0ba2a0203	file:
COMMAND	scripts/kconfig/lex.zconf.c	/^#define COMMAND /;"	d	language:C	file:
COMMENT	include/target/kbuild.h	/^#define COMMENT(/;"	d	language:C++	signature:(x)
CONFIG_SHELL	Makefile	/^CONFIG_SHELL := $(shell if [ -x "$$BASH" ]; then echo $$BASH; \\$/;"	m	language:Make
CPP	Makefile	/^CPP		= $(CROSS_COMPILE)cpp$/;"	m	language:Make
CPPFLAGS	Makefile	/^CPPFLAGS        := -g -D__KERNEL__ $(TARGETINCLUDE) $(LINUXINCLUDE)$/;"	m	language:Make
CPP_ASMLINKAGE	include/target/linkage.h	/^#define CPP_ASMLINKAGE /;"	d	language:C++
CPP_ASMLINKAGE	include/target/linkage.h	/^#define CPP_ASMLINKAGE$/;"	d	language:C++
CROSS_COMPILE	Makefile	/^CROSS_COMPILE	?= $(SUBARCH_CROSS_COMPILE)$/;"	m	language:Make
CURS_MACROS	scripts/kconfig/lxdialog/dialog.h	/^#define CURS_MACROS$/;"	d	language:C++
C_ATTR	scripts/kconfig/lxdialog/colors.h	/^#define C_ATTR(/;"	d	language:C++	signature:(x,y)
Cc	scripts/checkpatch.pl	/^	Cc:$/;"	l	language:Perl
ConfigInfoView	scripts/kconfig/qconf.cc	/^ConfigInfoView::ConfigInfoView(QWidget* parent, const char *name)$/;"	f	language:C++	class:ConfigInfoView	signature:(QWidget * parent,const char * name)
ConfigInfoView	scripts/kconfig/qconf.h	/^class ConfigInfoView : public QTextBrowser {$/;"	c	language:C++
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(ConfigItem *parent, ConfigItem *after, struct menu *m, bool v)$/;"	f	language:C++	class:ConfigItem	signature:(ConfigItem * parent,ConfigItem * after,struct menu * m,bool v)
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(QListView *parent, ConfigItem *after, bool v)$/;"	f	language:C++	class:ConfigItem	signature:(QListView * parent,ConfigItem * after,bool v)
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(QListView *parent, ConfigItem *after, struct menu *m, bool v)$/;"	f	language:C++	class:ConfigItem	signature:(QListView * parent,ConfigItem * after,struct menu * m,bool v)
ConfigItem	scripts/kconfig/qconf.h	/^class ConfigItem : public QListViewItem {$/;"	c	language:C++
ConfigLineEdit	scripts/kconfig/qconf.cc	/^ConfigLineEdit::ConfigLineEdit(ConfigView* parent)$/;"	f	language:C++	class:ConfigLineEdit	signature:(ConfigView * parent)
ConfigLineEdit	scripts/kconfig/qconf.h	/^class ConfigLineEdit : public QLineEdit {$/;"	c	language:C++
ConfigList	scripts/kconfig/qconf.cc	/^ConfigList::ConfigList(ConfigView* p, const char *name)$/;"	f	language:C++	class:ConfigList	signature:(ConfigView * p,const char * name)
ConfigList	scripts/kconfig/qconf.h	/^class ConfigList : public QListView {$/;"	c	language:C++
ConfigMainWindow	scripts/kconfig/qconf.cc	/^ConfigMainWindow::ConfigMainWindow(void)$/;"	f	language:C++	class:ConfigMainWindow	signature:(void)
ConfigMainWindow	scripts/kconfig/qconf.h	/^class ConfigMainWindow : public QMainWindow {$/;"	c	language:C++
ConfigSearchWindow	scripts/kconfig/qconf.cc	/^ConfigSearchWindow::ConfigSearchWindow(ConfigMainWindow* parent, const char *name)$/;"	f	language:C++	class:ConfigSearchWindow	signature:(ConfigMainWindow * parent,const char * name)
ConfigSearchWindow	scripts/kconfig/qconf.h	/^class ConfigSearchWindow : public QDialog {$/;"	c	language:C++
ConfigSettings	scripts/kconfig/qconf.h	/^class ConfigSettings : public QSettings {$/;"	c	language:C++
ConfigView	scripts/kconfig/qconf.cc	/^ConfigView::ConfigView(QWidget* parent, const char *name)$/;"	f	language:C++	class:ConfigView	signature:(QWidget * parent,const char * name)
ConfigView	scripts/kconfig/qconf.h	/^class ConfigView : public QVBox {$/;"	c	language:C++
CurrentEL_EL1	arch/arm64/include/asm/sysregs.h	/^#define CurrentEL_EL1 /;"	d	language:C++
CurrentEL_EL2	arch/arm64/include/asm/sysregs.h	/^#define CurrentEL_EL2 /;"	d	language:C++
CurrentEL_EL3	arch/arm64/include/asm/sysregs.h	/^#define CurrentEL_EL3 /;"	d	language:C++
DARROW_BG	scripts/kconfig/lxdialog/colors.h	/^#define DARROW_BG /;"	d	language:C++
DARROW_FG	scripts/kconfig/lxdialog/colors.h	/^#define DARROW_FG /;"	d	language:C++
DARROW_HL	scripts/kconfig/lxdialog/colors.h	/^#define DARROW_HL /;"	d	language:C++
DEBUG_EXPR	scripts/kconfig/expr.c	/^#define DEBUG_EXPR	/;"	d	language:C	file:
DEBUG_PARSE	scripts/kconfig/zconf.tab.c	/^#define DEBUG_PARSE	/;"	d	language:C	file:
DEFINE	include/target/kbuild.h	/^#define DEFINE(/;"	d	language:C++	signature:(sym,val)
DEFINE_ISR	include/target/compiler_gcc.h	/^#define DEFINE_ISR(/;"	d	language:C++	signature:(vector,...)
DIALOG_BG	scripts/kconfig/lxdialog/colors.h	/^#define DIALOG_BG /;"	d	language:C++
DIALOG_FG	scripts/kconfig/lxdialog/colors.h	/^#define DIALOG_FG /;"	d	language:C++
DIALOG_HL	scripts/kconfig/lxdialog/colors.h	/^#define DIALOG_HL /;"	d	language:C++
DIRDELIM	scripts/kconfig/lkc_port.h	/^#define DIRDELIM	/;"	d	language:C++
DIRDELIMC	scripts/kconfig/lkc_port.h	/^#define DIRDELIMC	/;"	d	language:C++
DLG_COLOR	scripts/kconfig/lxdialog/util.c	/^#define DLG_COLOR(/;"	d	language:C	file:	signature:(dialog,f,b,h)
ECHO	scripts/kconfig/lex.zconf.c	/^#define ECHO /;"	d	language:C	file:
END	include/target/linkage.h	/^#define END(/;"	d	language:C++	signature:(name)
ENDOBJ	include/target/linkage.h	/^#define ENDOBJ(/;"	d	language:C++	signature:(name)
ENDPROC	include/target/linkage.h	/^#define ENDPROC(/;"	d	language:C++	signature:(name)
ENTRY	include/target/linkage.h	/^#define ENTRY(/;"	d	language:C++	signature:(name)
EOB_ACT_CONTINUE_SCAN	scripts/kconfig/lex.zconf.c	/^#define EOB_ACT_CONTINUE_SCAN /;"	d	language:C	file:
EOB_ACT_END_OF_FILE	scripts/kconfig/lex.zconf.c	/^#define EOB_ACT_END_OF_FILE /;"	d	language:C	file:
EOB_ACT_LAST_MATCH	scripts/kconfig/lex.zconf.c	/^#define EOB_ACT_LAST_MATCH /;"	d	language:C	file:
EOF	scripts/kconfig/check.sh	/^$* -xc -o \/dev\/null - > \/dev\/null 2>&1 << EOF$/;"	h	language:Sh
ERRDISPLAYTOOSMALL	scripts/kconfig/lxdialog/dialog.h	/^#define ERRDISPLAYTOOSMALL /;"	d	language:C++
ERROR	scripts/checkpatch.pl	/^sub ERROR {$/;"	s	language:Perl
EXPR_H	scripts/kconfig/expr.h	/^#define EXPR_H$/;"	d	language:C++
EXTRAVERSION	Makefile	/^EXTRAVERSION =$/;"	m	language:Make
E_AND	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_AND	scripts/kconfig/expr.h	/^#define E_AND(/;"	d	language:C++	signature:(dep1,dep2)
E_CHOICE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_EQUAL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_NONE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_NOT	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_NOT	scripts/kconfig/expr.h	/^#define E_NOT(/;"	d	language:C++	signature:(dep)
E_OR	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_OR	scripts/kconfig/expr.h	/^#define E_OR(/;"	d	language:C++	signature:(dep1,dep2)
E_RANGE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_SYMBOL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
E_UNEQUAL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	language:C++	enum:expr_type
FILE_BUSY	scripts/kconfig/expr.h	/^#define FILE_BUSY	/;"	d	language:C++
FILE_PRINTED	scripts/kconfig/expr.h	/^#define FILE_PRINTED	/;"	d	language:C++
FILE_SCANNED	scripts/kconfig/expr.h	/^#define FILE_SCANNED	/;"	d	language:C++
FLEXINT_H	scripts/kconfig/lex.zconf.c	/^#define FLEXINT_H$/;"	d	language:C	file:
FLEX_BETA	scripts/kconfig/lex.zconf.c	/^#define FLEX_BETA$/;"	d	language:C	file:
FLEX_SCANNER	scripts/kconfig/lex.zconf.c	/^#define FLEX_SCANNER$/;"	d	language:C	file:
FORCE	Makefile	/^FORCE:$/;"	t	language:Make
FULL_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	language:C	enum:__anon51b0ba2a0103	file:
GPCLR0	arch/arm64/mach-rpi/mach/gpio.h	/^#define GPCLR0 /;"	d	language:C++
GPFSEL1	arch/arm64/mach-rpi/mach/gpio.h	/^#define GPFSEL1 /;"	d	language:C++
GPPUD	arch/arm64/mach-rpi/mach/gpio.h	/^#define GPPUD /;"	d	language:C++
GPPUDCLK0	arch/arm64/mach-rpi/mach/gpio.h	/^#define GPPUDCLK0 /;"	d	language:C++
GPSET0	arch/arm64/mach-rpi/mach/gpio.h	/^#define GPSET0 /;"	d	language:C++
GZFLAGS	arch/arm64/Makefile	/^GZFLAGS		:=-9$/;"	m	language:Make
HCR_RW	arch/arm64/include/asm/sysregs.h	/^#define HCR_RW /;"	d	language:C++
HCR_VALUE	arch/arm64/include/asm/sysregs.h	/^#define HCR_VALUE /;"	d	language:C++
HELP	scripts/kconfig/lex.zconf.c	/^#define HELP /;"	d	language:C	file:
HOSTCC	Makefile	/^HOSTCC       = gcc$/;"	m	language:Make
HOSTCFLAGS	Makefile	/^HOSTCFLAGS   = -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer $(HOSTINCLUDE)$/;"	m	language:Make
HOSTCFLAGS_gconf.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_gconf.o	= `pkg-config --cflags gtk+-2.0 gmodule-2.0 libglade-2.0` \\$/;"	m	language:Make
HOSTCFLAGS_lex.zconf.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_lex.zconf.o	:= -I$(src) -DYY_NO_INPUT$/;"	m	language:Make
HOSTCFLAGS_zconf.tab.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_zconf.tab.o	:= -I$(src) -DYY_NO_INPUT$/;"	m	language:Make
HOSTCXX	Makefile	/^HOSTCXX      = g++$/;"	m	language:Make
HOSTCXXFLAGS	Makefile	/^HOSTCXXFLAGS = -O2$/;"	m	language:Make
HOSTCXXFLAGS_qconf.o	scripts/kconfig/Makefile	/^HOSTCXXFLAGS_qconf.o	= $(KC_QT_CFLAGS) -D LKC_DIRECT_LINK$/;"	m	language:Make
HOSTLOADLIBES_gconf	scripts/kconfig/Makefile	/^HOSTLOADLIBES_gconf	= `pkg-config --libs gtk+-2.0 gmodule-2.0 libglade-2.0`$/;"	m	language:Make
HOSTLOADLIBES_qconf	scripts/kconfig/Makefile	/^HOSTLOADLIBES_qconf	= $(KC_QT_LIBS) -ldl$/;"	m	language:Make
HOST_EXTRACFLAGS	scripts/kconfig/Makefile	/^HOST_EXTRACFLAGS = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ccflags)$/;"	m	language:Make
HOST_EXTRACFLAGS	scripts/kconfig/lxdialog/Makefile	/^HOST_EXTRACFLAGS = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ccflags)$/;"	m	language:Make
HOST_LOADLIBES	scripts/kconfig/Makefile	/^HOST_LOADLIBES   = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ldflags $(HOSTCC))$/;"	m	language:Make
HOST_LOADLIBES	scripts/kconfig/lxdialog/Makefile	/^HOST_LOADLIBES   = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ldflags $(HOSTCC))$/;"	m	language:Make
HOST_OS	scripts/kconfig/Makefile	/^HOST_OS		:= $(shell uname -o)$/;"	m	language:Make
INCDIR	arch/arm64/Makefile	/^INCDIR   := mach-$(incdir-y)$/;"	m	language:Make
INITIAL	scripts/kconfig/lex.zconf.c	/^#define INITIAL /;"	d	language:C	file:
INPUTBOX_BG	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_BG /;"	d	language:C++
INPUTBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_BORDER_BG /;"	d	language:C++
INPUTBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_BORDER_FG /;"	d	language:C++
INPUTBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_BORDER_HL /;"	d	language:C++
INPUTBOX_FG	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_FG /;"	d	language:C++
INPUTBOX_HL	scripts/kconfig/lxdialog/colors.h	/^#define INPUTBOX_HL /;"	d	language:C++
INSTALL_PATH	Makefile	/^export	INSTALL_PATH ?= \/boot$/;"	m	language:Make
INT16_MAX	scripts/kconfig/lex.zconf.c	/^#define INT16_MAX /;"	d	language:C	file:
INT16_MIN	scripts/kconfig/lex.zconf.c	/^#define INT16_MIN /;"	d	language:C	file:
INT32_MAX	scripts/kconfig/lex.zconf.c	/^#define INT32_MAX /;"	d	language:C	file:
INT32_MIN	scripts/kconfig/lex.zconf.c	/^#define INT32_MIN /;"	d	language:C	file:
INT8_MAX	scripts/kconfig/lex.zconf.c	/^#define INT8_MAX /;"	d	language:C	file:
INT8_MIN	scripts/kconfig/lex.zconf.c	/^#define INT8_MIN /;"	d	language:C	file:
ISR_ALIASOF	include/target/compiler_gcc.h	/^#define ISR_ALIASOF(/;"	d	language:C++	signature:(v)
ISR_BLOCK	include/target/compiler_gcc.h	/^#define ISR_BLOCK$/;"	d	language:C++
ISR_NAKED	include/target/compiler_gcc.h	/^#define ISR_NAKED /;"	d	language:C++
ISR_NOBLOCK	include/target/compiler_gcc.h	/^#define ISR_NOBLOCK /;"	d	language:C++
ITEM_BG	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_BG /;"	d	language:C++
ITEM_FG	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_FG /;"	d	language:C++
ITEM_HL	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_HL /;"	d	language:C++
ITEM_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_SELECTED_BG /;"	d	language:C++
ITEM_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_SELECTED_FG /;"	d	language:C++
ITEM_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	/^#define ITEM_SELECTED_HL /;"	d	language:C++
KBUILD_BUILTIN	Makefile	/^KBUILD_BUILTIN := 1$/;"	m	language:Make
KBUILD_CHECKSRC	Makefile	/^KBUILD_CHECKSRC = 0$/;"	m	language:Make
KBUILD_DEFCONFIG	arch/arm64/Makefile	/^KBUILD_DEFCONFIG := defconfig$/;"	m	language:Make
KBUILD_HAVE_NLS	scripts/kconfig/Makefile	/^KBUILD_HAVE_NLS := $(shell \\$/;"	m	language:Make
KBUILD_IMAGE	Makefile	/^export KBUILD_IMAGE ?= openos$/;"	m	language:Make
KBUILD_IMAGE	arch/arm64/Makefile	/^KBUILD_IMAGE	:= openos.bin$/;"	m	language:Make
KBUILD_VERBOSE	Makefile	/^    KBUILD_VERBOSE = $(V)$/;"	m	language:Make
KBUILD_VERBOSE	Makefile	/^  KBUILD_VERBOSE = 0$/;"	m	language:Make
KBUILD_VMLINUX_OBJS	Makefile	/^export KBUILD_VMLINUX_OBJS := $(openos-all)$/;"	m	language:Make
KCONFIG_CONFIG	Makefile	/^KCONFIG_CONFIG	?= .config$/;"	m	language:Make
KCONFIG_PROG	scripts/kconfig/prog.h	/^#define KCONFIG_PROG	/;"	d	language:C++
KERNELRELEASE	Makefile	/^KERNELRELEASE = $(shell cat include\/config\/kernel.release 2> \/dev\/null)$/;"	m	language:Make
KERNELVERSION	Makefile	/^KERNELVERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)$/;"	m	language:Make
KEY_ESC	scripts/kconfig/lxdialog/dialog.h	/^#define KEY_ESC /;"	d	language:C++
LD	Makefile	/^LD		= $(CROSS_COMPILE)ld$/;"	m	language:Make
LDFLAGS_openos	arch/arm64/Makefile	/^LDFLAGS_openos	:=-p --no-undefined -X$/;"	m	language:Make
LINUXINCLUDE	Makefile	/^LINUXINCLUDE    := \\$/;"	m	language:Make
LKC_DIRECT_LINK	scripts/kconfig/conf.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/confdata.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/expr.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/kxgettext.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/lex.zconf.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/mconf.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/menu.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/symbol.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_DIRECT_LINK	scripts/kconfig/zconf.tab.c	/^#define LKC_DIRECT_LINK$/;"	d	language:C	file:
LKC_H	scripts/kconfig/lkc.h	/^#define LKC_H$/;"	d	language:C++
LOCALEDIR	scripts/kconfig/lkc.h	/^#define LOCALEDIR /;"	d	language:C++
LOW_MEMORY	arch/arm64/include/asm/mm.h	/^#define LOW_MEMORY /;"	d	language:C++
MACHINE	arch/arm64/Makefile	/^MACHINE  := arch\/arm64\/mach-$(machine-y)\/$/;"	m	language:Make
MAX	scripts/kconfig/lxdialog/dialog.h	/^#define MAX(/;"	d	language:C++	signature:(x,y)
MAXITEMSTR	scripts/kconfig/lxdialog/dialog.h	/^#define MAXITEMSTR /;"	d	language:C++
MAX_HASH_VALUE	scripts/kconfig/zconf.hash.c	/^      MAX_HASH_VALUE = 46$/;"	e	language:C	enum:kconf_id_lookup::__anond60376ef0103	file:
MAX_LEN	scripts/kconfig/lxdialog/dialog.h	/^#define MAX_LEN /;"	d	language:C++
MAX_WORD_LENGTH	scripts/kconfig/zconf.hash.c	/^      MAX_WORD_LENGTH = 14,$/;"	e	language:C	enum:kconf_id_lookup::__anond60376ef0103	file:
MENUBOX_BG	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_BG /;"	d	language:C++
MENUBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_BORDER_BG /;"	d	language:C++
MENUBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_BORDER_FG /;"	d	language:C++
MENUBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_BORDER_HL /;"	d	language:C++
MENUBOX_FG	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_FG /;"	d	language:C++
MENUBOX_HL	scripts/kconfig/lxdialog/colors.h	/^#define MENUBOX_HL /;"	d	language:C++
MENU_CHANGED	scripts/kconfig/expr.h	/^#define MENU_CHANGED	/;"	d	language:C++
MENU_ROOT	scripts/kconfig/expr.h	/^#define MENU_ROOT	/;"	d	language:C++
MIN	scripts/kconfig/lxdialog/dialog.h	/^#define MIN(/;"	d	language:C++	signature:(x,y)
MIN_HASH_VALUE	scripts/kconfig/zconf.hash.c	/^      MIN_HASH_VALUE = 2,$/;"	e	language:C	enum:kconf_id_lookup::__anond60376ef0103	file:
MIN_WORD_LENGTH	scripts/kconfig/zconf.hash.c	/^      MIN_WORD_LENGTH = 2,$/;"	e	language:C	enum:kconf_id_lookup::__anond60376ef0103	file:
M_EVENT	scripts/kconfig/lxdialog/dialog.h	/^#define M_EVENT /;"	d	language:C++
Makefile	Makefile	/^Makefile: ;$/;"	t	language:Make
Mode	scripts/kconfig/lxdialog/lxdialog.c	/^struct Mode {$/;"	s	language:C	file:
NAME	Makefile	/^NAME = openos$/;"	m	language:Make
NM	Makefile	/^NM		= $(CROSS_COMPILE)nm$/;"	m	language:Make
NORET_AND	include/target/linkage.h	/^#define NORET_AND /;"	d	language:C++
NORET_TYPE	include/target/linkage.h	/^#define NORET_TYPE /;"	d	language:C++
NOTE	scripts/checkpatch.pl	/^NOTE: For some of the reported defects, checkpatch may be able to$/;"	l	language:Perl
NOTE	scripts/checkpatch.pl	/^NOTE: If any of the errors are false positives, please report$/;"	l	language:Perl
NOTE	scripts/checkpatch.pl	/^NOTE: Whitespace errors detected.$/;"	l	language:Perl
NOTE	scripts/checkpatch.pl	/^NOTE: perl $^V is not modern enough to detect all possible issues.$/;"	l	language:Perl
N_	scripts/kconfig/lkc.h	/^#define N_(/;"	d	language:C++	signature:(text)
OBJCOPY	Makefile	/^OBJCOPY		= $(CROSS_COMPILE)objcopy$/;"	m	language:Make
OBJCOPYFLAGS	arch/arm64/Makefile	/^OBJCOPYFLAGS	:=-O binary -R .note -R .note.gnu.build-id -R .comment -S$/;"	m	language:Make
OFFSET	include/target/kbuild.h	/^#define OFFSET(/;"	d	language:C++	signature:(sym,str,mem)
OLD_NCURSES	scripts/kconfig/lxdialog/dialog.h	/^#define OLD_NCURSES /;"	d	language:C++
Options	scripts/checkpatch.pl	/^Options:$/;"	l	language:Perl
P	scripts/kconfig/kconfig_load.c	/^#define P(/;"	d	language:C	file:	signature:(name,type,arg)
P	scripts/kconfig/lkc.h	/^#define P(/;"	d	language:C++	signature:(name,type,arg)
PACKAGE	scripts/kconfig/lkc.h	/^#define PACKAGE /;"	d	language:C++
PAGE_SHIFT	arch/arm64/include/asm/mm.h	/^#define PAGE_SHIFT /;"	d	language:C++
PAGE_SIZE	arch/arm64/include/asm/mm.h	/^#define PAGE_SIZE /;"	d	language:C++
PARAM	scripts/kconfig/lex.zconf.c	/^#define PARAM /;"	d	language:C	file:
PATCHLEVEL	Makefile	/^PATCHLEVEL = 0$/;"	m	language:Make
PATH_MAX	scripts/kconfig/lkc_port.h	/^#define PATH_MAX	/;"	d	language:C++
PBASE	arch/arm64/mach-rpi/mach/base.h	/^#define PBASE /;"	d	language:C++
PERL	Makefile	/^PERL		= perl$/;"	m	language:Make
POSITION_INDICATOR_BG	scripts/kconfig/lxdialog/colors.h	/^#define POSITION_INDICATOR_BG /;"	d	language:C++
POSITION_INDICATOR_FG	scripts/kconfig/lxdialog/colors.h	/^#define POSITION_INDICATOR_FG /;"	d	language:C++
POSITION_INDICATOR_HL	scripts/kconfig/lxdialog/colors.h	/^#define POSITION_INDICATOR_HL /;"	d	language:C++
PRINTD	scripts/kconfig/zconf.tab.c	/^#define PRINTD	/;"	d	language:C	file:
P_CHOICE	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_COMMENT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_DEFAULT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_MENU	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_PROMPT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_RANGE	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_SELECT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
P_UNKNOWN	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	language:C++	enum:prop_type
Parent	scripts/kconfig/qconf.h	/^	typedef class QDialog Parent;$/;"	t	language:C++	class:ConfigSearchWindow	typeref:class:QDialog
Parent	scripts/kconfig/qconf.h	/^	typedef class QLineEdit Parent;$/;"	t	language:C++	class:ConfigLineEdit	typeref:class:QLineEdit
Parent	scripts/kconfig/qconf.h	/^	typedef class QListView Parent;$/;"	t	language:C++	class:ConfigList	typeref:class:QListView
Parent	scripts/kconfig/qconf.h	/^	typedef class QListViewItem Parent;$/;"	t	language:C++	class:ConfigItem	typeref:class:QListViewItem
Parent	scripts/kconfig/qconf.h	/^	typedef class QTextBrowser Parent;$/;"	t	language:C++	class:ConfigInfoView	typeref:class:QTextBrowser
Parent	scripts/kconfig/qconf.h	/^	typedef class QVBox Parent;$/;"	t	language:C++	class:ConfigView	typeref:class:QVBox
Q	Makefile	/^  Q = @$/;"	m	language:Make
Q	Makefile	/^  Q =$/;"	m	language:Make
QSettings	scripts/kconfig/qconf.h	/^class QSettings {$/;"	c	language:C++
RCS_FIND_IGNORE	Makefile	/^RCS_FIND_IGNORE := \\( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o /;"	m	language:Make
RCS_TAR_IGNORE	Makefile	/^export RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclu/;"	m	language:Make
REJECT	scripts/kconfig/lex.zconf.c	/^#define REJECT /;"	d	language:C	file:
SCREEN_BG	scripts/kconfig/lxdialog/colors.h	/^#define SCREEN_BG /;"	d	language:C++
SCREEN_FG	scripts/kconfig/lxdialog/colors.h	/^#define SCREEN_FG /;"	d	language:C++
SCREEN_HL	scripts/kconfig/lxdialog/colors.h	/^#define SCREEN_HL /;"	d	language:C++
SCR_NS	arch/arm64/include/asm/sysregs.h	/^#define SCR_NS /;"	d	language:C++
SCR_RESERVED	arch/arm64/include/asm/sysregs.h	/^#define SCR_RESERVED /;"	d	language:C++
SCR_RW	arch/arm64/include/asm/sysregs.h	/^#define SCR_RW /;"	d	language:C++
SCR_VALUE	arch/arm64/include/asm/sysregs.h	/^#define SCR_VALUE /;"	d	language:C++
SCTLR_D_CACHE_DISABLED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_D_CACHE_DISABLED /;"	d	language:C++
SCTLR_EE_LITTLE_ENDIAN	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_EE_LITTLE_ENDIAN /;"	d	language:C++
SCTLR_EOE_LITTLE_ENDIAN	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_EOE_LITTLE_ENDIAN /;"	d	language:C++
SCTLR_I_CACHE_DISABLED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_I_CACHE_DISABLED /;"	d	language:C++
SCTLR_MMU_DISABLED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_MMU_DISABLED /;"	d	language:C++
SCTLR_MMU_ENABLED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_MMU_ENABLED /;"	d	language:C++
SCTLR_RESERVED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_RESERVED /;"	d	language:C++
SCTLR_VALUE_MMU_DISABLED	arch/arm64/include/asm/sysregs.h	/^#define SCTLR_VALUE_MMU_DISABLED /;"	d	language:C++
SEARCHBOX_BG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_BG /;"	d	language:C++
SEARCHBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_BORDER_BG /;"	d	language:C++
SEARCHBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_BORDER_FG /;"	d	language:C++
SEARCHBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_BORDER_HL /;"	d	language:C++
SEARCHBOX_FG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_FG /;"	d	language:C++
SEARCHBOX_HL	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_HL /;"	d	language:C++
SEARCHBOX_TITLE_BG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_TITLE_BG /;"	d	language:C++
SEARCHBOX_TITLE_FG	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_TITLE_FG /;"	d	language:C++
SEARCHBOX_TITLE_HL	scripts/kconfig/lxdialog/colors.h	/^#define SEARCHBOX_TITLE_HL /;"	d	language:C++
SECTION_SHIFT	arch/arm64/include/asm/mm.h	/^#define SECTION_SHIFT /;"	d	language:C++
SECTION_SIZE	arch/arm64/include/asm/mm.h	/^#define SECTION_SIZE /;"	d	language:C++
SHADOW_BG	scripts/kconfig/lxdialog/colors.h	/^#define SHADOW_BG /;"	d	language:C++
SHADOW_FG	scripts/kconfig/lxdialog/colors.h	/^#define SHADOW_FG /;"	d	language:C++
SHADOW_HL	scripts/kconfig/lxdialog/colors.h	/^#define SHADOW_HL /;"	d	language:C++
SINGLE_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	language:C	enum:__anon51b0ba2a0103	file:
SPLIT_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	language:C	enum:__anon51b0ba2a0103	file:
SPSR_EL1	arch/arm64/include/asm/sysregs.h	/^#define SPSR_EL1 /;"	d	language:C++
SPSR_EL1h	arch/arm64/include/asm/sysregs.h	/^#define SPSR_EL1h /;"	d	language:C++
SPSR_EL2	arch/arm64/include/asm/sysregs.h	/^#define SPSR_EL2 /;"	d	language:C++
SPSR_EL2h	arch/arm64/include/asm/sysregs.h	/^#define SPSR_EL2h /;"	d	language:C++
SPSR_MASK_ALL	arch/arm64/include/asm/sysregs.h	/^#define SPSR_MASK_ALL /;"	d	language:C++
SRCARCH	Makefile	/^SRCARCH         := $(ARCH)$/;"	m	language:Make
SRCTREE	scripts/kconfig/lkc.h	/^#define SRCTREE /;"	d	language:C++
START_STRSIZE	scripts/kconfig/lex.zconf.c	/^#define START_STRSIZE	/;"	d	language:C	file:
STRING	scripts/kconfig/lex.zconf.c	/^#define STRING /;"	d	language:C	file:
STRIP	Makefile	/^STRIP		= $(CROSS_COMPILE)strip$/;"	m	language:Make
SUBARCH	Makefile	/^SUBARCH := arm64$/;"	m	language:Make
SUBARCH_CROSS_COMPILE	Makefile	/^SUBARCH_CROSS_COMPILE := aarch64-linux-gnu-$/;"	m	language:Make
SUBLEVEL	Makefile	/^SUBLEVEL = 0$/;"	m	language:Make
SYMBOL_AUTO	scripts/kconfig/expr.h	/^#define SYMBOL_AUTO	/;"	d	language:C++
SYMBOL_CHANGED	scripts/kconfig/expr.h	/^#define SYMBOL_CHANGED	/;"	d	language:C++
SYMBOL_CHECK	scripts/kconfig/expr.h	/^#define SYMBOL_CHECK	/;"	d	language:C++
SYMBOL_CHECKED	scripts/kconfig/expr.h	/^#define SYMBOL_CHECKED	/;"	d	language:C++
SYMBOL_CHOICE	scripts/kconfig/expr.h	/^#define SYMBOL_CHOICE	/;"	d	language:C++
SYMBOL_CHOICEVAL	scripts/kconfig/expr.h	/^#define SYMBOL_CHOICEVAL	/;"	d	language:C++
SYMBOL_CONST	scripts/kconfig/expr.h	/^#define SYMBOL_CONST	/;"	d	language:C++
SYMBOL_DEF	scripts/kconfig/expr.h	/^#define SYMBOL_DEF	/;"	d	language:C++
SYMBOL_DEF3	scripts/kconfig/expr.h	/^#define SYMBOL_DEF3	/;"	d	language:C++
SYMBOL_DEF4	scripts/kconfig/expr.h	/^#define SYMBOL_DEF4	/;"	d	language:C++
SYMBOL_DEF_AUTO	scripts/kconfig/expr.h	/^#define SYMBOL_DEF_AUTO	/;"	d	language:C++
SYMBOL_DEF_USER	scripts/kconfig/expr.h	/^#define SYMBOL_DEF_USER	/;"	d	language:C++
SYMBOL_HASHMASK	scripts/kconfig/expr.h	/^#define SYMBOL_HASHMASK	/;"	d	language:C++
SYMBOL_HASHSIZE	scripts/kconfig/expr.h	/^#define SYMBOL_HASHSIZE	/;"	d	language:C++
SYMBOL_MAXLENGTH	scripts/kconfig/expr.h	/^#define SYMBOL_MAXLENGTH	/;"	d	language:C++
SYMBOL_OPTIONAL	scripts/kconfig/expr.h	/^#define SYMBOL_OPTIONAL	/;"	d	language:C++
SYMBOL_PRINTED	scripts/kconfig/expr.h	/^#define SYMBOL_PRINTED	/;"	d	language:C++
SYMBOL_VALID	scripts/kconfig/expr.h	/^#define SYMBOL_VALID	/;"	d	language:C++
SYMBOL_WARNED	scripts/kconfig/expr.h	/^#define SYMBOL_WARNED	/;"	d	language:C++
SYMBOL_WRITE	scripts/kconfig/expr.h	/^#define SYMBOL_WRITE	/;"	d	language:C++
SYMLINK	Makefile	/^SYMLINK		:= ln -fsn$/;"	m	language:Make
SYS_BOOTLOAD	include/target/config.h	/^#define SYS_BOOTLOAD /;"	d	language:C++
SYS_FAIRNESS	include/target/config.h	/^#define SYS_FAIRNESS /;"	d	language:C++
SYS_REALTIME	include/target/config.h	/^#define SYS_REALTIME /;"	d	language:C++
S_BOOLEAN	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_DEF_AUTO	scripts/kconfig/expr.h	/^	S_DEF_AUTO,$/;"	e	language:C++	enum:__anon4cdf64a10103
S_DEF_USER	scripts/kconfig/expr.h	/^	S_DEF_USER,		\/* main user value *\/$/;"	e	language:C++	enum:__anon4cdf64a10103
S_HEX	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_INT	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_IRWXU	scripts/kconfig/lkc_port.h	/^#define S_IRWXU	/;"	d	language:C++
S_ISDIR	scripts/kconfig/lkc_port.h	/^#define S_ISDIR(/;"	d	language:C++	signature:(x)
S_ISREG	scripts/kconfig/lkc_port.h	/^#define S_ISREG(/;"	d	language:C++	signature:(x)
S_OTHER	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_STRING	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_TRISTATE	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
S_UNKNOWN	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	language:C++	enum:symbol_type
TAB	scripts/kconfig/lxdialog/dialog.h	/^#define TAB /;"	d	language:C++
TABLE_SHIFT	arch/arm64/include/asm/mm.h	/^#define TABLE_SHIFT /;"	d	language:C++
TAG_BG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_BG /;"	d	language:C++
TAG_FG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_FG /;"	d	language:C++
TAG_HL	scripts/kconfig/lxdialog/colors.h	/^#define TAG_HL /;"	d	language:C++
TAG_KEY_BG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_BG /;"	d	language:C++
TAG_KEY_FG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_FG /;"	d	language:C++
TAG_KEY_HL	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_HL /;"	d	language:C++
TAG_KEY_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_SELECTED_BG /;"	d	language:C++
TAG_KEY_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_SELECTED_FG /;"	d	language:C++
TAG_KEY_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	/^#define TAG_KEY_SELECTED_HL /;"	d	language:C++
TAG_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_SELECTED_BG /;"	d	language:C++
TAG_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	/^#define TAG_SELECTED_FG /;"	d	language:C++
TAG_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	/^#define TAG_SELECTED_HL /;"	d	language:C++
TARGETINCLUDE	Makefile	/^TARGETINCLUDE   := -Iinclude -Iinclude\/std \\$/;"	m	language:Make
TF_COMMAND	scripts/kconfig/lkc.h	/^#define TF_COMMAND	/;"	d	language:C++
TF_OPTION	scripts/kconfig/lkc.h	/^#define TF_OPTION	/;"	d	language:C++
TF_PARAM	scripts/kconfig/lkc.h	/^#define TF_PARAM	/;"	d	language:C++
TITLE_BG	scripts/kconfig/lxdialog/colors.h	/^#define TITLE_BG /;"	d	language:C++
TITLE_FG	scripts/kconfig/lxdialog/colors.h	/^#define TITLE_FG /;"	d	language:C++
TITLE_HL	scripts/kconfig/lxdialog/colors.h	/^#define TITLE_HL /;"	d	language:C++
TOPDIR	Makefile	/^TOPDIR		:= $(srctree)$/;"	m	language:Make
TOTAL_KEYWORDS	scripts/kconfig/zconf.hash.c	/^      TOTAL_KEYWORDS = 33,$/;"	e	language:C	enum:kconf_id_lookup::__anond60376ef0103	file:
TR	scripts/kconfig/lxdialog/dialog.h	/^#define TR(/;"	d	language:C++	signature:(params)
T_AND	scripts/kconfig/zconf.tab.c	/^     T_AND = 288,$/;"	e	language:C	enum:yytokentype	file:
T_AND	scripts/kconfig/zconf.tab.c	/^#define T_AND /;"	d	language:C	file:
T_CHOICE	scripts/kconfig/zconf.tab.c	/^     T_CHOICE = 262,$/;"	e	language:C	enum:yytokentype	file:
T_CHOICE	scripts/kconfig/zconf.tab.c	/^#define T_CHOICE /;"	d	language:C	file:
T_CLOSE_PAREN	scripts/kconfig/zconf.tab.c	/^     T_CLOSE_PAREN = 284,$/;"	e	language:C	enum:yytokentype	file:
T_CLOSE_PAREN	scripts/kconfig/zconf.tab.c	/^#define T_CLOSE_PAREN /;"	d	language:C	file:
T_COMMENT	scripts/kconfig/zconf.tab.c	/^     T_COMMENT = 264,$/;"	e	language:C	enum:yytokentype	file:
T_COMMENT	scripts/kconfig/zconf.tab.c	/^#define T_COMMENT /;"	d	language:C	file:
T_CONFIG	scripts/kconfig/zconf.tab.c	/^     T_CONFIG = 265,$/;"	e	language:C	enum:yytokentype	file:
T_CONFIG	scripts/kconfig/zconf.tab.c	/^#define T_CONFIG /;"	d	language:C	file:
T_DEFAULT	scripts/kconfig/zconf.tab.c	/^     T_DEFAULT = 276,$/;"	e	language:C	enum:yytokentype	file:
T_DEFAULT	scripts/kconfig/zconf.tab.c	/^#define T_DEFAULT /;"	d	language:C	file:
T_DEPENDS	scripts/kconfig/zconf.tab.c	/^     T_DEPENDS = 271,$/;"	e	language:C	enum:yytokentype	file:
T_DEPENDS	scripts/kconfig/zconf.tab.c	/^#define T_DEPENDS /;"	d	language:C	file:
T_ENDCHOICE	scripts/kconfig/zconf.tab.c	/^     T_ENDCHOICE = 263,$/;"	e	language:C	enum:yytokentype	file:
T_ENDCHOICE	scripts/kconfig/zconf.tab.c	/^#define T_ENDCHOICE /;"	d	language:C	file:
T_ENDIF	scripts/kconfig/zconf.tab.c	/^     T_ENDIF = 270,$/;"	e	language:C	enum:yytokentype	file:
T_ENDIF	scripts/kconfig/zconf.tab.c	/^#define T_ENDIF /;"	d	language:C	file:
T_ENDMENU	scripts/kconfig/zconf.tab.c	/^     T_ENDMENU = 260,$/;"	e	language:C	enum:yytokentype	file:
T_ENDMENU	scripts/kconfig/zconf.tab.c	/^#define T_ENDMENU /;"	d	language:C	file:
T_EOL	scripts/kconfig/zconf.tab.c	/^     T_EOL = 286,$/;"	e	language:C	enum:yytokentype	file:
T_EOL	scripts/kconfig/zconf.tab.c	/^#define T_EOL /;"	d	language:C	file:
T_EQUAL	scripts/kconfig/zconf.tab.c	/^     T_EQUAL = 289,$/;"	e	language:C	enum:yytokentype	file:
T_EQUAL	scripts/kconfig/zconf.tab.c	/^#define T_EQUAL /;"	d	language:C	file:
T_HELP	scripts/kconfig/zconf.tab.c	/^     T_HELP = 267,$/;"	e	language:C	enum:yytokentype	file:
T_HELP	scripts/kconfig/zconf.tab.c	/^#define T_HELP /;"	d	language:C	file:
T_HELPTEXT	scripts/kconfig/zconf.tab.c	/^     T_HELPTEXT = 268,$/;"	e	language:C	enum:yytokentype	file:
T_HELPTEXT	scripts/kconfig/zconf.tab.c	/^#define T_HELPTEXT /;"	d	language:C	file:
T_IF	scripts/kconfig/zconf.tab.c	/^     T_IF = 269,$/;"	e	language:C	enum:yytokentype	file:
T_IF	scripts/kconfig/zconf.tab.c	/^#define T_IF /;"	d	language:C	file:
T_MAINMENU	scripts/kconfig/zconf.tab.c	/^     T_MAINMENU = 258,$/;"	e	language:C	enum:yytokentype	file:
T_MAINMENU	scripts/kconfig/zconf.tab.c	/^#define T_MAINMENU /;"	d	language:C	file:
T_MENU	scripts/kconfig/zconf.tab.c	/^     T_MENU = 259,$/;"	e	language:C	enum:yytokentype	file:
T_MENU	scripts/kconfig/zconf.tab.c	/^#define T_MENU /;"	d	language:C	file:
T_MENUCONFIG	scripts/kconfig/zconf.tab.c	/^     T_MENUCONFIG = 266,$/;"	e	language:C	enum:yytokentype	file:
T_MENUCONFIG	scripts/kconfig/zconf.tab.c	/^#define T_MENUCONFIG /;"	d	language:C	file:
T_NOT	scripts/kconfig/zconf.tab.c	/^     T_NOT = 290$/;"	e	language:C	enum:yytokentype	file:
T_NOT	scripts/kconfig/zconf.tab.c	/^#define T_NOT /;"	d	language:C	file:
T_ON	scripts/kconfig/zconf.tab.c	/^     T_ON = 280,$/;"	e	language:C	enum:yytokentype	file:
T_ON	scripts/kconfig/zconf.tab.c	/^#define T_ON /;"	d	language:C	file:
T_OPEN_PAREN	scripts/kconfig/zconf.tab.c	/^     T_OPEN_PAREN = 285,$/;"	e	language:C	enum:yytokentype	file:
T_OPEN_PAREN	scripts/kconfig/zconf.tab.c	/^#define T_OPEN_PAREN /;"	d	language:C	file:
T_OPTION	scripts/kconfig/zconf.tab.c	/^     T_OPTION = 279,$/;"	e	language:C	enum:yytokentype	file:
T_OPTION	scripts/kconfig/zconf.tab.c	/^#define T_OPTION /;"	d	language:C	file:
T_OPTIONAL	scripts/kconfig/zconf.tab.c	/^     T_OPTIONAL = 273,$/;"	e	language:C	enum:yytokentype	file:
T_OPTIONAL	scripts/kconfig/zconf.tab.c	/^#define T_OPTIONAL /;"	d	language:C	file:
T_OPT_DEFCONFIG_LIST	scripts/kconfig/lkc.h	/^#define T_OPT_DEFCONFIG_LIST	/;"	d	language:C++
T_OPT_MODULES	scripts/kconfig/lkc.h	/^#define T_OPT_MODULES	/;"	d	language:C++
T_OR	scripts/kconfig/zconf.tab.c	/^     T_OR = 287,$/;"	e	language:C	enum:yytokentype	file:
T_OR	scripts/kconfig/zconf.tab.c	/^#define T_OR /;"	d	language:C	file:
T_PROMPT	scripts/kconfig/zconf.tab.c	/^     T_PROMPT = 274,$/;"	e	language:C	enum:yytokentype	file:
T_PROMPT	scripts/kconfig/zconf.tab.c	/^#define T_PROMPT /;"	d	language:C	file:
T_RANGE	scripts/kconfig/zconf.tab.c	/^     T_RANGE = 278,$/;"	e	language:C	enum:yytokentype	file:
T_RANGE	scripts/kconfig/zconf.tab.c	/^#define T_RANGE /;"	d	language:C	file:
T_REQUIRES	scripts/kconfig/zconf.tab.c	/^     T_REQUIRES = 272,$/;"	e	language:C	enum:yytokentype	file:
T_REQUIRES	scripts/kconfig/zconf.tab.c	/^#define T_REQUIRES /;"	d	language:C	file:
T_SELECT	scripts/kconfig/zconf.tab.c	/^     T_SELECT = 277,$/;"	e	language:C	enum:yytokentype	file:
T_SELECT	scripts/kconfig/zconf.tab.c	/^#define T_SELECT /;"	d	language:C	file:
T_SOURCE	scripts/kconfig/zconf.tab.c	/^     T_SOURCE = 261,$/;"	e	language:C	enum:yytokentype	file:
T_SOURCE	scripts/kconfig/zconf.tab.c	/^#define T_SOURCE /;"	d	language:C	file:
T_TYPE	scripts/kconfig/zconf.tab.c	/^     T_TYPE = 275,$/;"	e	language:C	enum:yytokentype	file:
T_TYPE	scripts/kconfig/zconf.tab.c	/^#define T_TYPE /;"	d	language:C	file:
T_UNEQUAL	scripts/kconfig/zconf.tab.c	/^     T_UNEQUAL = 283,$/;"	e	language:C	enum:yytokentype	file:
T_UNEQUAL	scripts/kconfig/zconf.tab.c	/^#define T_UNEQUAL /;"	d	language:C	file:
T_WORD	scripts/kconfig/zconf.tab.c	/^     T_WORD = 281,$/;"	e	language:C	enum:yytokentype	file:
T_WORD	scripts/kconfig/zconf.tab.c	/^#define T_WORD /;"	d	language:C	file:
T_WORD_QUOTE	scripts/kconfig/zconf.tab.c	/^     T_WORD_QUOTE = 282,$/;"	e	language:C	enum:yytokentype	file:
T_WORD_QUOTE	scripts/kconfig/zconf.tab.c	/^#define T_WORD_QUOTE /;"	d	language:C	file:
To	scripts/checkpatch.pl	/^	To:|$/;"	l	language:Perl
UARROW_BG	scripts/kconfig/lxdialog/colors.h	/^#define UARROW_BG /;"	d	language:C++
UARROW_FG	scripts/kconfig/lxdialog/colors.h	/^#define UARROW_FG /;"	d	language:C++
UARROW_HL	scripts/kconfig/lxdialog/colors.h	/^#define UARROW_HL /;"	d	language:C++
UINT16_MAX	scripts/kconfig/lex.zconf.c	/^#define UINT16_MAX /;"	d	language:C	file:
UINT32_MAX	scripts/kconfig/lex.zconf.c	/^#define UINT32_MAX /;"	d	language:C	file:
UINT8_MAX	scripts/kconfig/lex.zconf.c	/^#define UINT8_MAX /;"	d	language:C	file:
ULL	include/target/compiler_gcc.h	/^#define ULL(/;"	d	language:C++	signature:(x)
USERINCLUDE	Makefile	/^USERINCLUDE    := \\$/;"	m	language:Make
UTS_MACHINE	Makefile	/^UTS_MACHINE := $(ARCH)$/;"	m	language:Make
U_BASE	arch/arm64/mach-rpi/mach/uart.h	/^#define U_BASE /;"	d	language:C++
U_CR_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_CR_REG /;"	d	language:C++
U_DATA_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_DATA_REG /;"	d	language:C++
U_FBRD_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_FBRD_REG /;"	d	language:C++
U_FR_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_FR_REG /;"	d	language:C++
U_IBRD_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_IBRD_REG /;"	d	language:C++
U_IMSC_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_IMSC_REG /;"	d	language:C++
U_LCRH_REG	arch/arm64/mach-rpi/mach/uart.h	/^#define U_LCRH_REG /;"	d	language:C++
Usage	scripts/checkpatch.pl	/^Usage: $P [OPTION]... [FILE]...$/;"	l	language:Perl
Usage	scripts/kconfig/lxdialog/lxdialog.c	/^static void Usage(const char *name)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * name)
VERSION	Makefile	/^VERSION = 1$/;"	m	language:Make
VPATH	Makefile	/^VPATH		:= $(srctree)$/;"	m	language:Make
Version	scripts/checkpatch.pl	/^Version: $V$/;"	l	language:Perl
WARN	scripts/checkpatch.pl	/^sub WARN {$/;"	s	language:Perl
WEAK	include/target/linkage.h	/^#define WEAK(/;"	d	language:C++	signature:(name)
Win95	scripts/kconfig/lkc_port.h	/^	enum { WinNT, Win95, Win98, WinUnknown };$/;"	e	language:C++	enum:uname::__anond81452400103
Win98	scripts/kconfig/lkc_port.h	/^	enum { WinNT, Win95, Win98, WinUnknown };$/;"	e	language:C++	enum:uname::__anond81452400103
WinNT	scripts/kconfig/lkc_port.h	/^	enum { WinNT, Win95, Win98, WinUnknown };$/;"	e	language:C++	enum:uname::__anond81452400103
WinUnknown	scripts/kconfig/lkc_port.h	/^	enum { WinNT, Win95, Win98, WinUnknown };$/;"	e	language:C++	enum:uname::__anond81452400103
YYABORT	scripts/kconfig/zconf.tab.c	/^#define YYABORT	/;"	d	language:C	file:
YYACCEPT	scripts/kconfig/zconf.tab.c	/^#define YYACCEPT	/;"	d	language:C	file:
YYBACKUP	scripts/kconfig/zconf.tab.c	/^#define YYBACKUP(/;"	d	language:C	file:	signature:(Token,Value)
YYBISON	scripts/kconfig/zconf.tab.c	/^#define YYBISON /;"	d	language:C	file:
YYBISON_VERSION	scripts/kconfig/zconf.tab.c	/^#define YYBISON_VERSION /;"	d	language:C	file:
YYCOPY	scripts/kconfig/zconf.tab.c	/^#   define YYCOPY(/;"	d	language:C	file:	signature:(To,From,Count)
YYDEBUG	scripts/kconfig/zconf.tab.c	/^# define YYDEBUG /;"	d	language:C	file:
YYDEBUG	scripts/kconfig/zconf.tab.c	/^#define YYDEBUG /;"	d	language:C	file:
YYDPRINTF	scripts/kconfig/zconf.tab.c	/^# define YYDPRINTF(/;"	d	language:C	file:	signature:(Args)
YYEMPTY	scripts/kconfig/zconf.tab.c	/^#define YYEMPTY	/;"	d	language:C	file:
YYEOF	scripts/kconfig/zconf.tab.c	/^#define YYEOF	/;"	d	language:C	file:
YYERRCODE	scripts/kconfig/zconf.tab.c	/^#define YYERRCODE	/;"	d	language:C	file:
YYERROR	scripts/kconfig/zconf.tab.c	/^#define YYERROR	/;"	d	language:C	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	/^# define YYERROR_VERBOSE /;"	d	language:C	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	/^#define YYERROR_VERBOSE$/;"	d	language:C	file:
YYERROR_VERBOSE_ARGS_MAXIMUM	scripts/kconfig/zconf.tab.c	/^#	  define YYERROR_VERBOSE_ARGS_MAXIMUM /;"	d	language:C	file:
YYFAIL	scripts/kconfig/zconf.tab.c	/^#define YYFAIL	/;"	d	language:C	file:
YYFINAL	scripts/kconfig/zconf.tab.c	/^#define YYFINAL /;"	d	language:C	file:
YYFPRINTF	scripts/kconfig/zconf.tab.c	/^#  define YYFPRINTF /;"	d	language:C	file:
YYFREE	scripts/kconfig/zconf.tab.c	/^#   define YYFREE /;"	d	language:C	file:
YYINCLUDED_STDLIB_H	scripts/kconfig/zconf.tab.c	/^#     define YYINCLUDED_STDLIB_H$/;"	d	language:C	file:
YYINITDEPTH	scripts/kconfig/zconf.tab.c	/^# define YYINITDEPTH /;"	d	language:C	file:
YYLAST	scripts/kconfig/zconf.tab.c	/^#define YYLAST /;"	d	language:C	file:
YYLEX	scripts/kconfig/zconf.tab.c	/^# define YYLEX /;"	d	language:C	file:
YYLLOC_DEFAULT	scripts/kconfig/zconf.tab.c	/^# define YYLLOC_DEFAULT(/;"	d	language:C	file:	signature:(Current,Rhs,N)
YYLSP_NEEDED	scripts/kconfig/zconf.tab.c	/^#define YYLSP_NEEDED /;"	d	language:C	file:
YYMALLOC	scripts/kconfig/zconf.tab.c	/^#   define YYMALLOC /;"	d	language:C	file:
YYMAXDEPTH	scripts/kconfig/zconf.tab.c	/^# define YYMAXDEPTH /;"	d	language:C	file:
YYMAXUTOK	scripts/kconfig/zconf.tab.c	/^#define YYMAXUTOK /;"	d	language:C	file:
YYNNTS	scripts/kconfig/zconf.tab.c	/^#define YYNNTS /;"	d	language:C	file:
YYNRULES	scripts/kconfig/zconf.tab.c	/^#define YYNRULES /;"	d	language:C	file:
YYNSTATES	scripts/kconfig/zconf.tab.c	/^#define YYNSTATES /;"	d	language:C	file:
YYNTOKENS	scripts/kconfig/zconf.tab.c	/^#define YYNTOKENS /;"	d	language:C	file:
YYPACT_NINF	scripts/kconfig/zconf.tab.c	/^#define YYPACT_NINF /;"	d	language:C	file:
YYPOPSTACK	scripts/kconfig/zconf.tab.c	/^#define YYPOPSTACK /;"	d	language:C	file:
YYPURE	scripts/kconfig/zconf.tab.c	/^#define YYPURE /;"	d	language:C	file:
YYRECOVERING	scripts/kconfig/zconf.tab.c	/^#define YYRECOVERING(/;"	d	language:C	file:	signature:()
YYRHSLOC	scripts/kconfig/zconf.tab.c	/^#define YYRHSLOC(/;"	d	language:C	file:	signature:(Rhs,K)
YYSIZE_T	scripts/kconfig/zconf.tab.c	/^# define YYSIZE_T /;"	d	language:C	file:
YYSKELETON_NAME	scripts/kconfig/zconf.tab.c	/^#define YYSKELETON_NAME /;"	d	language:C	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	/^#    define YYSTACK_ALLOC /;"	d	language:C	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	/^#  define YYSTACK_ALLOC /;"	d	language:C	file:
YYSTACK_ALLOC_MAXIMUM	scripts/kconfig/zconf.tab.c	/^#   define YYSTACK_ALLOC_MAXIMUM /;"	d	language:C	file:
YYSTACK_BYTES	scripts/kconfig/zconf.tab.c	/^# define YYSTACK_BYTES(/;"	d	language:C	file:	signature:(N)
YYSTACK_FREE	scripts/kconfig/zconf.tab.c	/^#  define YYSTACK_FREE /;"	d	language:C	file:
YYSTACK_FREE	scripts/kconfig/zconf.tab.c	/^#  define YYSTACK_FREE(/;"	d	language:C	file:	signature:(Ptr)
YYSTACK_GAP_MAXIMUM	scripts/kconfig/zconf.tab.c	/^# define YYSTACK_GAP_MAXIMUM /;"	d	language:C	file:
YYSTACK_RELOCATE	scripts/kconfig/zconf.tab.c	/^# define YYSTACK_RELOCATE(/;"	d	language:C	file:	signature:(Stack)
YYSTATE	scripts/kconfig/lex.zconf.c	/^#define YYSTATE /;"	d	language:C	file:
YYSTYPE	scripts/kconfig/zconf.tab.c	/^typedef union YYSTYPE {$/;"	u	language:C	file:
YYSTYPE	scripts/kconfig/zconf.tab.c	/^} YYSTYPE;$/;"	t	language:C	typeref:union:YYSTYPE	file:
YYSTYPE_IS_DECLARED	scripts/kconfig/zconf.tab.c	/^# define YYSTYPE_IS_DECLARED /;"	d	language:C	file:
YYSTYPE_IS_TRIVIAL	scripts/kconfig/zconf.tab.c	/^# define YYSTYPE_IS_TRIVIAL /;"	d	language:C	file:
YYTABLES_NAME	scripts/kconfig/lex.zconf.c	/^#define YYTABLES_NAME /;"	d	language:C	file:
YYTABLE_NINF	scripts/kconfig/zconf.tab.c	/^#define YYTABLE_NINF /;"	d	language:C	file:
YYTERROR	scripts/kconfig/zconf.tab.c	/^#define YYTERROR	/;"	d	language:C	file:
YYTOKENTYPE	scripts/kconfig/zconf.tab.c	/^# define YYTOKENTYPE$/;"	d	language:C	file:
YYTOKEN_TABLE	scripts/kconfig/zconf.tab.c	/^# define YYTOKEN_TABLE /;"	d	language:C	file:
YYTRANSLATE	scripts/kconfig/zconf.tab.c	/^#define YYTRANSLATE(/;"	d	language:C	file:	signature:(YYX)
YYUNDEFTOK	scripts/kconfig/zconf.tab.c	/^#define YYUNDEFTOK /;"	d	language:C	file:
YY_	scripts/kconfig/zconf.tab.c	/^#   define YY_(/;"	d	language:C	file:	signature:(msgid)
YY_	scripts/kconfig/zconf.tab.c	/^#  define YY_(/;"	d	language:C	file:	signature:(msgid)
YY_AT_BOL	scripts/kconfig/lex.zconf.c	/^#define YY_AT_BOL(/;"	d	language:C	file:	signature:()
YY_BREAK	scripts/kconfig/lex.zconf.c	/^#define YY_BREAK /;"	d	language:C	file:
YY_BUFFER_EOF_PENDING	scripts/kconfig/lex.zconf.c	/^#define YY_BUFFER_EOF_PENDING /;"	d	language:C	file:
YY_BUFFER_NEW	scripts/kconfig/lex.zconf.c	/^#define YY_BUFFER_NEW /;"	d	language:C	file:
YY_BUFFER_NORMAL	scripts/kconfig/lex.zconf.c	/^#define YY_BUFFER_NORMAL /;"	d	language:C	file:
YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	language:C	typeref:struct:yy_buffer_state *	file:
YY_BUF_SIZE	scripts/kconfig/lex.zconf.c	/^#define YY_BUF_SIZE /;"	d	language:C	file:
YY_CHAR	scripts/kconfig/lex.zconf.c	/^typedef unsigned char YY_CHAR;$/;"	t	language:C	typeref:typename:unsigned char	file:
YY_CURRENT_BUFFER	scripts/kconfig/lex.zconf.c	/^#define YY_CURRENT_BUFFER /;"	d	language:C	file:
YY_CURRENT_BUFFER_LVALUE	scripts/kconfig/lex.zconf.c	/^#define YY_CURRENT_BUFFER_LVALUE /;"	d	language:C	file:
YY_DECL	scripts/kconfig/lex.zconf.c	/^#define YY_DECL /;"	d	language:C	file:
YY_DECL_IS_OURS	scripts/kconfig/lex.zconf.c	/^#define YY_DECL_IS_OURS /;"	d	language:C	file:
YY_DO_BEFORE_ACTION	scripts/kconfig/lex.zconf.c	/^#define YY_DO_BEFORE_ACTION /;"	d	language:C	file:
YY_END_OF_BUFFER	scripts/kconfig/lex.zconf.c	/^#define YY_END_OF_BUFFER /;"	d	language:C	file:
YY_END_OF_BUFFER_CHAR	scripts/kconfig/lex.zconf.c	/^#define YY_END_OF_BUFFER_CHAR /;"	d	language:C	file:
YY_EXIT_FAILURE	scripts/kconfig/lex.zconf.c	/^#define YY_EXIT_FAILURE /;"	d	language:C	file:
YY_EXTRA_TYPE	scripts/kconfig/lex.zconf.c	/^#define YY_EXTRA_TYPE /;"	d	language:C	file:
YY_FATAL_ERROR	scripts/kconfig/lex.zconf.c	/^#define YY_FATAL_ERROR(/;"	d	language:C	file:	signature:(msg)
YY_FLEX_MAJOR_VERSION	scripts/kconfig/lex.zconf.c	/^#define YY_FLEX_MAJOR_VERSION /;"	d	language:C	file:
YY_FLEX_MINOR_VERSION	scripts/kconfig/lex.zconf.c	/^#define YY_FLEX_MINOR_VERSION /;"	d	language:C	file:
YY_FLEX_SUBMINOR_VERSION	scripts/kconfig/lex.zconf.c	/^#define YY_FLEX_SUBMINOR_VERSION /;"	d	language:C	file:
YY_FLUSH_BUFFER	scripts/kconfig/lex.zconf.c	/^#define YY_FLUSH_BUFFER /;"	d	language:C	file:
YY_INPUT	scripts/kconfig/lex.zconf.c	/^#define YY_INPUT(/;"	d	language:C	file:	signature:(buf,result,max_size)
YY_INT_ALIGNED	scripts/kconfig/lex.zconf.c	/^#define  YY_INT_ALIGNED /;"	d	language:C	file:
YY_LESS_LINENO	scripts/kconfig/lex.zconf.c	/^    #define YY_LESS_LINENO(/;"	d	language:C	file:	signature:(n)
YY_LOCATION_PRINT	scripts/kconfig/zconf.tab.c	/^#  define YY_LOCATION_PRINT(/;"	d	language:C	file:	signature:(File,Loc)
YY_MORE_ADJ	scripts/kconfig/lex.zconf.c	/^#define YY_MORE_ADJ /;"	d	language:C	file:
YY_NEW_FILE	scripts/kconfig/lex.zconf.c	/^#define YY_NEW_FILE /;"	d	language:C	file:
YY_NULL	scripts/kconfig/lex.zconf.c	/^#define YY_NULL /;"	d	language:C	file:
YY_NUM_RULES	scripts/kconfig/lex.zconf.c	/^#define YY_NUM_RULES /;"	d	language:C	file:
YY_READ_BUF_SIZE	scripts/kconfig/lex.zconf.c	/^#define YY_READ_BUF_SIZE /;"	d	language:C	file:
YY_REDUCE_PRINT	scripts/kconfig/zconf.tab.c	/^# define YY_REDUCE_PRINT(/;"	d	language:C	file:	signature:(Rule)
YY_RESTORE_YY_MORE_OFFSET	scripts/kconfig/lex.zconf.c	/^#define YY_RESTORE_YY_MORE_OFFSET$/;"	d	language:C	file:
YY_RULE_SETUP	scripts/kconfig/lex.zconf.c	/^#define YY_RULE_SETUP /;"	d	language:C	file:
YY_SC_TO_UI	scripts/kconfig/lex.zconf.c	/^#define YY_SC_TO_UI(/;"	d	language:C	file:	signature:(c)
YY_SKIP_YYWRAP	scripts/kconfig/lex.zconf.c	/^#define YY_SKIP_YYWRAP$/;"	d	language:C	file:
YY_STACK_PRINT	scripts/kconfig/zconf.tab.c	/^# define YY_STACK_PRINT(/;"	d	language:C	file:	signature:(Bottom,Top)
YY_START	scripts/kconfig/lex.zconf.c	/^#define YY_START /;"	d	language:C	file:
YY_START_STACK_INCR	scripts/kconfig/lex.zconf.c	/^#define YY_START_STACK_INCR /;"	d	language:C	file:
YY_STATE_BUF_SIZE	scripts/kconfig/lex.zconf.c	/^#define YY_STATE_BUF_SIZE /;"	d	language:C	file:
YY_STATE_EOF	scripts/kconfig/lex.zconf.c	/^#define YY_STATE_EOF(/;"	d	language:C	file:	signature:(state)
YY_STRUCT_YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	/^#define YY_STRUCT_YY_BUFFER_STATE$/;"	d	language:C	file:
YY_SYMBOL_PRINT	scripts/kconfig/zconf.tab.c	/^# define YY_SYMBOL_PRINT(/;"	d	language:C	file:	signature:(Title,Type,Value,Location)
YY_TYPEDEF_YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	/^#define YY_TYPEDEF_YY_BUFFER_STATE$/;"	d	language:C	file:
YY_TYPEDEF_YY_SIZE_T	scripts/kconfig/lex.zconf.c	/^#define YY_TYPEDEF_YY_SIZE_T$/;"	d	language:C	file:
YY_USER_ACTION	scripts/kconfig/lex.zconf.c	/^#define YY_USER_ACTION$/;"	d	language:C	file:
YY_USE_CONST	scripts/kconfig/lex.zconf.c	/^#define YY_USE_CONST$/;"	d	language:C	file:
_	scripts/kconfig/lkc.h	/^#define _(/;"	d	language:C++	signature:(text)
_	scripts/kconfig/qconf.cc	/^# define _ /;"	d	language:C++	file:
_AC	include/target/const.h	/^#define _AC(/;"	d	language:C++	signature:(X,Y)
_AT	include/target/const.h	/^#define _AT(/;"	d	language:C++	signature:(T,X)
_MM_H	arch/arm64/include/asm/mm.h	/^#define	_MM_H$/;"	d	language:C++
_P_BASE_H	arch/arm64/include/asm/io.h	/^#define _P_BASE_H$/;"	d	language:C++
_P_BASE_H	arch/arm64/mach-rpi/mach/base.h	/^#define	_P_BASE_H$/;"	d	language:C++
_P_GPIO_H	arch/arm64/mach-rpi/mach/gpio.h	/^#define	_P_GPIO_H$/;"	d	language:C++
_P_MINI_UART_H	arch/arm64/mach-rpi/mach/mini_uart.h	/^#define _P_MINI_UART_H$/;"	d	language:C++
_P_UART_H	arch/arm64/mach-rpi/mach/uart.h	/^#define	_P_UART_H$/;"	d	language:C++
_SYSREGS_H	arch/arm64/include/asm/sysregs.h	/^#define _SYSREGS_H$/;"	d	language:C++
_UART_H	arch/arm64/include/asm/uart.h	/^#define	_UART_H$/;"	d	language:C++
_UTSNAME_DOMAIN_LENGTH	scripts/kconfig/lkc_port.h	/^#define _UTSNAME_DOMAIN_LENGTH /;"	d	language:C++
_UTSNAME_LENGTH	scripts/kconfig/lkc_port.h	/^#define _UTSNAME_LENGTH /;"	d	language:C++
_UTSNAME_NODENAME_LENGTH	scripts/kconfig/lkc_port.h	/^#define _UTSNAME_NODENAME_LENGTH /;"	d	language:C++
_VECTOR	include/target/compiler_gcc.h	/^#define _VECTOR(/;"	d	language:C++	signature:(N)
__AC	include/target/const.h	/^#define __AC(/;"	d	language:C++	signature:(X,Y)
__ALIGN	include/target/linkage.h	/^#define __ALIGN	/;"	d	language:C++
__ALIGN_STR	include/target/linkage.h	/^#define __ALIGN_STR	/;"	d	language:C++
__COMPILER_GCC_H_INCLUDE__	include/target/compiler_gcc.h	/^#define __COMPILER_GCC_H_INCLUDE__$/;"	d	language:C++
__COMPILER_H_INCLUDE__	include/target/compiler.h	/^#define __COMPILER_H_INCLUDE__$/;"	d	language:C++
__CONFIG_H_INCLUDE__	include/target/config.h	/^#define __CONFIG_H_INCLUDE__$/;"	d	language:C++
__CONST_H_INCLUDE__	include/target/const.h	/^#define __CONST_H_INCLUDE__$/;"	d	language:C++
__HEAD	include/target/init.h	/^#define __HEAD	/;"	d	language:C++
__INIT	include/target/init.h	/^#define __INIT	/;"	d	language:C++
__INIT_H_INCLUDE__	include/target/init.h	/^#define __INIT_H_INCLUDE__$/;"	d	language:C++
__INTR_ATTRS	include/target/compiler_gcc.h	/^#  define __INTR_ATTRS /;"	d	language:C++
__KBUILD_H_INCLUDE__	include/target/kbuild.h	/^#define __KBUILD_H_INCLUDE__$/;"	d	language:C++
__LINKAGE_H_INCLUDE__	include/target/linkage.h	/^#define __LINKAGE_H_INCLUDE__$/;"	d	language:C++
__LOVEC	include/target/init.h	/^#define __LOVEC	/;"	d	language:C++
__PAGE_ALIGNED_BSS	include/target/linkage.h	/^#define __PAGE_ALIGNED_BSS	/;"	d	language:C++
__PAGE_ALIGNED_DATA	include/target/linkage.h	/^#define __PAGE_ALIGNED_DATA	/;"	d	language:C++
__STDC_LIMIT_MACROS	scripts/kconfig/lex.zconf.c	/^#define __STDC_LIMIT_MACROS /;"	d	language:C	file:
__WIN32_PORTABLE_H	scripts/kconfig/lkc_port.h	/^#define __WIN32_PORTABLE_H$/;"	d	language:C++
__always_inline	include/target/compiler.h	/^#define __always_inline	/;"	d	language:C++
__always_inline	include/target/compiler_gcc.h	/^#define __always_inline	/;"	d	language:C++
__anon4790eb030103	scripts/kconfig/conf.c	/^enum {$/;"	g	language:C	file:
__anon4cdf64a10103	scripts/kconfig/expr.h	/^enum {$/;"	g	language:C++
__anon51b0ba2a0103	scripts/kconfig/gconf.c	/^enum {$/;"	g	language:C	file:
__anon51b0ba2a0203	scripts/kconfig/gconf.c	/^enum {$/;"	g	language:C	file:
__anond60376ef0103	scripts/kconfig/zconf.hash.c	/^    {$/;"	g	language:C	function:kconf_id_lookup	file:
__anond81452400103	scripts/kconfig/lkc_port.h	/^	enum { WinNT, Win95, Win98, WinUnknown };$/;"	g	language:C++	function:uname
__anonfd8a84d40108	scripts/kconfig/lex.zconf.c	/^static struct {$/;"	s	language:C	file:
__arch_getl	arch/arm64/include/asm/io.h	/^#define __arch_getl(/;"	d	language:C++	signature:(a)
__arch_putl	arch/arm64/include/asm/io.h	/^#define __arch_putl(/;"	d	language:C++	signature:(v,a)
__attribute__	scripts/kconfig/lkc_port.h	/^#define __attribute__(/;"	d	language:C++	signature:(x)
__compiler_offsetof	include/target/compiler_gcc.h	/^#define __compiler_offsetof(/;"	d	language:C++	signature:(a,b)
__expr_eliminate_eq	scripts/kconfig/expr.c	/^static void __expr_eliminate_eq(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:typename:void	file:	signature:(enum expr_type type,struct expr ** ep1,struct expr ** ep2)
__force	include/target/compiler_gcc.h	/^# define __force	/;"	d	language:C++
__force	include/target/compiler_gcc.h	/^# define __force$/;"	d	language:C++
__iomem	include/target/compiler_gcc.h	/^# define __iomem	/;"	d	language:C++
__iomem	include/target/compiler_gcc.h	/^# define __iomem$/;"	d	language:C++
__iormb	arch/arm64/include/asm/io.h	/^#define __iormb(/;"	d	language:C++	signature:()
__iowmb	arch/arm64/include/asm/io.h	/^#define __iowmb(/;"	d	language:C++	signature:()
__nocast	include/target/compiler_gcc.h	/^# define __nocast	/;"	d	language:C++
__nocast	include/target/compiler_gcc.h	/^# define __nocast$/;"	d	language:C++
__packed	include/target/compiler_gcc.h	/^#define __packed	/;"	d	language:C++
__page_aligned_bss	include/target/linkage.h	/^#define __page_aligned_bss	/;"	d	language:C++
__page_aligned_data	include/target/linkage.h	/^#define __page_aligned_data	/;"	d	language:C++
__safe	include/target/compiler_gcc.h	/^# define __safe	/;"	d	language:C++
__safe	include/target/compiler_gcc.h	/^# define __safe$/;"	d	language:C++
_all	Makefile	/^_all: all$/;"	t	language:Make
_localver-auto	Makefile	/^	_localver-auto = $(shell $(CONFIG_SHELL) \\$/;"	m	language:Make
_showDebug	scripts/kconfig/qconf.h	/^	bool _showDebug;$/;"	m	language:C++	class:ConfigInfoView	typeref:typename:bool
_start	arch/arm64/kernel/head.S	/^_start:$/;"	l	language:Asm
a_flags	Makefile	/^a_flags = -Wp,-MD,$(depfile) $(AFLAGS) $(AFLAGS_KERNEL) \\$/;"	m	language:Make
about1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="about1">$/;"	i	language:Glade
addColumn	scripts/kconfig/qconf.h	/^	void addColumn(colIdx idx, const QString& label)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(colIdx idx,const QString & label)
all	Makefile	/^all: openos$/;"	t	language:Make
all	arch/arm64/Makefile	/^all:	$(KBUILD_IMAGE)$/;"	t	language:Make
allmodconfig	scripts/kconfig/Makefile	/^allmodconfig: $(obj)\/conf$/;"	t	language:Make
allnoconfig	scripts/kconfig/Makefile	/^allnoconfig: $(obj)\/conf$/;"	t	language:Make
alloc_string	scripts/kconfig/lex.zconf.c	/^void alloc_string(const char *str, int size)$/;"	f	language:C	typeref:typename:void	signature:(const char * str,int size)
allyesconfig	scripts/kconfig/Makefile	/^allyesconfig: $(obj)\/conf$/;"	t	language:Make
always	scripts/Makefile	/^always		:= $(hostprogs-y)$/;"	m	language:Make
always	scripts/basic/Makefile	/^always		:= $(hostprogs-y)$/;"	m	language:Make
always	scripts/kconfig/Makefile	/^always := dochecklxdialog$/;"	m	language:Make
always	scripts/kconfig/lxdialog/Makefile	/^always		:= $(hostprogs-y) dochecklxdialog$/;"	m	language:Make
annotate_reset	scripts/checkpatch.pl	/^sub annotate_reset {$/;"	s	language:Perl
annotate_values	scripts/checkpatch.pl	/^sub annotate_values {$/;"	s	language:Perl
append_string	scripts/kconfig/lex.zconf.c	/^void append_string(const char *str, int size)$/;"	f	language:C	typeref:typename:void	signature:(const char * str,int size)
archclean	arch/arm64/Makefile	/^archclean:$/;"	t	language:Make
archhelp	arch/arm64/Makefile	/^define archhelp$/;"	m	language:Make
archprepare	Makefile	/^archprepare: prepare1$/;"	t	language:Make
archprepare	arch/arm64/Makefile	/^archprepare: maketools$/;"	t	language:Make
argmax	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	language:C	struct:Mode	typeref:typename:int	file:
argmin	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	language:C	struct:Mode	typeref:typename:int	file:
argmod	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	language:C	struct:Mode	typeref:typename:int	file:
arm64-obj-y	arch/arm64/kernel/Makefile	/^arm64-obj-y		:= mm.o$/;"	m	language:Make
ask_all	scripts/kconfig/conf.c	/^	ask_all,$/;"	e	language:C	enum:__anon4790eb030103	file:
ask_new	scripts/kconfig/conf.c	/^	ask_new,$/;"	e	language:C	enum:__anon4790eb030103	file:
ask_silent	scripts/kconfig/conf.c	/^	ask_silent,$/;"	e	language:C	enum:__anon4790eb030103	file:
asmlinkage	include/target/linkage.h	/^#define asmlinkage /;"	d	language:C++
asmlinkage_protect	include/target/linkage.h	/^# define asmlinkage_protect(/;"	d	language:C++	signature:(n,ret,args...)
asmregparm	include/target/linkage.h	/^# define asmregparm$/;"	d	language:C++
atr	scripts/kconfig/lxdialog/dialog.h	/^	chtype atr;	\/* Color attribute *\/$/;"	m	language:C++	struct:dialog_color	typeref:typename:chtype
attr_clear	scripts/kconfig/lxdialog/util.c	/^void attr_clear(WINDOW * win, int height, int width, chtype attr)$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * win,int height,int width,chtype attr)
backAction	scripts/kconfig/qconf.h	/^	QAction *backAction;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QAction *
back_btn	scripts/kconfig/gconf.c	/^GtkWidget *back_btn = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
back_lines	scripts/kconfig/lxdialog/textbox.c	/^static void back_lines(int n)$/;"	f	language:C	typeref:typename:void	file:	signature:(int n)
backtitle	scripts/kconfig/lxdialog/dialog.h	/^	const char *backtitle;$/;"	m	language:C++	struct:dialog_info	typeref:typename:const char *
basename	scripts/kconfig/lkc_port.h	/^static inline char *basename(const char *path)$/;"	f	language:C++	typeref:typename:char *	signature:(const char * path)
beginGroup	scripts/kconfig/qconf.h	/^	void beginGroup(const QString& group) { }$/;"	f	language:C++	class:QSettings	typeref:typename:void	signature:(const QString & group)
begin_reached	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	language:C	typeref:typename:int	file:
openos	Makefile	/^openos: $(openos-lds) $(openos-init) $(openos-main) FORCE$/;"	t	language:Make
openos	arch/arm64/boot/Makefile	/^openos := openos.bin$/;"	m	language:Make
openos-all	Makefile	/^openos-all  := $(openos-init) $(openos-main)$/;"	m	language:Make
openos-alldirs	Makefile	/^openos-alldirs	:= $(sort $(openos-dirs) $(patsubst %\/,%,$(filter %\/, \\$/;"	m	language:Make
openos-dirs	Makefile	/^openos-dirs	:= $(patsubst %\/,%,$(filter %\/, $(init-y) $(init-m) \\$/;"	m	language:Make
openos-init	Makefile	/^openos-init := $(head-y) $(init-y)$/;"	m	language:Make
openos-lds	Makefile	/^openos-lds  := arch\/$(ARCH)\/kernel\/openos.lds$/;"	m	language:Make
openos-main	Makefile	/^openos-main := $(core-y) $(libs-y) $(drivers-y)$/;"	m	language:Make
openos-map	Makefile	/^openos-map  := openos.map$/;"	m	language:Make
openos.bin	arch/arm64/Makefile	/^openos.bin: openos$/;"	t	language:Make
openos.strip	arch/arm64/boot/Makefile	/^openos.strip: openos FORCE$/;"	t	language:Make
bg	scripts/kconfig/lxdialog/dialog.h	/^	int bg;		\/* background *\/$/;"	m	language:C++	struct:dialog_color	typeref:typename:int
bindtextdomain	scripts/kconfig/lkc.h	/^# define bindtextdomain(/;"	d	language:C++	signature:(Domainname,Dirname)
bool	scripts/kconfig/lkc_port.h	/^#define bool /;"	d	language:C++
boot	arch/arm64/Makefile	/^boot := arch\/arm64\/boot$/;"	m	language:Make
border	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color border;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
browsed	scripts/kconfig/gconf.c	/^static struct menu *browsed; \/\/ browsed node for SPLIT view$/;"	v	language:C	typeref:struct:menu *	file:
bss_begin	arch/arm64/kernel/openos.lds.S	/^	bss_begin = .;$/;"	s	language:LdScript
bss_end	arch/arm64/kernel/openos.lds.S	/^	bss_end = .;$/;"	s	language:LdScript
buf	scripts/kconfig/lxdialog/textbox.c	/^static const char *buf;$/;"	v	language:C	typeref:typename:const char *	file:
buffer	scripts/kconfig/lex.zconf.c	/^struct buffer {$/;"	s	language:C	file:
build_conf	scripts/kconfig/mconf.c	/^static void build_conf(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
build_types	scripts/checkpatch.pl	/^sub build_types {$/;"	s	language:Perl
button1	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button1">$/;"	i	language:Glade
button2	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button2">$/;"	i	language:Glade
button3	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button3">$/;"	i	language:Glade
button4	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button4">$/;"	i	language:Glade
button5	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button5">$/;"	i	language:Glade
button6	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button6">$/;"	i	language:Glade
button7	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button7">$/;"	i	language:Glade
button8	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolButton" id="button8">$/;"	i	language:Glade
button_active	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_active;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
button_inactive	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_inactive;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
button_key_active	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_key_active;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
button_key_inactive	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_key_inactive;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
button_label_active	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_label_active;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
button_label_inactive	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_label_inactive;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
cat_vet	scripts/checkpatch.pl	/^sub cat_vet {$/;"	s	language:Perl
ccflags	scripts/kconfig/lxdialog/check-lxdialog.sh	/^ccflags()$/;"	f	language:Sh
cdebug	scripts/kconfig/zconf.tab.c	/^int cdebug = PRINTD;$/;"	v	language:C	typeref:typename:int
changeMenu	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::changeMenu(struct menu *menu)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(struct menu * menu)
changeValue	scripts/kconfig/qconf.cc	/^void ConfigList::changeValue(ConfigItem* item)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(ConfigItem * item)
change_sym_value	scripts/kconfig/gconf.c	/^static void change_sym_value(struct menu *menu, gint col)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu,gint col)
check	scripts/kconfig/lxdialog/check-lxdialog.sh	/^check() {$/;"	f	language:Sh
check	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color check;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
check-lxdialog	scripts/kconfig/Makefile	/^check-lxdialog  := $(srctree)\/$(src)\/lxdialog\/check-lxdialog.sh$/;"	m	language:Make
check-lxdialog	scripts/kconfig/lxdialog/Makefile	/^check-lxdialog  := $(srctree)\/$(src)\/check-lxdialog.sh$/;"	m	language:Make
check_absolute_file	scripts/checkpatch.pl	/^sub check_absolute_file {$/;"	s	language:Perl
check_conf	scripts/kconfig/conf.c	/^static void check_conf(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
check_selected	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color check_selected;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
check_stdin	scripts/kconfig/conf.c	/^static void check_stdin(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
check_x	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	language:C	typeref:typename:int	file:
child_count	scripts/kconfig/mconf.c	/^static int child_count;$/;"	v	language:C	typeref:typename:int	file:
choice	scripts/kconfig/zconf.y	/^choice: T_CHOICE T_EOL$/;"	l	language:YACC
choiceNoPix	scripts/kconfig/qconf.h	/^	QPixmap choiceYesPix, choiceNoPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
choiceYesPix	scripts/kconfig/qconf.h	/^	QPixmap choiceYesPix, choiceNoPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
choice_block	scripts/kconfig/zconf.y	/^choice_block:$/;"	l	language:YACC
choice_end	scripts/kconfig/zconf.y	/^choice_end: end$/;"	l	language:YACC
choice_entry	scripts/kconfig/zconf.y	/^choice_entry: choice choice_option_list$/;"	l	language:YACC
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_DEFAULT T_WORD if_expr T_EOL$/;"	l	language:YACC
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_OPTIONAL T_EOL$/;"	l	language:YACC
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_PROMPT prompt if_expr T_EOL$/;"	l	language:YACC
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_TYPE prompt_stmt_opt T_EOL$/;"	l	language:YACC
choice_option_list	scripts/kconfig/zconf.y	/^choice_option_list:$/;"	l	language:YACC
choice_stmt	scripts/kconfig/zconf.y	/^choice_stmt: choice_entry choice_block choice_end$/;"	l	language:YACC
clean	Makefile	/^clean := -f $(if $(KBUILD_SRC),$(srctree)\/)scripts\/Makefile.clean obj$/;"	m	language:Make
clean	Makefile	/^clean: archclean $(clean-dirs)$/;"	t	language:Make
clean	Makefile	/^clean: rm-dirs  := $(CLEAN_DIRS)$/;"	t	language:Make
clean	Makefile	/^clean: rm-files := $(CLEAN_FILES)$/;"	t	language:Make
clean-dirs	Makefile	/^clean-dirs      := $(addprefix _clean_,$(srctree) $(openos-alldirs))$/;"	m	language:Make
clean-files	init/Makefile	/^clean-files := ..\/include\/target\/compile.h$/;"	m	language:Make
clean-files	scripts/kconfig/Makefile	/^clean-files	:= lkc_defs.h qconf.moc .tmp_qtcheck \\$/;"	m	language:Make
clear_config	scripts/basic/fixdep.c	/^void clear_config(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
closeEvent	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::closeEvent(QCloseEvent* e)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(QCloseEvent * e)
cmd_as_o_S	Makefile	/^cmd_as_o_S       = $(CC) $(a_flags) -c -o $@ $<$/;"	m	language:Make
cmd_openos	Makefile	/^      cmd_openos = $(LD) $(LDFLAGS) $(LDFLAGS_openos) -o $@ \\$/;"	m	language:Make
cmd_openos_version	Makefile	/^      cmd_openos_version = set -e;                        \\$/;"	m	language:Make
cmd_files	Makefile	/^cmd_files := $(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))$/;"	m	language:Make
cmd_rmdirs	Makefile	/^      cmd_rmdirs = rm -rf $(rm-dirs)$/;"	m	language:Make
cmd_rmfiles	Makefile	/^      cmd_rmfiles = rm -f $(rm-files)$/;"	m	language:Make
cmd_strip	arch/arm64/boot/Makefile	/^      cmd_strip     = $(STRIP) -R .comment -R .note $< -o $@$/;"	m	language:Make
cmdline	scripts/basic/fixdep.c	/^char *cmdline;$/;"	v	language:C	typeref:typename:char *
colIdx	scripts/kconfig/qconf.h	/^enum colIdx {$/;"	g	language:C++
colMap	scripts/kconfig/qconf.h	/^	int colMap[colNr];$/;"	m	language:C++	class:ConfigList	typeref:typename:int[]
colNr	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
colRevMap	scripts/kconfig/qconf.h	/^	int colRevMap[colNr];$/;"	m	language:C++	class:ConfigList	typeref:typename:int[]
color	scripts/kconfig/gconf.c	/^GdkColor color;$/;"	v	language:C	typeref:typename:GdkColor
color_setup	scripts/kconfig/lxdialog/util.c	/^static void color_setup(const char *theme)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * theme)
cols	scripts/kconfig/mconf.c	/^static int rows = 0, cols = 0;$/;"	v	language:C	typeref:typename:int	file:
column2index	scripts/kconfig/gconf.c	/^static gint column2index(GtkTreeViewColumn * column)$/;"	f	language:C	typeref:typename:gint	file:	signature:(GtkTreeViewColumn * column)
comment	scripts/kconfig/zconf.y	/^comment: T_COMMENT prompt T_EOL$/;"	l	language:YACC
comment_stmt	scripts/kconfig/zconf.y	/^comment_stmt: comment depends_list$/;"	l	language:YACC
common_stmt	scripts/kconfig/zconf.y	/^common_stmt:$/;"	l	language:YACC
conf	scripts/kconfig/conf.c	/^static void conf(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
conf	scripts/kconfig/mconf.c	/^static void conf(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
conf-objs	scripts/kconfig/Makefile	/^conf-objs	:= conf.o  zconf.tab.o$/;"	m	language:Make
conf_askvalue	scripts/kconfig/conf.c	/^static int conf_askvalue(struct symbol *sym, const char *def)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct symbol * sym,const char * def)
conf_changed	scripts/kconfig/gconf.c	/^static void conf_changed(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
conf_changed	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::conf_changed(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
conf_changed_callback	scripts/kconfig/confdata.c	/^static void (*conf_changed_callback)(void);$/;"	v	language:C	typeref:typename:void (*)(void)	file:
conf_choice	scripts/kconfig/conf.c	/^static int conf_choice(struct menu *menu)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct menu * menu)
conf_choice	scripts/kconfig/mconf.c	/^static void conf_choice(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
conf_cleanup	scripts/kconfig/mconf.c	/^static void conf_cleanup(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
conf_cnt	scripts/kconfig/conf.c	/^static int conf_cnt;$/;"	v	language:C	typeref:typename:int	file:
conf_defname	scripts/kconfig/confdata.c	/^const char conf_defname[] = "arch\/$ARCH\/defconfig";$/;"	v	language:C	typeref:typename:const char[]
conf_expand_value	scripts/kconfig/confdata.c	/^static char *conf_expand_value(const char *in)$/;"	f	language:C	typeref:typename:char *	file:	signature:(const char * in)
conf_filename	scripts/kconfig/confdata.c	/^static const char *conf_filename;$/;"	v	language:C	typeref:typename:const char *	file:
conf_get_changed	scripts/kconfig/confdata.c	/^bool conf_get_changed(void)$/;"	f	language:C	typeref:typename:bool	signature:(void)
conf_get_configname	scripts/kconfig/confdata.c	/^const char *conf_get_configname(void)$/;"	f	language:C	typeref:typename:const char *	signature:(void)
conf_get_default_confname	scripts/kconfig/confdata.c	/^char *conf_get_default_confname(void)$/;"	f	language:C	typeref:typename:char *	signature:(void)
conf_lineno	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	language:C	typeref:typename:int	file:
conf_load	scripts/kconfig/mconf.c	/^static void conf_load(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
conf_parse	scripts/kconfig/zconf.tab.c	/^void conf_parse(const char *name)$/;"	f	language:C	typeref:typename:void	signature:(const char * name)
conf_read	scripts/kconfig/confdata.c	/^int conf_read(const char *name)$/;"	f	language:C	typeref:typename:int	signature:(const char * name)
conf_read_simple	scripts/kconfig/confdata.c	/^int conf_read_simple(const char *name, int def)$/;"	f	language:C	typeref:typename:int	signature:(const char * name,int def)
conf_save	scripts/kconfig/mconf.c	/^static void conf_save(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
conf_set_changed_callback	scripts/kconfig/confdata.c	/^void conf_set_changed_callback(void (*fn)(void))$/;"	f	language:C	typeref:typename:void	signature:(void (* fn)(void))
conf_split_config	scripts/kconfig/confdata.c	/^int conf_split_config(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
conf_string	scripts/kconfig/conf.c	/^int conf_string(struct menu *menu)$/;"	f	language:C	typeref:typename:int	signature:(struct menu * menu)
conf_string	scripts/kconfig/mconf.c	/^static void conf_string(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
conf_sym	scripts/kconfig/conf.c	/^static int conf_sym(struct menu *menu)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct menu * menu)
conf_unsaved	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	language:C	typeref:typename:int	file:
conf_warning	scripts/kconfig/confdata.c	/^static void conf_warning(const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * fmt,...)
conf_warnings	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	language:C	typeref:typename:int	file:
conf_write	scripts/kconfig/confdata.c	/^int conf_write(const char *name)$/;"	f	language:C	typeref:typename:int	signature:(const char * name)
conf_write_autoconf	scripts/kconfig/confdata.c	/^int conf_write_autoconf(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
config	Makefile	/^config: scripts_basic outputmakefile FORCE$/;"	t	language:Make
config	scripts/kconfig/Makefile	/^config: $(obj)\/conf$/;"	t	language:Make
config-targets	Makefile	/^        config-targets := 1$/;"	m	language:Make
config-targets	Makefile	/^config-targets := 0$/;"	m	language:Make
configApp	scripts/kconfig/qconf.cc	/^static QApplication *configApp;$/;"	v	language:C++	typeref:typename:QApplication *	file:
configList	scripts/kconfig/qconf.h	/^	ConfigList *configList;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigList *
configSettings	scripts/kconfig/qconf.cc	/^static ConfigSettings *configSettings;$/;"	v	language:C++	typeref:typename:ConfigSettings *	file:
configView	scripts/kconfig/qconf.h	/^	ConfigView *configView;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigView *
config_entry_start	scripts/kconfig/zconf.y	/^config_entry_start: T_CONFIG T_WORD T_EOL$/;"	l	language:YACC
config_option	scripts/kconfig/zconf.y	/^config_option: T_DEFAULT expr if_expr T_EOL$/;"	l	language:YACC
config_option	scripts/kconfig/zconf.y	/^config_option: T_PROMPT prompt if_expr T_EOL$/;"	l	language:YACC
config_option	scripts/kconfig/zconf.y	/^config_option: T_RANGE symbol symbol if_expr T_EOL$/;"	l	language:YACC
config_option	scripts/kconfig/zconf.y	/^config_option: T_SELECT T_WORD if_expr T_EOL$/;"	l	language:YACC
config_option	scripts/kconfig/zconf.y	/^config_option: T_TYPE prompt_stmt_opt T_EOL$/;"	l	language:YACC
config_option_list	scripts/kconfig/zconf.y	/^config_option_list:$/;"	l	language:YACC
config_stmt	scripts/kconfig/zconf.y	/^config_stmt: config_entry_start config_option_list$/;"	l	language:YACC
contentsContextMenuEvent	scripts/kconfig/qconf.cc	/^void ConfigInfoView::contentsContextMenuEvent(QContextMenuEvent *e)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(QContextMenuEvent * e)
contentsMouseDoubleClickEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseDoubleClickEvent(QMouseEvent* e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QMouseEvent * e)
contentsMouseMoveEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseMoveEvent(QMouseEvent* e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QMouseEvent * e)
contentsMousePressEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMousePressEvent(QMouseEvent* e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QMouseEvent * e)
contentsMouseReleaseEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseReleaseEvent(QMouseEvent* e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QMouseEvent * e)
contextMenuEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contextMenuEvent(QContextMenuEvent *e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QContextMenuEvent * e)
copy_spacing	scripts/checkpatch.pl	/^sub copy_spacing {$/;"	s	language:Perl
core-y	Makefile	/^core-y		:= $(patsubst %\/, %\/built-in.lib, $(core-y))$/;"	m	language:Make
core-y	Makefile	/^core-y		:=$/;"	m	language:Make
createPopupMenu	scripts/kconfig/qconf.cc	/^QPopupMenu* ConfigInfoView::createPopupMenu(const QPoint& pos)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:QPopupMenu *	signature:(const QPoint & pos)
ctx_block	scripts/checkpatch.pl	/^sub ctx_block {$/;"	s	language:Perl
ctx_block_get	scripts/checkpatch.pl	/^sub ctx_block_get {$/;"	s	language:Perl
ctx_block_level	scripts/checkpatch.pl	/^sub ctx_block_level {$/;"	s	language:Perl
ctx_block_outer	scripts/checkpatch.pl	/^sub ctx_block_outer {$/;"	s	language:Perl
ctx_has_comment	scripts/checkpatch.pl	/^sub ctx_has_comment {$/;"	s	language:Perl
ctx_locate_comment	scripts/checkpatch.pl	/^sub ctx_locate_comment {$/;"	s	language:Perl
ctx_statement	scripts/checkpatch.pl	/^sub ctx_statement {$/;"	s	language:Perl
ctx_statement_block	scripts/checkpatch.pl	/^sub ctx_statement_block {$/;"	s	language:Perl
ctx_statement_full	scripts/checkpatch.pl	/^sub ctx_statement_full {$/;"	s	language:Perl
ctx_statement_level	scripts/checkpatch.pl	/^sub ctx_statement_level {$/;"	s	language:Perl
curr	scripts/kconfig/expr.h	/^	struct symbol_value curr;$/;"	m	language:C++	struct:symbol	typeref:struct:symbol_value
current	scripts/kconfig/gconf.c	/^static struct menu *current; \/\/ current node for SINGLE view$/;"	v	language:C	typeref:struct:menu *	file:
current_buf	scripts/kconfig/lex.zconf.c	/^struct buffer *current_buf;$/;"	v	language:C	typeref:struct:buffer *
current_entry	scripts/kconfig/zconf.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	language:C	typeref:struct:menu **	file:
current_file	scripts/kconfig/menu.c	/^struct file *current_file;$/;"	v	language:C	typeref:struct:file *
current_menu	scripts/kconfig/mconf.c	/^static struct menu *current_menu;$/;"	v	language:C	typeref:struct:menu *	file:
current_menu	scripts/kconfig/zconf.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	language:C	typeref:struct:menu *	file:
current_pos	scripts/kconfig/lex.zconf.c	/^} current_pos;$/;"	v	language:C	typeref:struct:__anonfd8a84d40108
darrow	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color darrow;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
data	scripts/kconfig/expr.h	/^	void *data;$/;"	m	language:C++	struct:menu	typeref:typename:void *
data	scripts/kconfig/lxdialog/dialog.h	/^	void *data;	\/* pointer to menu item - used by menubox+checklist *\/$/;"	m	language:C++	struct:dialog_item	typeref:typename:void *
dataColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
dbg_print_flags	scripts/kconfig/gconf.c	/^const char *dbg_print_flags(int val)$/;"	f	language:C	typeref:typename:const char *	signature:(int val)
dbg_print_ptype	scripts/kconfig/gconf.c	/^const char *dbg_print_ptype(int val)$/;"	f	language:C	typeref:typename:const char *	signature:(int val)
dbg_print_stype	scripts/kconfig/gconf.c	/^const char *dbg_print_stype(int val)$/;"	f	language:C	typeref:typename:const char *	signature:(int val)
dbg_puts	arch/arm64/mach-rpi/mini_uart.c	/^void dbg_puts(char *s)$/;"	f	language:C	typeref:typename:void	signature:(char * s)
debug	arch/arm64/Makefile	/^debug:$/;"	t	language:Make
debug_info	scripts/kconfig/qconf.cc	/^QString ConfigInfoView::debug_info(struct symbol *sym)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:QString	signature:(struct symbol * sym)
def	scripts/kconfig/expr.h	/^	struct symbol_value def[4];$/;"	m	language:C++	struct:symbol	typeref:struct:symbol_value[4]
defconfig	scripts/kconfig/Makefile	/^defconfig: $(obj)\/conf$/;"	t	language:Make
defconfig_file	scripts/kconfig/conf.c	/^char *defconfig_file;$/;"	v	language:C	typeref:typename:char *
define_config	scripts/basic/fixdep.c	/^void define_config(const char * name, int len)$/;"	f	language:C	typeref:typename:void	signature:(const char * name,int len)
delay	arch/arm64/include/asm/io.h	/^static inline void delay(unsigned int n)$/;"	f	language:C++	typeref:typename:void	signature:(unsigned int n)
delay	arch/arm64/kernel/utils.S	/^delay:$/;"	l	language:Asm
dep	scripts/kconfig/expr.h	/^	struct expr *dep;$/;"	m	language:C++	struct:menu	typeref:struct:expr *
deparenthesize	scripts/checkpatch.pl	/^sub deparenthesize {$/;"	s	language:Perl
depends	scripts/kconfig/zconf.y	/^depends: T_DEPENDS T_ON expr T_EOL$/;"	l	language:YACC
depends_list	scripts/kconfig/zconf.y	/^depends_list:$/;"	l	language:YACC
depfile	scripts/basic/fixdep.c	/^char *depfile;$/;"	v	language:C	typeref:typename:char *
dialog	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color dialog;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
dialog_checklist	scripts/kconfig/lxdialog/checklist.c	/^int dialog_checklist(const char *title, const char *prompt, int height,$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * prompt,int height,int width,int list_height)
dialog_clear	scripts/kconfig/lxdialog/util.c	/^void dialog_clear(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
dialog_color	scripts/kconfig/lxdialog/dialog.h	/^struct dialog_color {$/;"	s	language:C++
dialog_info	scripts/kconfig/lxdialog/dialog.h	/^struct dialog_info {$/;"	s	language:C++
dialog_input_result	scripts/kconfig/lxdialog/inputbox.c	/^char dialog_input_result[MAX_LEN + 1];$/;"	v	language:C	typeref:typename:char[]
dialog_inputbox	scripts/kconfig/lxdialog/inputbox.c	/^int dialog_inputbox(const char *title, const char *prompt, int height, int width,$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * prompt,int height,int width,const char * init)
dialog_item	scripts/kconfig/lxdialog/dialog.h	/^struct dialog_item {$/;"	s	language:C++
dialog_list	scripts/kconfig/lxdialog/dialog.h	/^struct dialog_list {$/;"	s	language:C++
dialog_menu	scripts/kconfig/lxdialog/menubox.c	/^int dialog_menu(const char *title, const char *prompt,$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * prompt,const void * selected,int * s_scroll)
dialog_msgbox	scripts/kconfig/lxdialog/msgbox.c	/^int dialog_msgbox(const char *title, const char *prompt, int height, int width,$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * prompt,int height,int width,int pause)
dialog_textbox	scripts/kconfig/lxdialog/textbox.c	/^int dialog_textbox(const char *title, const char *tbuf,$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * tbuf,int initial_height,int initial_width)
dialog_yesno	scripts/kconfig/lxdialog/yesno.c	/^int dialog_yesno(const char *title, const char *prompt, int height, int width)$/;"	f	language:C	typeref:typename:int	signature:(const char * title,const char * prompt,int height,int width)
disabledColorGroup	scripts/kconfig/qconf.h	/^	QColorGroup disabledColorGroup;$/;"	m	language:C++	class:ConfigList	typeref:typename:QColorGroup
display_list	scripts/kconfig/gconf.c	/^static void display_list(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
display_tree	scripts/kconfig/gconf.c	/^static void display_tree(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
display_tree_part	scripts/kconfig/gconf.c	/^static void display_tree_part(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
distclean	Makefile	/^distclean: mrproper$/;"	t	language:Make
dlg	scripts/kconfig/lxdialog/util.c	/^struct dialog_info dlg;$/;"	v	language:C	typeref:struct:dialog_info
dmb	arch/arm64/include/asm/io.h	/^#define dmb(/;"	d	language:C++	signature:()
do_config_file	scripts/basic/fixdep.c	/^void do_config_file(char *filename)$/;"	f	language:C	typeref:typename:void	signature:(char * filename)
do_print_item	scripts/kconfig/lxdialog/menubox.c	/^static void do_print_item(WINDOW * win, const char *item, int line_y,$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,const char * item,int line_y,int selected,int hotkey)
do_scroll	scripts/kconfig/lxdialog/menubox.c	/^static void do_scroll(WINDOW *win, int *scroll, int n)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int * scroll,int n)
domainname	scripts/kconfig/lkc_port.h	/^	char domainname[_UTSNAME_DOMAIN_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
dot-config	Makefile	/^		dot-config := 0$/;"	m	language:Make
dot-config	Makefile	/^dot-config     := 1$/;"	m	language:Make
draw_box	scripts/kconfig/lxdialog/util.c	/^draw_box(WINDOW * win, int y, int x, int height, int width,$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * win,int y,int x,int height,int width,chtype box,chtype border)
draw_shadow	scripts/kconfig/lxdialog/util.c	/^void draw_shadow(WINDOW * win, int y, int x, int height, int width)$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * win,int y,int x,int height,int width)
drivers-y	Makefile	/^drivers-y	:= $(patsubst %\/, %\/built-in.lib, $(drivers-y))$/;"	m	language:Make
e1	scripts/kconfig/expr.c	/^#define e1 /;"	d	language:C	file:
e2	scripts/kconfig/expr.c	/^#define e2 /;"	d	language:C	file:
editField	scripts/kconfig/qconf.h	/^	QLineEdit* editField;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:typename:QLineEdit *
el1_entry	arch/arm64/kernel/head.S	/^el1_entry:$/;"	l	language:Asm
el2_entry	arch/arm64/kernel/head.S	/^el2_entry:$/;"	l	language:Asm
el3_entry	arch/arm64/kernel/head.S	/^el3_entry:$/;"	l	language:Asm
end	scripts/kconfig/zconf.y	/^end:	  T_ENDMENU T_EOL	{ $$ = $1; }$/;"	l	language:YACC
endGroup	scripts/kconfig/qconf.h	/^	void endGroup(void) { }$/;"	f	language:C++	class:QSettings	typeref:typename:void	signature:(void)
end_dialog	scripts/kconfig/lxdialog/util.c	/^void end_dialog(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
end_reached	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	language:C	typeref:typename:int	file:
escape	scripts/kconfig/kxgettext.c	/^static char *escape(const char* text, char *bf, int len)$/;"	f	language:C	typeref:typename:char *	file:	signature:(const char * text,char * bf,int len)
expand_tabs	scripts/checkpatch.pl	/^sub expand_tabs {$/;"	s	language:Perl
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	language:C++	struct:expr_value	typeref:struct:expr *
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	language:C++	struct:property	typeref:struct:expr *
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	language:C++	union:expr_data	typeref:struct:expr *
expr	scripts/kconfig/expr.h	/^struct expr {$/;"	s	language:C++
expr	scripts/kconfig/zconf.tab.c	/^	struct expr *expr;$/;"	m	language:C	union:YYSTYPE	typeref:struct:expr *	file:
expr	scripts/kconfig/zconf.y	/^expr:	  symbol				{ $$ = expr_alloc_symbol($1); }$/;"	l	language:YACC
expr_alloc_and	scripts/kconfig/expr.c	/^struct expr *expr_alloc_and(struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e1,struct expr * e2)
expr_alloc_comp	scripts/kconfig/expr.c	/^struct expr *expr_alloc_comp(enum expr_type type, struct symbol *s1, struct symbol *s2)$/;"	f	language:C	typeref:struct:expr *	signature:(enum expr_type type,struct symbol * s1,struct symbol * s2)
expr_alloc_one	scripts/kconfig/expr.c	/^struct expr *expr_alloc_one(enum expr_type type, struct expr *ce)$/;"	f	language:C	typeref:struct:expr *	signature:(enum expr_type type,struct expr * ce)
expr_alloc_or	scripts/kconfig/expr.c	/^struct expr *expr_alloc_or(struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e1,struct expr * e2)
expr_alloc_symbol	scripts/kconfig/expr.c	/^struct expr *expr_alloc_symbol(struct symbol *sym)$/;"	f	language:C	typeref:struct:expr *	signature:(struct symbol * sym)
expr_alloc_two	scripts/kconfig/expr.c	/^struct expr *expr_alloc_two(enum expr_type type, struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:struct:expr *	signature:(enum expr_type type,struct expr * e1,struct expr * e2)
expr_calc_value	scripts/kconfig/expr.c	/^tristate expr_calc_value(struct expr *e)$/;"	f	language:C	typeref:typename:tristate	signature:(struct expr * e)
expr_compare_type	scripts/kconfig/expr.c	/^int expr_compare_type(enum expr_type t1, enum expr_type t2)$/;"	f	language:C	typeref:typename:int	signature:(enum expr_type t1,enum expr_type t2)
expr_contains_symbol	scripts/kconfig/expr.c	/^int expr_contains_symbol(struct expr *dep, struct symbol *sym)$/;"	f	language:C	typeref:typename:int	signature:(struct expr * dep,struct symbol * sym)
expr_copy	scripts/kconfig/expr.c	/^struct expr *expr_copy(struct expr *org)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * org)
expr_data	scripts/kconfig/expr.h	/^union expr_data {$/;"	u	language:C++
expr_depends_symbol	scripts/kconfig/expr.c	/^bool expr_depends_symbol(struct expr *dep, struct symbol *sym)$/;"	f	language:C	typeref:typename:bool	signature:(struct expr * dep,struct symbol * sym)
expr_eliminate_dups	scripts/kconfig/expr.c	/^struct expr *expr_eliminate_dups(struct expr *e)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e)
expr_eliminate_dups1	scripts/kconfig/expr.c	/^static void expr_eliminate_dups1(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:typename:void	file:	signature:(enum expr_type type,struct expr ** ep1,struct expr ** ep2)
expr_eliminate_dups2	scripts/kconfig/expr.c	/^static void expr_eliminate_dups2(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:typename:void	file:	signature:(enum expr_type type,struct expr ** ep1,struct expr ** ep2)
expr_eliminate_eq	scripts/kconfig/expr.c	/^void expr_eliminate_eq(struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:typename:void	signature:(struct expr ** ep1,struct expr ** ep2)
expr_eliminate_yn	scripts/kconfig/expr.c	/^struct expr *expr_eliminate_yn(struct expr *e)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e)
expr_eq	scripts/kconfig/expr.c	/^int expr_eq(struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:typename:int	signature:(struct expr * e1,struct expr * e2)
expr_extract_eq	scripts/kconfig/expr.c	/^void expr_extract_eq(enum expr_type type, struct expr **ep, struct expr **ep1, struct expr **ep2/;"	f	language:C	typeref:typename:void	signature:(enum expr_type type,struct expr ** ep,struct expr ** ep1,struct expr ** ep2)
expr_extract_eq_and	scripts/kconfig/expr.c	/^struct expr *expr_extract_eq_and(struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr ** ep1,struct expr ** ep2)
expr_extract_eq_or	scripts/kconfig/expr.c	/^struct expr *expr_extract_eq_or(struct expr **ep1, struct expr **ep2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr ** ep1,struct expr ** ep2)
expr_fprint	scripts/kconfig/expr.c	/^void expr_fprint(struct expr *e, FILE *out)$/;"	f	language:C	typeref:typename:void	signature:(struct expr * e,FILE * out)
expr_free	scripts/kconfig/expr.c	/^void expr_free(struct expr *e)$/;"	f	language:C	typeref:typename:void	signature:(struct expr * e)
expr_gstr_print	scripts/kconfig/expr.c	/^void expr_gstr_print(struct expr *e, struct gstr *gs)$/;"	f	language:C	typeref:typename:void	signature:(struct expr * e,struct gstr * gs)
expr_is_no	scripts/kconfig/expr.h	/^static inline int expr_is_no(struct expr *e)$/;"	f	language:C++	typeref:typename:int	signature:(struct expr * e)
expr_is_yes	scripts/kconfig/expr.h	/^static inline int expr_is_yes(struct expr *e)$/;"	f	language:C++	typeref:typename:int	signature:(struct expr * e)
expr_join_and	scripts/kconfig/expr.c	/^struct expr *expr_join_and(struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e1,struct expr * e2)
expr_join_or	scripts/kconfig/expr.c	/^struct expr *expr_join_or(struct expr *e1, struct expr *e2)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e1,struct expr * e2)
expr_print	scripts/kconfig/expr.c	/^void expr_print(struct expr *e, void (*fn)(void *, struct symbol *, const char *), void *data, i/;"	f	language:C	typeref:typename:void	signature:(struct expr * e,void (* fn)(void *,struct symbol *,const char *),void * data,int prevtoken)
expr_print_file_helper	scripts/kconfig/expr.c	/^static void expr_print_file_helper(void *data, struct symbol *sym, const char *str)$/;"	f	language:C	typeref:typename:void	file:	signature:(void * data,struct symbol * sym,const char * str)
expr_print_gstr_helper	scripts/kconfig/expr.c	/^static void expr_print_gstr_helper(void *data, struct symbol *sym, const char *str)$/;"	f	language:C	typeref:typename:void	file:	signature:(void * data,struct symbol * sym,const char * str)
expr_print_help	scripts/kconfig/qconf.cc	/^void ConfigInfoView::expr_print_help(void *data, struct symbol *sym, const char *str)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(void * data,struct symbol * sym,const char * str)
expr_trans_bool	scripts/kconfig/expr.c	/^struct expr *expr_trans_bool(struct expr *e)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e)
expr_trans_compare	scripts/kconfig/expr.c	/^struct expr *expr_trans_compare(struct expr *e, enum expr_type type, struct symbol *sym)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e,enum expr_type type,struct symbol * sym)
expr_transform	scripts/kconfig/expr.c	/^struct expr *expr_transform(struct expr *e)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e)
expr_type	scripts/kconfig/expr.h	/^enum expr_type {$/;"	g	language:C++
expr_value	scripts/kconfig/expr.h	/^struct expr_value {$/;"	s	language:C++
extra-y	arch/arm64/kernel/Makefile	/^extra-y	:= $(head-y) openos.lds$/;"	m	language:Make
false	scripts/kconfig/lkc_port.h	/^#define false /;"	d	language:C++
fg	scripts/kconfig/lxdialog/dialog.h	/^	int fg;		\/* foreground *\/$/;"	m	language:C++	struct:dialog_color	typeref:typename:int
file	scripts/kconfig/expr.h	/^	struct file *file;$/;"	m	language:C++	struct:menu	typeref:struct:file *
file	scripts/kconfig/expr.h	/^	struct file *file;$/;"	m	language:C++	struct:property	typeref:struct:file *
file	scripts/kconfig/expr.h	/^struct file {$/;"	s	language:C++
file	scripts/kconfig/kxgettext.c	/^	char*		 file;$/;"	m	language:C	struct:file_line	typeref:typename:char *	file:
file	scripts/kconfig/lex.zconf.c	/^	struct file *file;$/;"	m	language:C	struct:__anonfd8a84d40108	typeref:struct:file *	file:
file	scripts/kconfig/zconf.tab.c	/^	struct file *file;$/;"	m	language:C	union:YYSTYPE	typeref:struct:file *	file:
file1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkMenuItem" id="file1">$/;"	i	language:Glade
file1_menu	scripts/kconfig/gconf.glade	/^		<widget class="GtkMenu" id="file1_menu">$/;"	i	language:Glade
file_line	scripts/kconfig/kxgettext.c	/^struct file_line {$/;"	s	language:C	file:
file_line__new	scripts/kconfig/kxgettext.c	/^static struct file_line *file_line__new(char *file, int lineno)$/;"	f	language:C	typeref:struct:file_line *	file:	signature:(char * file,int lineno)
file_list	scripts/kconfig/menu.c	/^struct file *file_list;$/;"	v	language:C	typeref:struct:file *
file_lookup	scripts/kconfig/util.c	/^struct file *file_lookup(const char *name)$/;"	f	language:C	typeref:struct:file *	signature:(const char * name)
file_write_dep	scripts/kconfig/util.c	/^int file_write_dep(const char *name)$/;"	f	language:C	typeref:typename:int	signature:(const char * name)
filechk_utsrelease.h	Makefile	/^define filechk_utsrelease.h$/;"	m	language:Make
filechk_version.h	Makefile	/^define filechk_version.h$/;"	m	language:Make
filename	scripts/kconfig/mconf.c	/^static char filename[PATH_MAX+1];$/;"	v	language:C	typeref:typename:char[]	file:
files	scripts/kconfig/kxgettext.c	/^	struct file_line *files;$/;"	m	language:C	struct:message	typeref:struct:file_line *	file:
fill_row	scripts/kconfig/gconf.c	/^static gchar **fill_row(struct menu *menu)$/;"	f	language:C	typeref:typename:gchar **	file:	signature:(struct menu * menu)
findConfigItem	scripts/kconfig/qconf.cc	/^ConfigItem* ConfigList::findConfigItem(struct menu *menu)$/;"	f	language:C++	class:ConfigList	typeref:typename:ConfigItem *	signature:(struct menu * menu)
firstChild	scripts/kconfig/qconf.h	/^	ConfigItem* firstChild() const$/;"	f	language:C++	class:ConfigItem	typeref:typename:ConfigItem *	signature:() const
firstChild	scripts/kconfig/qconf.h	/^	ConfigItem* firstChild() const$/;"	f	language:C++	class:ConfigList	typeref:typename:ConfigItem *	signature:() const
first_alpha	scripts/kconfig/lxdialog/util.c	/^int first_alpha(const char *string, const char *exempt)$/;"	f	language:C	typeref:typename:int	signature:(const char * string,const char * exempt)
first_ts	scripts/kconfig/lex.zconf.c	/^static int last_ts, first_ts;$/;"	v	language:C	typeref:typename:int	file:
fix_delete_line	scripts/checkpatch.pl	/^sub fix_delete_line {$/;"	s	language:Perl
fix_insert_line	scripts/checkpatch.pl	/^sub fix_insert_line {$/;"	s	language:Perl
fix_inserted_deleted_lines	scripts/checkpatch.pl	/^sub fix_inserted_deleted_lines {$/;"	s	language:Perl
fixup_current_range	scripts/checkpatch.pl	/^sub fixup_current_range {$/;"	s	language:Perl
fixup_rootmenu	scripts/kconfig/gconf.c	/^void fixup_rootmenu(struct menu *menu)$/;"	f	language:C	typeref:typename:void	signature:(struct menu * menu)
fixup_rootmenu	scripts/kconfig/qconf.cc	/^void fixup_rootmenu(struct menu *menu)$/;"	f	language:C++	typeref:typename:void	signature:(struct menu * menu)
flags	scripts/kconfig/expr.h	/^	int flags;$/;"	m	language:C++	struct:file	typeref:typename:int
flags	scripts/kconfig/expr.h	/^	int flags;$/;"	m	language:C++	struct:symbol	typeref:typename:int
flags	scripts/kconfig/expr.h	/^	unsigned int flags;$/;"	m	language:C++	struct:menu	typeref:typename:unsigned int
flags	scripts/kconfig/lkc.h	/^	unsigned int flags;$/;"	m	language:C++	struct:kconf_id	typeref:typename:unsigned int
flex_int16_t	scripts/kconfig/lex.zconf.c	/^typedef int16_t flex_int16_t;$/;"	t	language:C	typeref:typename:int16_t	file:
flex_int16_t	scripts/kconfig/lex.zconf.c	/^typedef short int flex_int16_t;$/;"	t	language:C	typeref:typename:short int	file:
flex_int32_t	scripts/kconfig/lex.zconf.c	/^typedef int flex_int32_t;$/;"	t	language:C	typeref:typename:int	file:
flex_int32_t	scripts/kconfig/lex.zconf.c	/^typedef int32_t flex_int32_t;$/;"	t	language:C	typeref:typename:int32_t	file:
flex_int8_t	scripts/kconfig/lex.zconf.c	/^typedef int8_t flex_int8_t;$/;"	t	language:C	typeref:typename:int8_t	file:
flex_int8_t	scripts/kconfig/lex.zconf.c	/^typedef signed char flex_int8_t;$/;"	t	language:C	typeref:typename:signed char	file:
flex_uint16_t	scripts/kconfig/lex.zconf.c	/^typedef uint16_t flex_uint16_t;$/;"	t	language:C	typeref:typename:uint16_t	file:
flex_uint16_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	language:C	typeref:typename:unsigned short int	file:
flex_uint32_t	scripts/kconfig/lex.zconf.c	/^typedef uint32_t flex_uint32_t;$/;"	t	language:C	typeref:typename:uint32_t	file:
flex_uint32_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned int flex_uint32_t;$/;"	t	language:C	typeref:typename:unsigned int	file:
flex_uint8_t	scripts/kconfig/lex.zconf.c	/^typedef uint8_t flex_uint8_t;$/;"	t	language:C	typeref:typename:uint8_t	file:
flex_uint8_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned char flex_uint8_t;$/;"	t	language:C	typeref:typename:unsigned char	file:
focusInEvent	scripts/kconfig/qconf.cc	/^void ConfigList::focusInEvent(QFocusEvent *e)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QFocusEvent * e)
for_all_choices	scripts/kconfig/expr.h	/^#define for_all_choices(/;"	d	language:C++	signature:(sym,st)
for_all_defaults	scripts/kconfig/expr.h	/^#define for_all_defaults(/;"	d	language:C++	signature:(sym,st)
for_all_prompts	scripts/kconfig/expr.h	/^#define for_all_prompts(/;"	d	language:C++	signature:(sym,st)
for_all_properties	scripts/kconfig/expr.h	/^#define for_all_properties(/;"	d	language:C++	signature:(sym,st,tok)
for_all_symbols	scripts/kconfig/expr.h	/^#define for_all_symbols(/;"	d	language:C++	signature:(i,sym)
format_email	scripts/checkpatch.pl	/^sub format_email {$/;"	s	language:Perl
found	scripts/kconfig/gconf.c	/^static GtkTreeIter found;$/;"	v	language:C	typeref:typename:GtkTreeIter	file:
fullMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode, listMode$/;"	e	language:C++	enum:listMode
gconf-objs	scripts/kconfig/Makefile	/^gconf-objs	:= gconf.o kconfig_load.o zconf.tab.o$/;"	m	language:Make
gconf-target	scripts/kconfig/Makefile	/^	gconf-target := 1$/;"	m	language:Make
gconfig	scripts/kconfig/Makefile	/^gconfig: $(obj)\/gconf$/;"	t	language:Make
get32	arch/arm64/kernel/utils.S	/^get32:$/;"	l	language:Asm
get_help	scripts/kconfig/conf.c	/^static const char *get_help(struct menu *menu)$/;"	f	language:C	typeref:typename:const char *	file:	signature:(struct menu * menu)
get_line	scripts/kconfig/lxdialog/textbox.c	/^static char *get_line(void)$/;"	f	language:C	typeref:typename:char *	file:	signature:(void)
get_prompt_str	scripts/kconfig/mconf.c	/^static void get_prompt_str(struct gstr *r, struct property *prop)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct gstr * r,struct property * prop)
get_quoted_string	scripts/checkpatch.pl	/^sub get_quoted_string {$/;"	s	language:Perl
get_relations_str	scripts/kconfig/mconf.c	/^static struct gstr get_relations_str(struct symbol **sym_arr)$/;"	f	language:C	typeref:struct:gstr	file:	signature:(struct symbol ** sym_arr)
get_stat_here	scripts/checkpatch.pl	/^sub get_stat_here {$/;"	s	language:Perl
get_stat_real	scripts/checkpatch.pl	/^sub get_stat_real {$/;"	s	language:Perl
get_symbol_str	scripts/kconfig/mconf.c	/^static void get_symbol_str(struct gstr *r, struct symbol *sym)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct gstr * r,struct symbol * sym)
gettext	scripts/kconfig/lkc.h	/^# define gettext(/;"	d	language:C++	signature:(Msgid)
git_commit_info	scripts/checkpatch.pl	/^sub git_commit_info {$/;"	s	language:Perl
goBack	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::goBack(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
goParent	scripts/kconfig/qconf.h	/^	bool goParent;$/;"	m	language:C++	class:ConfigItem	typeref:typename:bool
grow_config	scripts/basic/fixdep.c	/^void grow_config(int len)$/;"	f	language:C	typeref:typename:void	signature:(int len)
gstr	scripts/kconfig/lkc.h	/^struct gstr {$/;"	s	language:C++
gtktree_iter_find_node	scripts/kconfig/gconf.c	/^GtkTreeIter *gtktree_iter_find_node(GtkTreeIter * parent,$/;"	f	language:C	typeref:typename:GtkTreeIter *	signature:(GtkTreeIter * parent,struct menu * tofind)
handlebox1	scripts/kconfig/gconf.glade	/^	<widget class="GtkHandleBox" id="handlebox1">$/;"	i	language:Glade
hash_save_array_words	scripts/checkpatch.pl	/^sub hash_save_array_words {$/;"	s	language:Perl
hash_show_words	scripts/checkpatch.pl	/^sub hash_show_words {$/;"	s	language:Perl
hdr-arch	Makefile	/^hdr-arch  := $(SRCARCH)$/;"	m	language:Make
head-y	arch/arm64/Makefile	/^head-y		:= arch\/arm64\/kernel\/head.o$/;"	m	language:Make
head-y	arch/arm64/kernel/Makefile	/^head-y  := head.o$/;"	m	language:Make
headerPopup	scripts/kconfig/qconf.h	/^	QPopupMenu* headerPopup;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPopupMenu *
help	Makefile	/^help:$/;"	t	language:Make
help	scripts/checkpatch.pl	/^sub help {$/;"	s	language:Perl
help	scripts/kconfig/Makefile	/^help:$/;"	t	language:Make
help	scripts/kconfig/expr.h	/^	char *help;$/;"	m	language:C++	struct:menu	typeref:typename:char *
help	scripts/kconfig/zconf.y	/^help: help_start T_HELPTEXT$/;"	l	language:YACC
help1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkMenuItem" id="help1">$/;"	i	language:Glade
help1_menu	scripts/kconfig/gconf.glade	/^		<widget class="GtkMenu" id="help1_menu">$/;"	i	language:Glade
helpText	scripts/kconfig/qconf.h	/^	ConfigInfoView *helpText;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigInfoView *
help_start	scripts/kconfig/zconf.y	/^help_start: T_HELP T_EOL$/;"	l	language:YACC
hl	scripts/kconfig/lxdialog/dialog.h	/^	int hl;		\/* highlight this item *\/$/;"	m	language:C++	struct:dialog_color	typeref:typename:int
hostprogs-y	scripts/basic/Makefile	/^hostprogs-y	:= fixdep$/;"	m	language:Make
hostprogs-y	scripts/kconfig/Makefile	/^hostprogs-y := conf qconf gconf kxgettext$/;"	m	language:Make
hostprogs-y	scripts/kconfig/lxdialog/Makefile	/^hostprogs-y	:= lxdialog$/;"	m	language:Make
hpaned	scripts/kconfig/gconf.c	/^GtkWidget *hpaned = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
hpaned1	scripts/kconfig/gconf.glade	/^	<widget class="GtkHPaned" id="hpaned1">$/;"	i	language:Glade
hscroll	scripts/kconfig/lxdialog/textbox.c	/^static int hscroll;$/;"	v	language:C	typeref:typename:int	file:
i	scripts/kconfig/lex.zconf.c	/^	int ts, i;$/;"	v	language:C	typeref:typename:int
id	scripts/kconfig/lex.zconf.c	/^		struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);$/;"	v	language:C	typeref:struct:kconf_id *
id	scripts/kconfig/zconf.tab.c	/^	struct kconf_id *id;$/;"	m	language:C	union:YYSTYPE	typeref:struct:kconf_id *	file:
if_block	scripts/kconfig/zconf.y	/^if_block:$/;"	l	language:YACC
if_end	scripts/kconfig/zconf.y	/^if_end: end$/;"	l	language:YACC
if_entry	scripts/kconfig/zconf.y	/^if_entry: T_IF expr nl$/;"	l	language:YACC
if_expr	scripts/kconfig/zconf.y	/^if_expr:  \/* empty *\/			{ $$ = NULL; }$/;"	l	language:YACC
if_stmt	scripts/kconfig/zconf.y	/^if_stmt: if_entry if_block if_end$/;"	l	language:YACC
image39	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image39">$/;"	i	language:Glade
image40	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image40">$/;"	i	language:Glade
image41	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image41">$/;"	i	language:Glade
image42	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image42">$/;"	i	language:Glade
image43	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image43">$/;"	i	language:Glade
image44	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image44">$/;"	i	language:Glade
image45	scripts/kconfig/gconf.glade	/^			<widget class="GtkImage" id="image45">$/;"	i	language:Glade
inactivedColorGroup	scripts/kconfig/qconf.h	/^	QColorGroup inactivedColorGroup;$/;"	m	language:C++	class:ConfigList	typeref:typename:QColorGroup
incdir-$(CONFIG_ARCH_BCM2835)	arch/arm64/Makefile	/^incdir-$(CONFIG_ARCH_BCM2835)	:= rpi$/;"	m	language:Make
incdir-y	arch/arm64/Makefile	/^incdir-y := $(machine-y)$/;"	m	language:Make
include/asm	Makefile	/^include\/asm:$/;"	t	language:Make
include/config/auto.conf	Makefile	/^include\/config\/auto.conf: $(KCONFIG_CONFIG) include\/config\/auto.conf.cmd$/;"	t	language:Make
include/config/auto.conf	Makefile	/^include\/config\/auto.conf: ;$/;"	t	language:Make
include/config/auto.conf.cmd	Makefile	/^$(KCONFIG_CONFIG) include\/config\/auto.conf.cmd: ;$/;"	t	language:Make
include/config/kernel.release	Makefile	/^include\/config\/kernel.release: include\/config\/auto.conf FORCE$/;"	t	language:Make
include/mach	arch/arm64/Makefile	/^include\/mach:$/;"	t	language:Make
include/target/compile.h	init/Makefile	/^include\/target\/compile.h: FORCE$/;"	t	language:Make
include/target/utsrelease.h	Makefile	/^include\/target\/utsrelease.h: include\/config\/kernel.release FORCE$/;"	t	language:Make
include/target/version.h	Makefile	/^include\/target\/version.h: $(srctree)\/Makefile FORCE$/;"	t	language:Make
indent	scripts/kconfig/conf.c	/^static int indent = 1;$/;"	v	language:C	typeref:typename:int	file:
indent	scripts/kconfig/gconf.c	/^static gint indent;$/;"	v	language:C	typeref:typename:gint	file:
indent	scripts/kconfig/mconf.c	/^static int indent;$/;"	v	language:C	typeref:typename:int	file:
info	scripts/kconfig/qconf.h	/^	ConfigInfoView* info;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:typename:ConfigInfoView *
init	scripts/kconfig/qconf.cc	/^void ConfigItem::init(void)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(void)
init-y	Makefile	/^init-y		:= $(patsubst %\/, %\/built-in.lib, $(init-y))$/;"	m	language:Make
init-y	Makefile	/^init-y		:= init\/$/;"	m	language:Make
init_dialog	scripts/kconfig/lxdialog/util.c	/^void init_dialog(const char *backtitle)$/;"	f	language:C	typeref:typename:void	signature:(const char * backtitle)
init_dialog_colors	scripts/kconfig/lxdialog/util.c	/^static void init_dialog_colors(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
init_left_tree	scripts/kconfig/gconf.c	/^void init_left_tree(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
init_main_window	scripts/kconfig/gconf.c	/^void init_main_window(const gchar * glade_file)$/;"	f	language:C	typeref:typename:void	signature:(const gchar * glade_file)
init_one_color	scripts/kconfig/lxdialog/util.c	/^static void init_one_color(struct dialog_color *color)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct dialog_color * color)
init_right_tree	scripts/kconfig/gconf.c	/^void init_right_tree(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
init_tree_model	scripts/kconfig/gconf.c	/^void init_tree_model(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
init_wsize	scripts/kconfig/mconf.c	/^static void init_wsize(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
inline	scripts/kconfig/lkc_port.h	/^#define inline$/;"	d	language:C++
input	scripts/kconfig/zconf.y	/^input: stmt_list;$/;"	l	language:YACC
input_mode	scripts/kconfig/conf.c	/^} input_mode = ask_all;$/;"	v	language:C	typeref:enum:__anon4790eb030103
inputbox	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color inputbox;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
inputbox_border	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color inputbox_border;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
inputbox_instructions_hex	scripts/kconfig/mconf.c	/^inputbox_instructions_hex[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][]	file:
inputbox_instructions_int	scripts/kconfig/mconf.c	/^inputbox_instructions_int[] = N_($/;"	v	language:C	typeref:typename:const char[][][][]	file:
inputbox_instructions_string	scripts/kconfig/mconf.c	/^inputbox_instructions_string[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][]	file:
introduction1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="introduction1">$/;"	i	language:Glade
ios_org	scripts/kconfig/mconf.c	/^static struct termios ios_org;$/;"	v	language:C	typeref:struct:termios	file:
is_SPDX_License_valid	scripts/checkpatch.pl	/^sub is_SPDX_License_valid {$/;"	s	language:Perl
is_defined_config	scripts/basic/fixdep.c	/^int is_defined_config(const char * name, int len)$/;"	f	language:C	typeref:typename:int	signature:(const char * name,int len)
is_maintained_obsolete	scripts/checkpatch.pl	/^sub is_maintained_obsolete {$/;"	s	language:Perl
item	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color item;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
item	scripts/kconfig/qconf.h	/^	ConfigItem *item;$/;"	m	language:C++	class:ConfigLineEdit	typeref:typename:ConfigItem *
item_activate_selected	scripts/kconfig/lxdialog/util.c	/^int item_activate_selected(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
item_add_str	scripts/kconfig/lxdialog/util.c	/^void item_add_str(const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	signature:(const char * fmt,...)
item_count	scripts/kconfig/lxdialog/util.c	/^int item_count(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
item_cur	scripts/kconfig/lxdialog/util.c	/^struct dialog_list *item_cur;$/;"	v	language:C	typeref:struct:dialog_list *
item_data	scripts/kconfig/lxdialog/util.c	/^void *item_data(void)$/;"	f	language:C	typeref:typename:void *	signature:(void)
item_foreach	scripts/kconfig/lxdialog/dialog.h	/^#define item_foreach(/;"	d	language:C++	signature:()
item_head	scripts/kconfig/lxdialog/util.c	/^struct dialog_list *item_head;$/;"	v	language:C	typeref:struct:dialog_list *
item_is_selected	scripts/kconfig/lxdialog/util.c	/^int item_is_selected(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
item_is_tag	scripts/kconfig/lxdialog/util.c	/^int item_is_tag(char tag)$/;"	f	language:C	typeref:typename:int	signature:(char tag)
item_make	scripts/kconfig/lxdialog/util.c	/^void item_make(const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	signature:(const char * fmt,...)
item_n	scripts/kconfig/lxdialog/util.c	/^int item_n(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
item_nil	scripts/kconfig/lxdialog/util.c	/^struct dialog_list item_nil;$/;"	v	language:C	typeref:struct:dialog_list
item_reset	scripts/kconfig/lxdialog/util.c	/^void item_reset(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
item_selected	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color item_selected;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
item_set	scripts/kconfig/lxdialog/util.c	/^void item_set(int n)$/;"	f	language:C	typeref:typename:void	signature:(int n)
item_set_data	scripts/kconfig/lxdialog/util.c	/^void item_set_data(void *ptr)$/;"	f	language:C	typeref:typename:void	signature:(void * ptr)
item_set_selected	scripts/kconfig/lxdialog/util.c	/^void item_set_selected(int val)$/;"	f	language:C	typeref:typename:void	signature:(int val)
item_set_tag	scripts/kconfig/lxdialog/util.c	/^void item_set_tag(char tag)$/;"	f	language:C	typeref:typename:void	signature:(char tag)
item_str	scripts/kconfig/lxdialog/util.c	/^const char *item_str(void)$/;"	f	language:C	typeref:typename:const char *	signature:(void)
item_tag	scripts/kconfig/lxdialog/util.c	/^char item_tag(void)$/;"	f	language:C	typeref:typename:char	signature:(void)
item_x	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	language:C	typeref:typename:int	file:
item_x	scripts/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	language:C	typeref:typename:int	file:
j_infobox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_infobox(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_infobox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_msgbox, j_infobox;$/;"	v	language:C	typeref:typename:jumperFn
j_inputbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_inputbox(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_inputbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v	language:C	typeref:typename:jumperFn
j_menu	scripts/kconfig/lxdialog/lxdialog.c	/^int j_menu(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_menu	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v	language:C	typeref:typename:jumperFn
j_msgbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_msgbox(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_msgbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_msgbox, j_infobox;$/;"	v	language:C	typeref:typename:jumperFn
j_radiolist	scripts/kconfig/lxdialog/lxdialog.c	/^int j_radiolist(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_radiolist	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v	language:C	typeref:typename:jumperFn
j_textbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_textbox(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_textbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v	language:C	typeref:typename:jumperFn
j_yesno	scripts/kconfig/lxdialog/lxdialog.c	/^int j_yesno(const char *t, int ac, const char *const *av)$/;"	f	language:C	typeref:typename:int	signature:(const char * t,int ac,const char * const * av)
j_yesno	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v	language:C	typeref:typename:jumperFn
jumper	scripts/kconfig/lxdialog/lxdialog.c	/^	jumperFn *jumper;$/;"	m	language:C	struct:Mode	typeref:typename:jumperFn *	file:
jumperFn	scripts/kconfig/lxdialog/lxdialog.c	/^typedef int (jumperFn) (const char *title, int argc, const char *const *argv);$/;"	t	language:C	typeref:typename:int ()(const char * title,int argc,const char * const * argv)	file:
kconf_id	scripts/kconfig/lkc.h	/^struct kconf_id {$/;"	s	language:C++
kconf_id_hash	scripts/kconfig/zconf.hash.c	/^kconf_id_hash (register const char *str, register unsigned int len)$/;"	f	language:C	typeref:typename:unsigned int	file:	signature:(register const char * str,register unsigned int len)
kconf_id_lookup	scripts/kconfig/zconf.hash.c	/^kconf_id_lookup (register const char *str, register unsigned int len)$/;"	f	language:C	typeref:struct:kconf_id *	signature:(register const char * str,register unsigned int len)
kconf_id_strings	scripts/kconfig/zconf.hash.c	/^#define kconf_id_strings /;"	d	language:C	file:
kconf_id_strings_contents	scripts/kconfig/zconf.hash.c	/^static struct kconf_id_strings_t kconf_id_strings_contents =$/;"	v	language:C	typeref:struct:kconf_id_strings_t	file:
kconf_id_strings_str10	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str10[sizeof("range")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str11	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str11[sizeof("def_boolean")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str12	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str12[sizeof("def_tristate")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str13	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str13[sizeof("hex")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str14	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str14[sizeof("defconfig_list")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str16	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str16[sizeof("option")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str17	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str17[sizeof("if")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str18	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str18[sizeof("optional")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str2	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str2[sizeof("on")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str20	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str20[sizeof("endif")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str21	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str21[sizeof("choice")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str22	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str22[sizeof("endmenu")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str23	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str23[sizeof("requires")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str24	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str24[sizeof("endchoice")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str26	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str26[sizeof("config")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str27	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str27[sizeof("modules")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str28	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str28[sizeof("int")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str29	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str29[sizeof("menu")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str31	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str31[sizeof("prompt")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str32	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str32[sizeof("depends")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str33	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str33[sizeof("tristate")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str34	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str34[sizeof("bool")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str35	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str35[sizeof("menuconfig")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str36	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str36[sizeof("select")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str37	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str37[sizeof("boolean")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str39	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str39[sizeof("help")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str41	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str41[sizeof("source")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str42	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str42[sizeof("comment")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str43	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str43[sizeof("mainmenu")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str46	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str46[sizeof("enable")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str6	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str6[sizeof("string")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str7	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str7[sizeof("default")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_str8	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str8[sizeof("def_bool")];$/;"	m	language:C	struct:kconf_id_strings_t	typeref:typename:char[]	file:
kconf_id_strings_t	scripts/kconfig/zconf.hash.c	/^struct kconf_id_strings_t$/;"	s	language:C	file:
kconfig_load	scripts/kconfig/kconfig_load.c	/^void kconfig_load(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
kernel_main	init/main.c	/^void kernel_main(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
kernelrelease	Makefile	/^kernelrelease = $(KERNELVERSION)$(localver-full)$/;"	m	language:Make
kernelrelease	Makefile	/^kernelrelease:$/;"	t	language:Make
kernelversion	Makefile	/^kernelversion:$/;"	t	language:Make
keyPressEvent	scripts/kconfig/qconf.cc	/^void ConfigLineEdit::keyPressEvent(QKeyEvent* e)$/;"	f	language:C++	class:ConfigLineEdit	typeref:typename:void	signature:(QKeyEvent * e)
keyPressEvent	scripts/kconfig/qconf.cc	/^void ConfigList::keyPressEvent(QKeyEvent* ev)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(QKeyEvent * ev)
kxgettext-objs	scripts/kconfig/Makefile	/^kxgettext-objs	:= kxgettext.o zconf.tab.o$/;"	m	language:Make
last_entry_ptr	scripts/kconfig/menu.c	/^static struct menu **last_entry_ptr;$/;"	v	language:C	typeref:struct:menu **	file:
last_ts	scripts/kconfig/lex.zconf.c	/^static int last_ts, first_ts;$/;"	v	language:C	typeref:typename:int	file:
ldflags	scripts/kconfig/lxdialog/check-lxdialog.sh	/^ldflags()$/;"	f	language:Sh
left	scripts/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	language:C++	struct:expr	typeref:union:expr_data
len	scripts/kconfig/lkc.h	/^	size_t len;$/;"	m	language:C++	struct:gstr	typeref:typename:size_t
len_config	scripts/basic/fixdep.c	/^int    len_config  = 0;$/;"	v	language:C	typeref:typename:int
lex.%.c	scripts/kconfig/Makefile	/^lex.%.c: %.l$/;"	t	language:Make
libs-y	Makefile	/^libs-y		:= $(patsubst %\/, %\/built-in.lib, $(libs-y))$/;"	m	language:Make
license1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="license1">$/;"	i	language:Glade
line	scripts/kconfig/conf.c	/^static char line[128];$/;"	v	language:C	typeref:typename:char[128]	file:
lineEdit	scripts/kconfig/qconf.h	/^	ConfigLineEdit* lineEdit;$/;"	m	language:C++	class:ConfigView	typeref:typename:ConfigLineEdit *
line_stats	scripts/checkpatch.pl	/^sub line_stats {$/;"	s	language:Perl
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	language:C++	struct:file	typeref:typename:int
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	language:C++	struct:menu	typeref:typename:int
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	language:C++	struct:property	typeref:typename:int
lineno	scripts/kconfig/kxgettext.c	/^	int		 lineno;$/;"	m	language:C	struct:file_line	typeref:typename:int	file:
lineno	scripts/kconfig/lex.zconf.c	/^	int lineno;$/;"	m	language:C	struct:__anonfd8a84d40108	typeref:typename:int	file:
list	scripts/kconfig/expr.h	/^	struct menu *list;$/;"	m	language:C++	struct:menu	typeref:struct:menu *
list	scripts/kconfig/qconf.h	/^	ConfigList* list;$/;"	m	language:C++	class:ConfigView	typeref:typename:ConfigList *
list	scripts/kconfig/qconf.h	/^	ConfigView* list;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:typename:ConfigView *
listFocusChanged	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::listFocusChanged(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
listMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode, listMode$/;"	e	language:C++	enum:listMode
listMode	scripts/kconfig/qconf.h	/^enum listMode {$/;"	g	language:C++
listView	scripts/kconfig/qconf.h	/^	ConfigList* listView() const$/;"	f	language:C++	class:ConfigItem	typeref:typename:ConfigList *	signature:() const
listView	scripts/kconfig/qconf.h	/^	ConfigList* listView()$/;"	f	language:C++	class:ConfigList	typeref:typename:ConfigList *	signature:()
list_types	scripts/checkpatch.pl	/^sub list_types {$/;"	s	language:Perl
list_width	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	language:C	typeref:typename:int	file:
load1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="load1">$/;"	i	language:Glade
loadConfig	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::loadConfig(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
load_config_help	scripts/kconfig/mconf.c	/^load_config_help[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][][][]	file:
load_config_text	scripts/kconfig/mconf.c	/^load_config_text[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][][]	file:
load_filename	scripts/kconfig/gconf.c	/^load_filename(GtkFileSelection * file_selector, gpointer user_data)$/;"	f	language:C	typeref:typename:void	file:	signature:(GtkFileSelection * file_selector,gpointer user_data)
localver	Makefile	/^localver = $(subst $(space),, $(string) \\$/;"	m	language:Make
localver-auto	Makefile	/^	localver-auto  = $(LOCALVERSION)$(_localver-auto)$/;"	m	language:Make
localver-full	Makefile	/^localver-full = $(localver)$(localver-auto)$/;"	m	language:Make
ltrim	scripts/checkpatch.pl	/^sub ltrim {$/;"	s	language:Perl
lxdialog	scripts/kconfig/Makefile	/^lxdialog := lxdialog\/checklist.o lxdialog\/util.o lxdialog\/inputbox.o$/;"	m	language:Make
lxdialog-objs	scripts/kconfig/lxdialog/Makefile	/^lxdialog-objs := checklist.o menubox.o textbox.o yesno.o inputbox.o \\$/;"	m	language:Make
machdirs	arch/arm64/Makefile	/^machdirs := $(patsubst %,arch\/arm\/mach-%\/,$(machine-y))$/;"	m	language:Make
machine	scripts/kconfig/lkc_port.h	/^	char machine[_UTSNAME_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
machine-$(CONFIG_ARCH_BCM2835)	arch/arm64/Makefile	/^machine-$(CONFIG_ARCH_BCM2835)      := rpi$/;"	m	language:Make
main	arch/arm64/common/asm-offsets.c	/^int main(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
main	arch/arm64/kernel/asm-offsets.c	/^int main(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
main	scripts/basic/fixdep.c	/^int main(int argc, char **argv)$/;"	f	language:C	typeref:typename:int	signature:(int argc,char ** argv)
main	scripts/kconfig/conf.c	/^int main(int ac, char **av)$/;"	f	language:C	typeref:typename:int	signature:(int ac,char ** av)
main	scripts/kconfig/gconf.c	/^int main(int ac, char *av[])$/;"	f	language:C	typeref:typename:int	signature:(int ac,char * av[])
main	scripts/kconfig/kxgettext.c	/^int main(int ac, char **av)$/;"	f	language:C	typeref:typename:int	signature:(int ac,char ** av)
main	scripts/kconfig/lxdialog/lxdialog.c	/^int main(int argc, const char *const *argv)$/;"	f	language:C	typeref:typename:int	signature:(int argc,const char * const * argv)
main	scripts/kconfig/mconf.c	/^int main(int ac, char **av)$/;"	f	language:C	typeref:typename:int	signature:(int ac,char ** av)
main	scripts/kconfig/qconf.cc	/^int main(int ac, char** av)$/;"	f	language:C++	typeref:typename:int	signature:(int ac,char ** av)
main_wnd	scripts/kconfig/gconf.c	/^GtkWidget *main_wnd = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
maketools	arch/arm64/Makefile	/^maketools : include\/mach$/;"	t	language:Make
mapIdx	scripts/kconfig/qconf.h	/^	int mapIdx(colIdx idx)$/;"	f	language:C++	class:ConfigList	typeref:typename:int	signature:(colIdx idx)
master	arch/arm64/kernel/head.S	/^master:$/;"	l	language:Asm
mconf-objs	scripts/kconfig/Makefile	/^mconf-objs	:= mconf.o zconf.tab.o $(lxdialog)$/;"	m	language:Make
mconf_readme	scripts/kconfig/mconf.c	/^static const char mconf_readme[] = N_($/;"	v	language:C	typeref:typename:const char[]	file:
memzero	arch/arm64/kernel/mm.S	/^memzero:$/;"	l	language:Asm
menu	scripts/kconfig/expr.h	/^	struct menu *menu;$/;"	m	language:C++	struct:property	typeref:struct:menu *
menu	scripts/kconfig/expr.h	/^struct menu {$/;"	s	language:C++
menu	scripts/kconfig/qconf.h	/^	struct menu *menu;$/;"	m	language:C++	class:ConfigInfoView	typeref:struct:menu *
menu	scripts/kconfig/qconf.h	/^	struct menu *menu;$/;"	m	language:C++	class:ConfigItem	typeref:struct:menu *
menu	scripts/kconfig/zconf.tab.c	/^	struct menu *menu;$/;"	m	language:C	union:YYSTYPE	typeref:struct:menu *	file:
menu	scripts/kconfig/zconf.y	/^menu: T_MENU prompt T_EOL$/;"	l	language:YACC
menuBackPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
menuInfo	scripts/kconfig/qconf.cc	/^void ConfigInfoView::menuInfo(void)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(void)
menuInvPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
menuList	scripts/kconfig/qconf.h	/^	ConfigList *menuList;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigList *
menuMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode, listMode$/;"	e	language:C++	enum:listMode
menuPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
menuView	scripts/kconfig/qconf.h	/^	ConfigView *menuView;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigView *
menu__xgettext	scripts/kconfig/kxgettext.c	/^void menu__xgettext(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
menu_add_dep	scripts/kconfig/menu.c	/^void menu_add_dep(struct expr *dep)$/;"	f	language:C	typeref:typename:void	signature:(struct expr * dep)
menu_add_entry	scripts/kconfig/menu.c	/^void menu_add_entry(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	signature:(struct symbol * sym)
menu_add_expr	scripts/kconfig/menu.c	/^void menu_add_expr(enum prop_type type, struct expr *expr, struct expr *dep)$/;"	f	language:C	typeref:typename:void	signature:(enum prop_type type,struct expr * expr,struct expr * dep)
menu_add_menu	scripts/kconfig/menu.c	/^struct menu *menu_add_menu(void)$/;"	f	language:C	typeref:struct:menu *	signature:(void)
menu_add_option	scripts/kconfig/menu.c	/^void menu_add_option(int token, char *arg)$/;"	f	language:C	typeref:typename:void	signature:(int token,char * arg)
menu_add_prompt	scripts/kconfig/menu.c	/^struct property *menu_add_prompt(enum prop_type type, char *prompt, struct expr *dep)$/;"	f	language:C	typeref:struct:property *	signature:(enum prop_type type,char * prompt,struct expr * dep)
menu_add_prop	scripts/kconfig/menu.c	/^struct property *menu_add_prop(enum prop_type type, char *prompt, struct expr *expr, struct expr/;"	f	language:C	typeref:struct:property *	signature:(enum prop_type type,char * prompt,struct expr * expr,struct expr * dep)
menu_add_symbol	scripts/kconfig/menu.c	/^void menu_add_symbol(enum prop_type type, struct symbol *sym, struct expr *dep)$/;"	f	language:C	typeref:typename:void	signature:(enum prop_type type,struct symbol * sym,struct expr * dep)
menu_block	scripts/kconfig/zconf.y	/^menu_block:$/;"	l	language:YACC
menu_build_message_list	scripts/kconfig/kxgettext.c	/^void menu_build_message_list(struct menu *menu)$/;"	f	language:C	typeref:typename:void	signature:(struct menu * menu)
menu_check_dep	scripts/kconfig/menu.c	/^struct expr *menu_check_dep(struct expr *e)$/;"	f	language:C	typeref:struct:expr *	signature:(struct expr * e)
menu_end	scripts/kconfig/zconf.y	/^menu_end: end$/;"	l	language:YACC
menu_end_entry	scripts/kconfig/menu.c	/^void menu_end_entry(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
menu_end_menu	scripts/kconfig/menu.c	/^void menu_end_menu(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
menu_entry	scripts/kconfig/zconf.y	/^menu_entry: menu depends_list$/;"	l	language:YACC
menu_finalize	scripts/kconfig/menu.c	/^void menu_finalize(struct menu *parent)$/;"	f	language:C	typeref:typename:void	signature:(struct menu * parent)
menu_get_help	scripts/kconfig/menu.c	/^const char *menu_get_help(struct menu *menu)$/;"	f	language:C	typeref:typename:const char *	signature:(struct menu * menu)
menu_get_parent_menu	scripts/kconfig/menu.c	/^struct menu *menu_get_parent_menu(struct menu *menu)$/;"	f	language:C	typeref:struct:menu *	signature:(struct menu * menu)
menu_get_prompt	scripts/kconfig/menu.c	/^const char *menu_get_prompt(struct menu *menu)$/;"	f	language:C	typeref:typename:const char *	signature:(struct menu * menu)
menu_get_root_menu	scripts/kconfig/menu.c	/^struct menu *menu_get_root_menu(struct menu *menu)$/;"	f	language:C	typeref:struct:menu *	signature:(struct menu * menu)
menu_has_help	scripts/kconfig/menu.c	/^bool menu_has_help(struct menu *menu)$/;"	f	language:C	typeref:typename:bool	signature:(struct menu * menu)
menu_init	scripts/kconfig/menu.c	/^void menu_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
menu_instructions	scripts/kconfig/mconf.c	/^menu_instructions[] = N_($/;"	v	language:C	typeref:typename:const char[][]	file:
menu_is_visible	scripts/kconfig/menu.c	/^bool menu_is_visible(struct menu *menu)$/;"	f	language:C	typeref:typename:bool	signature:(struct menu * menu)
menu_range_valid_sym	scripts/kconfig/menu.c	/^static int menu_range_valid_sym(struct symbol *sym, struct symbol *sym2)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct symbol * sym,struct symbol * sym2)
menu_set_type	scripts/kconfig/menu.c	/^void menu_set_type(int type)$/;"	f	language:C	typeref:typename:void	signature:(int type)
menu_stmt	scripts/kconfig/zconf.y	/^menu_stmt: menu_entry menu_block menu_end$/;"	l	language:YACC
menu_warn	scripts/kconfig/menu.c	/^static void menu_warn(struct menu *menu, const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu,const char * fmt,...)
menu_width	scripts/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	language:C	typeref:typename:int	file:
menubar1	scripts/kconfig/gconf.glade	/^	<widget class="GtkMenuBar" id="menubar1">$/;"	i	language:Glade
menubox	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color menubox;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
menubox_border	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color menubox_border;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
menuconfig	scripts/kconfig/Makefile	/^menuconfig: $(obj)\/mconf$/;"	t	language:Make
menuconfig_entry_start	scripts/kconfig/zconf.y	/^menuconfig_entry_start: T_MENUCONFIG T_WORD T_EOL$/;"	l	language:YACC
menuconfig_stmt	scripts/kconfig/zconf.y	/^menuconfig_stmt: menuconfig_entry_start config_option_list$/;"	l	language:YACC
mesage__find	scripts/kconfig/kxgettext.c	/^static struct message *mesage__find(const char *msg)$/;"	f	language:C	typeref:struct:message *	file:	signature:(const char * msg)
message	scripts/kconfig/kxgettext.c	/^struct message {$/;"	s	language:C	file:
message__add	scripts/kconfig/kxgettext.c	/^static int message__add(const char *msg, char *option, char *file, int lineno)$/;"	f	language:C	typeref:typename:int	file:	signature:(const char * msg,char * option,char * file,int lineno)
message__add_file_line	scripts/kconfig/kxgettext.c	/^static int message__add_file_line(struct message *self, char *file, int lineno)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct message * self,char * file,int lineno)
message__list	scripts/kconfig/kxgettext.c	/^static struct message *message__list;$/;"	v	language:C	typeref:struct:message *	file:
message__new	scripts/kconfig/kxgettext.c	/^static struct message *message__new(const char *msg, char *option, char *file, int lineno)$/;"	f	language:C	typeref:struct:message *	file:	signature:(const char * msg,char * option,char * file,int lineno)
message__print_file_lineno	scripts/kconfig/kxgettext.c	/^static void message__print_file_lineno(struct message *self)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct message * self)
message__print_gettext_msgid_msgstr	scripts/kconfig/kxgettext.c	/^static void message__print_gettext_msgid_msgstr(struct message *self)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct message * self)
mixed-targets	Makefile	/^                mixed-targets := 1$/;"	m	language:Make
mixed-targets	Makefile	/^mixed-targets  := 0$/;"	m	language:Make
mkdir	scripts/kconfig/lkc_port.h	/^#define mkdir(/;"	d	language:C++	signature:(x,y)
mod	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	language:C++	enum:tristate
modColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
mode	scripts/kconfig/qconf.h	/^	enum listMode mode;$/;"	m	language:C++	class:ConfigList	typeref:enum:listMode
modePtr	scripts/kconfig/lxdialog/lxdialog.c	/^static struct Mode *modePtr;$/;"	v	language:C	typeref:struct:Mode *	file:
model1	scripts/kconfig/gconf.c	/^GtkTreeModel *model1, *model2;$/;"	v	language:C	typeref:typename:GtkTreeModel *
model2	scripts/kconfig/gconf.c	/^GtkTreeModel *model1, *model2;$/;"	v	language:C	typeref:typename:GtkTreeModel **
modes	scripts/kconfig/lxdialog/lxdialog.c	/^static struct Mode modes[] = {$/;"	v	language:C	typeref:struct:Mode[]	file:
modules_sym	scripts/kconfig/symbol.c	/^struct symbol *modules_sym;$/;"	v	language:C	typeref:struct:symbol *
modules_val	scripts/kconfig/symbol.c	/^tristate modules_val;$/;"	v	language:C	typeref:typename:tristate
mrproper	Makefile	/^mrproper: clean archmrproper $(mrproper-dirs)$/;"	t	language:Make
mrproper	Makefile	/^mrproper: rm-dirs  := $(wildcard $(MRPROPER_DIRS))$/;"	t	language:Make
mrproper	Makefile	/^mrproper: rm-files := $(wildcard $(MRPROPER_FILES))$/;"	t	language:Make
mrproper-dirs	Makefile	/^mrproper-dirs      := $(addprefix _mrproper_, scripts)$/;"	m	language:Make
msg	scripts/kconfig/kxgettext.c	/^	const char	 *msg;$/;"	m	language:C	struct:message	typeref:typename:const char *	file:
name	scripts/kconfig/expr.h	/^	char *name;$/;"	m	language:C++	struct:file	typeref:typename:char *
name	scripts/kconfig/expr.h	/^	char *name;$/;"	m	language:C++	struct:symbol	typeref:typename:char *
name	scripts/kconfig/lkc.h	/^	int name;$/;"	m	language:C++	struct:kconf_id	typeref:typename:int
name	scripts/kconfig/lxdialog/lxdialog.c	/^	char *name;$/;"	m	language:C	struct:Mode	typeref:typename:char *	file:
nameColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
new_string	scripts/kconfig/lex.zconf.c	/^void new_string(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
next	scripts/kconfig/expr.h	/^	struct file *next;$/;"	m	language:C++	struct:file	typeref:struct:file *
next	scripts/kconfig/expr.h	/^	struct menu *next;$/;"	m	language:C++	struct:menu	typeref:struct:menu *
next	scripts/kconfig/expr.h	/^	struct property *next;$/;"	m	language:C++	struct:property	typeref:struct:property *
next	scripts/kconfig/expr.h	/^	struct symbol *next;$/;"	m	language:C++	struct:symbol	typeref:struct:symbol *
next	scripts/kconfig/kxgettext.c	/^	struct file_line *next;$/;"	m	language:C	struct:file_line	typeref:struct:file_line *	file:
next	scripts/kconfig/kxgettext.c	/^	struct message	 *next;$/;"	m	language:C	struct:message	typeref:struct:message *	file:
next	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_list *next;$/;"	m	language:C++	struct:dialog_list	typeref:struct:dialog_list *
nextItem	scripts/kconfig/qconf.h	/^	ConfigItem* nextItem;$/;"	m	language:C++	class:ConfigItem	typeref:typename:ConfigItem *
nextSibling	scripts/kconfig/qconf.h	/^	ConfigItem* nextSibling() const$/;"	f	language:C++	class:ConfigItem	typeref:typename:ConfigItem *	signature:() const
nextView	scripts/kconfig/qconf.h	/^	ConfigView* nextView;$/;"	m	language:C++	class:ConfigView	typeref:typename:ConfigView *
nl	scripts/kconfig/zconf.y	/^nl:$/;"	l	language:YACC
no	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	language:C++	enum:tristate
no-dot-config-targets	Makefile	/^no-dot-config-targets := clean mrproper distclean \\$/;"	m	language:Make
noColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
node	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_item node;$/;"	m	language:C++	struct:dialog_list	typeref:struct:dialog_item
nodename	scripts/kconfig/lkc_port.h	/^	char nodename[_UTSNAME_NODENAME_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
nohelp_text	scripts/kconfig/conf.c	/^static char nohelp_text[] = N_("Sorry, no help available for this option yet.\\n");$/;"	v	language:C	typeref:typename:char[]	file:
nohelp_text	scripts/kconfig/mconf.c	/^nohelp_text[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][]	file:
obj	Makefile	/^obj		:= $(objtree)$/;"	m	language:Make
obj-y	init/Makefile	/^obj-y		:=$/;"	m	language:Make
objtree	Makefile	/^objtree		:= $(CURDIR)$/;"	m	language:Make
okRename	scripts/kconfig/qconf.cc	/^void ConfigItem::okRename(int col)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(int col)
oldconfig	scripts/kconfig/Makefile	/^oldconfig: $(obj)\/conf$/;"	t	language:Make
on_about1_activate	scripts/kconfig/gconf.c	/^void on_about1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_back_clicked	scripts/kconfig/gconf.c	/^void on_back_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_collapse_clicked	scripts/kconfig/gconf.c	/^void on_collapse_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_expand_clicked	scripts/kconfig/gconf.c	/^void on_expand_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_full_clicked	scripts/kconfig/gconf.c	/^void on_full_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_introduction1_activate	scripts/kconfig/gconf.c	/^void on_introduction1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_key_esc	scripts/kconfig/lxdialog/util.c	/^int on_key_esc(WINDOW *win)$/;"	f	language:C	typeref:typename:int	signature:(WINDOW * win)
on_key_resize	scripts/kconfig/lxdialog/util.c	/^int on_key_resize(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
on_license1_activate	scripts/kconfig/gconf.c	/^void on_license1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_load1_activate	scripts/kconfig/gconf.c	/^void on_load1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_load_clicked	scripts/kconfig/gconf.c	/^void on_load_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_quit1_activate	scripts/kconfig/gconf.c	/^void on_quit1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_save_activate	scripts/kconfig/gconf.c	/^void on_save_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_save_as1_activate	scripts/kconfig/gconf.c	/^void on_save_as1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_show_all_options1_activate	scripts/kconfig/gconf.c	/^on_show_all_options1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_show_data1_activate	scripts/kconfig/gconf.c	/^void on_show_data1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_show_debug_info1_activate	scripts/kconfig/gconf.c	/^on_show_debug_info1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_show_name1_activate	scripts/kconfig/gconf.c	/^void on_show_name1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_show_range1_activate	scripts/kconfig/gconf.c	/^void on_show_range1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkMenuItem * menuitem,gpointer user_data)
on_single_clicked	scripts/kconfig/gconf.c	/^void on_single_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_split_clicked	scripts/kconfig/gconf.c	/^void on_split_clicked(GtkButton * button, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkButton * button,gpointer user_data)
on_treeview1_button_press_event	scripts/kconfig/gconf.c	/^on_treeview1_button_press_event(GtkWidget * widget,$/;"	f	language:C	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventButton * event,gpointer user_data)
on_treeview2_button_press_event	scripts/kconfig/gconf.c	/^on_treeview2_button_press_event(GtkWidget * widget,$/;"	f	language:C	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventButton * event,gpointer user_data)
on_treeview2_cursor_changed	scripts/kconfig/gconf.c	/^on_treeview2_cursor_changed(GtkTreeView * treeview, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkTreeView * treeview,gpointer user_data)
on_treeview2_key_press_event	scripts/kconfig/gconf.c	/^on_treeview2_key_press_event(GtkWidget * widget,$/;"	f	language:C	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventKey * event,gpointer user_data)
on_window1_delete_event	scripts/kconfig/gconf.c	/^gboolean on_window1_delete_event(GtkWidget * widget, GdkEvent * event,$/;"	f	language:C	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEvent * event,gpointer user_data)
on_window1_destroy	scripts/kconfig/gconf.c	/^void on_window1_destroy(GtkObject * object, gpointer user_data)$/;"	f	language:C	typeref:typename:void	signature:(GtkObject * object,gpointer user_data)
on_window1_size_request	scripts/kconfig/gconf.c	/^on_window1_size_request(GtkWidget * widget,$/;"	f	language:C	typeref:typename:void	signature:(GtkWidget * widget,GtkRequisition * requisition,gpointer user_data)
option	scripts/kconfig/kxgettext.c	/^	const char	 *option;$/;"	m	language:C	struct:message	typeref:typename:const char *	file:
option_error	scripts/kconfig/zconf.y	/^option_error:$/;"	l	language:YACC
option_name	scripts/kconfig/zconf.y	/^option_name:$/;"	l	language:YACC
options1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkMenuItem" id="options1">$/;"	i	language:Glade
options1_menu	scripts/kconfig/gconf.glade	/^		<widget class="GtkMenu" id="options1_menu">$/;"	i	language:Glade
outputmakefile	Makefile	/^outputmakefile:$/;"	t	language:Make
page	scripts/kconfig/lxdialog/textbox.c	/^static const char *page;$/;"	v	language:C	typeref:typename:const char *	file:
page_length	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	language:C	typeref:typename:int	file:
paintCell	scripts/kconfig/qconf.cc	/^void ConfigItem::paintCell(QPainter* p, const QColorGroup& cg, int column, int width, int align)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(QPainter * p,const QColorGroup & cg,int column,int width,int align)
parent	scripts/kconfig/expr.h	/^	struct file *parent;$/;"	m	language:C++	struct:file	typeref:struct:file *
parent	scripts/kconfig/expr.h	/^	struct menu *parent;$/;"	m	language:C++	struct:menu	typeref:struct:menu *
parent	scripts/kconfig/lex.zconf.c	/^        struct buffer *parent;$/;"	m	language:C	struct:buffer	typeref:struct:buffer *	file:
parent	scripts/kconfig/qconf.h	/^	ConfigView* parent(void) const$/;"	f	language:C++	class:ConfigLineEdit	typeref:typename:ConfigView *	signature:(void) const
parent	scripts/kconfig/qconf.h	/^	ConfigView* parent(void) const$/;"	f	language:C++	class:ConfigList	typeref:typename:ConfigView *	signature:(void) const
parents	scripts/kconfig/gconf.c	/^static GtkTreeIter *parents[256];$/;"	v	language:C	typeref:typename:GtkTreeIter * [256]	file:
parse_config_file	scripts/basic/fixdep.c	/^void parse_config_file(char *map, size_t len)$/;"	f	language:C	typeref:typename:void	signature:(char * map,size_t len)
parse_dep_file	scripts/basic/fixdep.c	/^void parse_dep_file(void *map, size_t len)$/;"	f	language:C	typeref:typename:void	signature:(void * map,size_t len)
parse_email	scripts/checkpatch.pl	/^sub parse_email {$/;"	s	language:Perl
pattern	Makefile	/^pattern = ".*\/localversion[^~]*"$/;"	m	language:Make
perms_to_octal	scripts/checkpatch.pl	/^sub perms_to_octal {$/;"	s	language:Perl
pixmap	scripts/kconfig/qconf.h	/^	const QPixmap* pixmap(colIdx idx) const$/;"	f	language:C++	class:ConfigItem	typeref:typename:const QPixmap *	signature:(colIdx idx) const
place_node	scripts/kconfig/gconf.c	/^static void place_node(struct menu *menu, char **row)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu,char ** row)
pos_last_openparen	scripts/checkpatch.pl	/^sub pos_last_openparen {$/;"	s	language:Perl
position_indicator	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color position_indicator;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
possible	scripts/checkpatch.pl	/^sub possible {$/;"	s	language:Perl
prepare	Makefile	/^prepare: prepare0$/;"	t	language:Make
prepare0	Makefile	/^prepare0: archprepare FORCE$/;"	t	language:Make
prepare1	Makefile	/^prepare1: prepare2 include\/target\/version.h include\/target\/utsrelease.h \\$/;"	t	language:Make
prepare2	Makefile	/^prepare2: prepare3 outputmakefile$/;"	t	language:Make
prepare3	Makefile	/^prepare3: include\/config\/kernel.release$/;"	t	language:Make
print_arrows	scripts/kconfig/lxdialog/checklist.c	/^static void print_arrows(WINDOW * win, int choice, int item_no, int scroll,$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int choice,int item_no,int scroll,int y,int x,int height)
print_arrows	scripts/kconfig/lxdialog/menubox.c	/^static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int item_no,int scroll,int y,int x,int height)
print_autowrap	scripts/kconfig/lxdialog/util.c	/^void print_autowrap(WINDOW * win, const char *prompt, int width, int y, int x)$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * win,const char * prompt,int width,int y,int x)
print_button	scripts/kconfig/lxdialog/util.c	/^void print_button(WINDOW * win, const char *label, int y, int x, int selected)$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * win,const char * label,int y,int x,int selected)
print_buttons	scripts/kconfig/lxdialog/checklist.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * dialog,int height,int width,int selected)
print_buttons	scripts/kconfig/lxdialog/inputbox.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * dialog,int height,int width,int selected)
print_buttons	scripts/kconfig/lxdialog/menubox.c	/^static void print_buttons(WINDOW * win, int height, int width, int selected)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int height,int width,int selected)
print_buttons	scripts/kconfig/lxdialog/yesno.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * dialog,int height,int width,int selected)
print_cmdline	scripts/basic/fixdep.c	/^void print_cmdline(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
print_deps	scripts/basic/fixdep.c	/^void print_deps(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
print_filter	scripts/kconfig/qconf.cc	/^QString ConfigInfoView::print_filter(const QString &str)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:QString	signature:(const QString & str)
print_item	scripts/kconfig/lxdialog/checklist.c	/^static void print_item(WINDOW * win, int choice, int selected)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int choice,int selected)
print_item	scripts/kconfig/lxdialog/menubox.c	/^#define print_item(/;"	d	language:C	file:	signature:(index,choice,selected)
print_line	scripts/kconfig/lxdialog/textbox.c	/^static void print_line(WINDOW * win, int row, int width)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int row,int width)
print_page	scripts/kconfig/lxdialog/textbox.c	/^static void print_page(WINDOW * win, int height, int width)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win,int height,int width)
print_position	scripts/kconfig/lxdialog/textbox.c	/^static void print_position(WINDOW * win)$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * win)
print_quoted_string	scripts/kconfig/zconf.tab.c	/^void print_quoted_string(FILE *out, const char *str)$/;"	f	language:C	typeref:typename:void	signature:(FILE * out,const char * str)
print_symbol	scripts/kconfig/zconf.tab.c	/^void print_symbol(FILE *out, struct menu *menu)$/;"	f	language:C	typeref:typename:void	signature:(FILE * out,struct menu * menu)
print_title	scripts/kconfig/lxdialog/util.c	/^void print_title(WINDOW *dialog, const char *title, int width)$/;"	f	language:C	typeref:typename:void	signature:(WINDOW * dialog,const char * title,int width)
printd	scripts/kconfig/zconf.tab.c	/^int printd(int mask, const char *format, ...)$/;"	f	language:C	typeref:typename:int	signature:(int mask,const char * format,...)
proc_hang	arch/arm64/kernel/head.S	/^proc_hang:$/;"	l	language:Asm
process	scripts/checkpatch.pl	/^sub process {$/;"	s	language:Perl
progname	scripts/kconfig/qconf.cc	/^static const char *progname;$/;"	v	language:C++	typeref:typename:const char *	file:
prompt	scripts/kconfig/expr.h	/^	struct property *prompt;$/;"	m	language:C++	struct:menu	typeref:struct:property *
prompt	scripts/kconfig/zconf.y	/^prompt:	  T_WORD$/;"	l	language:YACC
promptColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
prompt_stmt_opt	scripts/kconfig/zconf.y	/^prompt_stmt_opt:$/;"	l	language:YACC
prop	scripts/kconfig/expr.h	/^	struct property *prop;$/;"	m	language:C++	struct:symbol	typeref:struct:property *
prop_alloc	scripts/kconfig/symbol.c	/^struct property *prop_alloc(enum prop_type type, struct symbol *sym)$/;"	f	language:C	typeref:struct:property *	signature:(enum prop_type type,struct symbol * sym)
prop_get_symbol	scripts/kconfig/symbol.c	/^struct symbol *prop_get_symbol(struct property *prop)$/;"	f	language:C	typeref:struct:symbol *	signature:(struct property * prop)
prop_get_type_name	scripts/kconfig/symbol.c	/^const char *prop_get_type_name(enum prop_type type)$/;"	f	language:C	typeref:typename:const char *	signature:(enum prop_type type)
prop_type	scripts/kconfig/expr.h	/^enum prop_type {$/;"	g	language:C++
prop_warn	scripts/kconfig/menu.c	/^static void prop_warn(struct property *prop, const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct property * prop,const char * fmt,...)
property	scripts/kconfig/expr.h	/^struct property {$/;"	s	language:C++
put32	arch/arm64/kernel/utils.S	/^put32:$/;"	l	language:Asm
qconf-cxxobjs	scripts/kconfig/Makefile	/^qconf-cxxobjs	:= qconf.o$/;"	m	language:Make
qconf-objs	scripts/kconfig/Makefile	/^qconf-objs	:= kconfig_load.o zconf.tab.o$/;"	m	language:Make
qconf-target	scripts/kconfig/Makefile	/^	qconf-target := 1$/;"	m	language:Make
qgettext	scripts/kconfig/qconf.cc	/^static inline QString qgettext(const QString& str)$/;"	f	language:C++	typeref:typename:QString	file:	signature:(const QString & str)
qgettext	scripts/kconfig/qconf.cc	/^static inline QString qgettext(const char* str)$/;"	f	language:C++	typeref:typename:QString	file:	signature:(const char * str)
quiet	Makefile	/^  quiet =$/;"	m	language:Make
quiet	Makefile	/^  quiet=quiet_$/;"	m	language:Make
quiet_cmd_as_o_S	Makefile	/^quiet_cmd_as_o_S = AS      $@$/;"	m	language:Make
quiet_cmd_openos	Makefile	/^quiet_cmd_openos = LD      $@$/;"	m	language:Make
quiet_cmd_openos_version	Makefile	/^quiet_cmd_openos_version = GEN     .version$/;"	m	language:Make
quiet_cmd_rmdirs	Makefile	/^quiet_cmd_rmdirs = $(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))$/;"	m	language:Make
quiet_cmd_rmfiles	Makefile	/^quiet_cmd_rmfiles = $(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))$/;"	m	language:Make
quiet_cmd_strip	arch/arm64/boot/Makefile	/^quiet_cmd_strip     = STRIP   $@$/;"	m	language:Make
quit1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="quit1">$/;"	i	language:Glade
radiolist_instructions	scripts/kconfig/mconf.c	/^radiolist_instructions[] = N_($/;"	v	language:C	typeref:typename:const char[][][]	file:
randconfig	scripts/kconfig/Makefile	/^randconfig: $(obj)\/conf$/;"	t	language:Make
random	scripts/kconfig/lkc_port.h	/^#define random	/;"	d	language:C++
raw_line	scripts/checkpatch.pl	/^sub raw_line {$/;"	s	language:Perl
readBoolEntry	scripts/kconfig/qconf.h	/^	bool readBoolEntry(const QString& key, bool def = FALSE, bool* ok = 0) const$/;"	f	language:C++	class:QSettings	typeref:typename:bool	signature:(const QString & key,bool def=FALSE,bool * ok=0) const
readEntry	scripts/kconfig/qconf.h	/^	QString readEntry(const QString& key, const QString& def = QString::null, bool* ok = 0) const$/;"	f	language:C++	class:QSettings	typeref:typename:QString	signature:(const QString & key,const QString & def=QString::null,bool * ok=0) const
readListEntry	scripts/kconfig/qconf.h	/^	QStringList readListEntry(const QString& key, bool* ok = 0) const$/;"	f	language:C++	class:QSettings	typeref:typename:QStringList	signature:(const QString & key,bool * ok=0) const
readNumEntry	scripts/kconfig/qconf.h	/^	int readNumEntry(const QString& key, int def = 0, bool* ok = 0) const$/;"	f	language:C++	class:QSettings	typeref:typename:int	signature:(const QString & key,int def=0,bool * ok=0) const
readSizes	scripts/kconfig/qconf.cc	/^QValueList<int> ConfigSettings::readSizes(const QString& key, bool *ok)$/;"	f	language:C++	class:ConfigSettings	typeref:typename:QValueList<int>	signature:(const QString & key,bool * ok)
read_words	scripts/checkpatch.pl	/^sub read_words {$/;"	s	language:Perl
readl	arch/arm64/include/asm/io.h	/^#define readl(/;"	d	language:C++	signature:(c)
readl	arch/arm64/include/asm/io.h	/^static inline unsigned int readl(unsigned int addr)$/;"	f	language:C++	typeref:typename:unsigned int	signature:(unsigned int addr)
refresh_text_box	scripts/kconfig/lxdialog/textbox.c	/^static void refresh_text_box(WINDOW *dialog, WINDOW *box, int boxh, int boxw,$/;"	f	language:C	typeref:typename:void	file:	signature:(WINDOW * dialog,WINDOW * box,int boxh,int boxw,int cur_y,int cur_x)
reinit	scripts/kconfig/qconf.cc	/^void ConfigList::reinit(void)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(void)
release	scripts/kconfig/lkc_port.h	/^	char release[_UTSNAME_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
removeColumn	scripts/kconfig/qconf.h	/^	void removeColumn(colIdx idx)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(colIdx idx)
renderer_edited	scripts/kconfig/gconf.c	/^static void renderer_edited(GtkCellRendererText * cell,$/;"	f	language:C	typeref:typename:void	file:	signature:(GtkCellRendererText * cell,const gchar * path_string,const gchar * new_text,gpointer user_data)
renderer_toggled	scripts/kconfig/gconf.c	/^static void renderer_toggled(GtkCellRendererToggle * cell,$/;"	f	language:C	typeref:typename:void	file:	signature:(GtkCellRendererToggle * cell,gchar * path_string,gpointer user_data)
replace_button_icon	scripts/kconfig/gconf.c	/^void replace_button_icon(GladeXML * xml, GdkDrawable * window,$/;"	f	language:C	typeref:typename:void	signature:(GladeXML * xml,GdkDrawable * window,GtkStyle * style,gchar * btn_name,gchar ** xpm)
report	scripts/checkpatch.pl	/^sub report {$/;"	s	language:Perl
report_dump	scripts/checkpatch.pl	/^sub report_dump {$/;"	s	language:Perl
reset_dialog	scripts/kconfig/lxdialog/util.c	/^void reset_dialog(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
resizeable	scripts/kconfig/gconf.c	/^static gboolean resizeable = FALSE;$/;"	v	language:C	typeref:typename:gboolean	file:
result	scripts/kconfig/qconf.h	/^	struct symbol **result;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:struct:symbol **
rev_dep	scripts/kconfig/expr.h	/^	struct expr_value rev_dep;$/;"	m	language:C++	struct:symbol	typeref:struct:expr_value
right	scripts/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	language:C++	struct:expr	typeref:union:expr_data
rm-dirs	Makefile	/^clean: rm-dirs  := $(CLEAN_DIRS)$/;"	m	language:Make
rm-dirs	Makefile	/^mrproper: rm-dirs  := $(wildcard $(MRPROPER_DIRS))$/;"	m	language:Make
rm-files	Makefile	/^clean: rm-files := $(CLEAN_FILES)$/;"	m	language:Make
rm-files	Makefile	/^mrproper: rm-files := $(wildcard $(MRPROPER_FILES))$/;"	m	language:Make
rootEntry	scripts/kconfig/conf.c	/^static struct menu *rootEntry;$/;"	v	language:C	typeref:struct:menu *	file:
rootEntry	scripts/kconfig/qconf.h	/^	struct menu *rootEntry;$/;"	m	language:C++	class:ConfigList	typeref:struct:menu *
rootmenu	scripts/kconfig/menu.c	/^struct menu rootmenu;$/;"	v	language:C	typeref:struct:menu
rows	scripts/kconfig/mconf.c	/^static int rows = 0, cols = 0;$/;"	v	language:C	typeref:typename:int	file:
rtrim	scripts/checkpatch.pl	/^sub rtrim {$/;"	s	language:Perl
rule_openos	Makefile	/^define rule_openos$/;"	m	language:Make
run	arch/arm64/Makefile	/^run:$/;"	t	language:Make
s	scripts/kconfig/lkc.h	/^	char  *s;$/;"	m	language:C++	struct:gstr	typeref:typename:char *
sanitise_line	scripts/checkpatch.pl	/^sub sanitise_line {$/;"	s	language:Perl
sanitise_line_reset	scripts/checkpatch.pl	/^sub sanitise_line_reset {$/;"	s	language:Perl
save1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="save1">$/;"	i	language:Glade
saveAction	scripts/kconfig/qconf.cc	/^QAction *ConfigMainWindow::saveAction;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QAction *
saveAction	scripts/kconfig/qconf.h	/^	static QAction *saveAction;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QAction *
saveConfig	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveConfig(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
saveConfigAs	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveConfigAs(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
saveSettings	scripts/kconfig/qconf.cc	/^void ConfigInfoView::saveSettings(void)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(void)
saveSettings	scripts/kconfig/qconf.cc	/^void ConfigList::saveSettings(void)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(void)
saveSettings	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveSettings(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
saveSettings	scripts/kconfig/qconf.cc	/^void ConfigSearchWindow::saveSettings(void)$/;"	f	language:C++	class:ConfigSearchWindow	typeref:typename:void	signature:(void)
save_as1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkImageMenuItem" id="save_as1">$/;"	i	language:Glade
save_btn	scripts/kconfig/gconf.c	/^GtkWidget *save_btn = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
save_config_help	scripts/kconfig/mconf.c	/^save_config_help[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][][][][][]	file:
save_config_text	scripts/kconfig/mconf.c	/^save_config_text[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][][][][]	file:
save_menu_item	scripts/kconfig/gconf.c	/^GtkWidget *save_menu_item = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
screen	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color screen;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
scripts	Makefile	/^scripts: scripts_basic include\/config\/auto.conf$/;"	t	language:Make
scripts/basic/%	Makefile	/^scripts\/basic\/%: scripts_basic ;$/;"	t	language:Make
scripts_basic	Makefile	/^scripts_basic:$/;"	t	language:Make
scrolledwindow1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkScrolledWindow" id="scrolledwindow1">$/;"	i	language:Glade
scrolledwindow2	scripts/kconfig/gconf.glade	/^		<widget class="GtkScrolledWindow" id="scrolledwindow2">$/;"	i	language:Glade
scrolledwindow3	scripts/kconfig/gconf.glade	/^		<widget class="GtkScrolledWindow" id="scrolledwindow3">$/;"	i	language:Glade
search	scripts/kconfig/qconf.cc	/^void ConfigSearchWindow::search(void)$/;"	f	language:C++	class:ConfigSearchWindow	typeref:typename:void	signature:(void)
searchButton	scripts/kconfig/qconf.h	/^	QPushButton* searchButton;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:typename:QPushButton *
searchConfig	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::searchConfig(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
searchWindow	scripts/kconfig/qconf.h	/^	ConfigSearchWindow *searchWindow;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:ConfigSearchWindow *
search_conf	scripts/kconfig/mconf.c	/^static void search_conf(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
search_help	scripts/kconfig/mconf.c	/^search_help[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][][][][][][][]	file:
searchbox	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
searchbox_border	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox_border;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
searchbox_title	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox_title;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
seed_camelcase_file	scripts/checkpatch.pl	/^sub seed_camelcase_file {$/;"	s	language:Perl
seed_camelcase_includes	scripts/checkpatch.pl	/^sub seed_camelcase_includes {$/;"	s	language:Perl
selected	scripts/kconfig/lxdialog/dialog.h	/^	int selected;	\/* Set to 1 by dialog_*() function if selected. *\/$/;"	m	language:C++	struct:dialog_item	typeref:typename:int
separator1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkSeparatorMenuItem" id="separator1">$/;"	i	language:Glade
separator2	scripts/kconfig/gconf.glade	/^		    <widget class="GtkSeparatorMenuItem" id="separator2">$/;"	i	language:Glade
setAllOpen	scripts/kconfig/qconf.cc	/^void ConfigList::setAllOpen(bool open)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(bool open)
setInfo	scripts/kconfig/qconf.cc	/^void ConfigInfoView::setInfo(struct menu *m)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(struct menu * m)
setMenuLink	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setMenuLink(struct menu *menu)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(struct menu * menu)
setParentMenu	scripts/kconfig/qconf.cc	/^void ConfigList::setParentMenu(void)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(void)
setPixmap	scripts/kconfig/qconf.h	/^	void setPixmap(colIdx idx, const QPixmap& pm)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(colIdx idx,const QPixmap & pm)
setRootMenu	scripts/kconfig/qconf.cc	/^void ConfigList::setRootMenu(struct menu *menu)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(struct menu * menu)
setShowAll	scripts/kconfig/qconf.cc	/^void ConfigView::setShowAll(bool b)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(bool b)
setShowData	scripts/kconfig/qconf.cc	/^void ConfigView::setShowData(bool b)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(bool b)
setShowDebug	scripts/kconfig/qconf.cc	/^void ConfigInfoView::setShowDebug(bool b)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(bool b)
setShowName	scripts/kconfig/qconf.cc	/^void ConfigView::setShowName(bool b)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(bool b)
setShowRange	scripts/kconfig/qconf.cc	/^void ConfigView::setShowRange(bool b)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(bool b)
setSource	scripts/kconfig/qconf.cc	/^void ConfigInfoView::setSource(const QString& name)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(const QString & name)
setText	scripts/kconfig/qconf.h	/^	void setText(colIdx idx, const QString& text)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(colIdx idx,const QString & text)
setValue	scripts/kconfig/qconf.cc	/^void ConfigList::setValue(ConfigItem* item, tristate val)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(ConfigItem * item,tristate val)
set_blackbg_theme	scripts/kconfig/lxdialog/util.c	/^static void set_blackbg_theme(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_bluetitle_theme	scripts/kconfig/lxdialog/util.c	/^static void set_bluetitle_theme(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_classic_theme	scripts/kconfig/lxdialog/util.c	/^static void set_classic_theme(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_config_filename	scripts/kconfig/mconf.c	/^static void set_config_filename(const char *config_filename)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * config_filename)
set_default	scripts/kconfig/conf.c	/^	set_default,$/;"	e	language:C	enum:__anon4790eb030103	file:
set_dialog_backtitle	scripts/kconfig/lxdialog/util.c	/^void set_dialog_backtitle(const char *backtitle)$/;"	f	language:C	typeref:typename:void	signature:(const char * backtitle)
set_mod	scripts/kconfig/conf.c	/^	set_mod,$/;"	e	language:C	enum:__anon4790eb030103	file:
set_mono_theme	scripts/kconfig/lxdialog/util.c	/^static void set_mono_theme(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_no	scripts/kconfig/conf.c	/^	set_no,$/;"	e	language:C	enum:__anon4790eb030103	file:
set_node	scripts/kconfig/gconf.c	/^static void set_node(GtkTreeIter * node, struct menu *menu, gchar ** row)$/;"	f	language:C	typeref:typename:void	file:	signature:(GtkTreeIter * node,struct menu * menu,gchar ** row)
set_random	scripts/kconfig/conf.c	/^	set_random$/;"	e	language:C	enum:__anon4790eb030103	file:
set_theme	scripts/kconfig/lxdialog/util.c	/^static int set_theme(const char *theme)$/;"	f	language:C	typeref:typename:int	file:	signature:(const char * theme)
set_yes	scripts/kconfig/conf.c	/^	set_yes,$/;"	e	language:C	enum:__anon4790eb030103	file:
setenv	scripts/kconfig/lkc_port.h	/^static inline int setenv(const char *name, char *value, int unused)$/;"	f	language:C++	typeref:typename:int	signature:(const char * name,char * value,int unused)
setmod_text	scripts/kconfig/mconf.c	/^setmod_text[] = N_($/;"	v	language:C	typeref:typename:const char[][][][][][][]	file:
shadow	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color shadow;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
show	scripts/kconfig/qconf.cc	/^void ConfigLineEdit::show(ConfigItem* i)$/;"	f	language:C++	class:ConfigLineEdit	typeref:typename:void	signature:(ConfigItem * i)
showAbout	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showAbout(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
showAll	scripts/kconfig/qconf.h	/^	bool showAll(void) const { return list->showAll; }$/;"	f	language:C++	class:ConfigView	typeref:typename:bool	signature:(void) const
showAll	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	language:C++	class:ConfigList	typeref:typename:bool
showData	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	language:C++	class:ConfigList	typeref:typename:bool
showData	scripts/kconfig/qconf.h	/^	bool showData(void) const { return list->showData; }$/;"	f	language:C++	class:ConfigView	typeref:typename:bool	signature:(void) const
showDebug	scripts/kconfig/qconf.h	/^	bool showDebug(void) const { return _showDebug; }$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:bool	signature:(void) const
showFullView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showFullView(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
showIntro	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showIntro(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
showName	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	language:C++	class:ConfigList	typeref:typename:bool
showName	scripts/kconfig/qconf.h	/^	bool showName(void) const { return list->showName; }$/;"	f	language:C++	class:ConfigView	typeref:typename:bool	signature:(void) const
showRange	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	language:C++	class:ConfigList	typeref:typename:bool
showRange	scripts/kconfig/qconf.h	/^	bool showRange(void) const { return list->showRange; }$/;"	f	language:C++	class:ConfigView	typeref:typename:bool	signature:(void) const
showSingleView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showSingleView(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
showSplitView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showSplitView(void)$/;"	f	language:C++	class:ConfigMainWindow	typeref:typename:void	signature:(void)
show_all	scripts/kconfig/gconf.c	/^static gboolean show_all = FALSE;$/;"	v	language:C	typeref:typename:gboolean	file:
show_all_options1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkCheckMenuItem" id="show_all_options1">$/;"	i	language:Glade
show_data1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkCheckMenuItem" id="show_data1">$/;"	i	language:Glade
show_debug	scripts/kconfig/gconf.c	/^static gboolean show_debug = FALSE;$/;"	v	language:C	typeref:typename:gboolean	file:
show_debug_info1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkCheckMenuItem" id="show_debug_info1">$/;"	i	language:Glade
show_help	scripts/kconfig/mconf.c	/^static void show_help(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
show_helptext	scripts/kconfig/mconf.c	/^static void show_helptext(const char *title, const char *text)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * title,const char * text)
show_name	scripts/kconfig/gconf.c	/^static gboolean show_name = TRUE;$/;"	v	language:C	typeref:typename:gboolean	file:
show_name1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkCheckMenuItem" id="show_name1">$/;"	i	language:Glade
show_range	scripts/kconfig/gconf.c	/^static gboolean show_range = TRUE;$/;"	v	language:C	typeref:typename:gboolean	file:
show_range1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkCheckMenuItem" id="show_range1">$/;"	i	language:Glade
show_textbox	scripts/kconfig/mconf.c	/^static void show_textbox(const char *title, const char *text, int r, int c)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * title,const char * text,int r,int c)
show_type	scripts/checkpatch.pl	/^sub show_type {$/;"	s	language:Perl
show_value	scripts/kconfig/gconf.c	/^static gboolean show_value = TRUE;$/;"	v	language:C	typeref:typename:gboolean	file:
silentoldconfig	scripts/kconfig/Makefile	/^silentoldconfig: $(obj)\/conf$/;"	t	language:Make
singleMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode, listMode$/;"	e	language:C++	enum:listMode
single_menu_mode	scripts/kconfig/mconf.c	/^static int single_menu_mode;$/;"	v	language:C	typeref:typename:int	file:
size_config	scripts/basic/fixdep.c	/^int    size_config = 0;$/;"	v	language:C	typeref:typename:int
source_stmt	scripts/kconfig/zconf.y	/^source_stmt: T_SOURCE prompt T_EOL$/;"	l	language:YACC
split	scripts/kconfig/qconf.h	/^	QSplitter* split;$/;"	m	language:C++	class:ConfigSearchWindow	typeref:typename:QSplitter *
split1	scripts/kconfig/qconf.h	/^	QSplitter* split1;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QSplitter *
split2	scripts/kconfig/qconf.h	/^	QSplitter* split2;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QSplitter *
srandom	scripts/kconfig/lkc_port.h	/^#define srandom	/;"	d	language:C++
src	Makefile	/^src		:= $(srctree)$/;"	m	language:Make
srctree	Makefile	/^srctree		:= $(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))$/;"	m	language:Make
state	scripts/kconfig/lex.zconf.c	/^        YY_BUFFER_STATE state;$/;"	m	language:C	struct:buffer	typeref:typename:YY_BUFFER_STATE	file:
statement_block_size	scripts/checkpatch.pl	/^sub statement_block_size {$/;"	s	language:Perl
statement_lines	scripts/checkpatch.pl	/^sub statement_lines {$/;"	s	language:Perl
statement_rawlines	scripts/checkpatch.pl	/^sub statement_rawlines {$/;"	s	language:Perl
stmt_list	scripts/kconfig/zconf.y	/^stmt_list:$/;"	l	language:YACC
store_filename	scripts/kconfig/gconf.c	/^store_filename(GtkFileSelection * file_selector, gpointer user_data)$/;"	f	language:C	typeref:typename:void	file:	signature:(GtkFileSelection * file_selector,gpointer user_data)
str	scripts/kconfig/lex.zconf.c	/^	int str = 0;$/;"	v	language:C	typeref:typename:int
str	scripts/kconfig/lxdialog/dialog.h	/^	char str[MAXITEMSTR];	\/* promtp displayed *\/$/;"	m	language:C++	struct:dialog_item	typeref:typename:char[]
str_append	scripts/kconfig/util.c	/^void str_append(struct gstr *gs, const char *s)$/;"	f	language:C	typeref:typename:void	signature:(struct gstr * gs,const char * s)
str_assign	scripts/kconfig/util.c	/^struct gstr str_assign(const char *s)$/;"	f	language:C	typeref:struct:gstr	signature:(const char * s)
str_config	scripts/basic/fixdep.c	/^char * str_config  = NULL;$/;"	v	language:C	typeref:typename:char *
str_free	scripts/kconfig/util.c	/^void str_free(struct gstr *gs)$/;"	f	language:C	typeref:typename:void	signature:(struct gstr * gs)
str_get	scripts/kconfig/util.c	/^const char *str_get(struct gstr *gs)$/;"	f	language:C	typeref:typename:const char *	signature:(struct gstr * gs)
str_new	scripts/kconfig/util.c	/^struct gstr str_new(void)$/;"	f	language:C	typeref:struct:gstr	signature:(void)
str_printf	scripts/kconfig/util.c	/^void str_printf(struct gstr *gs, const char *fmt, ...)$/;"	f	language:C	typeref:typename:void	signature:(struct gstr * gs,const char * fmt,...)
string	Makefile	/^string  = $(shell cat \/dev\/null \\$/;"	m	language:Make
string	scripts/kconfig/zconf.tab.c	/^	char *string;$/;"	m	language:C	union:YYSTYPE	typeref:typename:char *	file:
string_find_replace	scripts/checkpatch.pl	/^sub string_find_replace {$/;"	s	language:Perl
strip	scripts/kconfig/conf.c	/^static void strip(char *str)$/;"	f	language:C	typeref:typename:void	file:	signature:(char * str)
strrcmp	scripts/basic/fixdep.c	/^int strrcmp(char *s, char *sub)$/;"	f	language:C	typeref:typename:int	signature:(char * s,char * sub)
stype	scripts/kconfig/lkc.h	/^	enum symbol_type stype;$/;"	m	language:C++	struct:kconf_id	typeref:enum:symbol_type
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	language:C++	struct:menu	typeref:struct:symbol *
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	language:C++	struct:property	typeref:struct:symbol *
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	language:C++	union:expr_data	typeref:struct:symbol *
sym	scripts/kconfig/qconf.h	/^	struct symbol *sym;$/;"	m	language:C++	class:ConfigInfoView	typeref:struct:symbol *
sym_add_change_count	scripts/kconfig/confdata.c	/^void sym_add_change_count(int count)$/;"	f	language:C	typeref:typename:void	signature:(int count)
sym_add_default	scripts/kconfig/symbol.c	/^void sym_add_default(struct symbol *sym, const char *def)$/;"	f	language:C	typeref:typename:void	signature:(struct symbol * sym,const char * def)
sym_calc_choice	scripts/kconfig/symbol.c	/^static struct symbol *sym_calc_choice(struct symbol *sym)$/;"	f	language:C	typeref:struct:symbol *	file:	signature:(struct symbol * sym)
sym_calc_value	scripts/kconfig/symbol.c	/^void sym_calc_value(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	signature:(struct symbol * sym)
sym_calc_visibility	scripts/kconfig/symbol.c	/^static void sym_calc_visibility(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct symbol * sym)
sym_change_count	scripts/kconfig/confdata.c	/^static int sym_change_count;$/;"	v	language:C	typeref:typename:int	file:
sym_check_deps	scripts/kconfig/symbol.c	/^struct symbol *sym_check_deps(struct symbol *sym)$/;"	f	language:C	typeref:struct:symbol *	signature:(struct symbol * sym)
sym_check_expr_deps	scripts/kconfig/symbol.c	/^static struct symbol *sym_check_expr_deps(struct expr *e)$/;"	f	language:C	typeref:struct:symbol *	file:	signature:(struct expr * e)
sym_check_prop	scripts/kconfig/menu.c	/^void sym_check_prop(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	signature:(struct symbol * sym)
sym_clear_all_valid	scripts/kconfig/symbol.c	/^void sym_clear_all_valid(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sym_defconfig_list	scripts/kconfig/symbol.c	/^struct symbol *sym_defconfig_list;$/;"	v	language:C	typeref:struct:symbol *
sym_find	scripts/kconfig/symbol.c	/^struct symbol *sym_find(const char *name)$/;"	f	language:C	typeref:struct:symbol *	signature:(const char * name)
sym_get_choice_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_choice_prop(struct symbol *sym)$/;"	f	language:C	typeref:struct:property *	signature:(struct symbol * sym)
sym_get_choice_value	scripts/kconfig/lkc.h	/^static inline struct symbol *sym_get_choice_value(struct symbol *sym)$/;"	f	language:C++	typeref:struct:symbol *	signature:(struct symbol * sym)
sym_get_default_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_default_prop(struct symbol *sym)$/;"	f	language:C	typeref:struct:property *	signature:(struct symbol * sym)
sym_get_range_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_range_prop(struct symbol *sym)$/;"	f	language:C	typeref:struct:property *	signature:(struct symbol * sym)
sym_get_range_val	scripts/kconfig/symbol.c	/^static int sym_get_range_val(struct symbol *sym, int base)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct symbol * sym,int base)
sym_get_string_value	scripts/kconfig/symbol.c	/^const char *sym_get_string_value(struct symbol *sym)$/;"	f	language:C	typeref:typename:const char *	signature:(struct symbol * sym)
sym_get_tristate_value	scripts/kconfig/lkc.h	/^static inline tristate sym_get_tristate_value(struct symbol *sym)$/;"	f	language:C++	typeref:typename:tristate	signature:(struct symbol * sym)
sym_get_type	scripts/kconfig/symbol.c	/^enum symbol_type sym_get_type(struct symbol *sym)$/;"	f	language:C	typeref:enum:symbol_type	signature:(struct symbol * sym)
sym_has_value	scripts/kconfig/lkc.h	/^static inline bool sym_has_value(struct symbol *sym)$/;"	f	language:C++	typeref:typename:bool	signature:(struct symbol * sym)
sym_init	scripts/kconfig/symbol.c	/^void sym_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sym_is_changable	scripts/kconfig/symbol.c	/^bool sym_is_changable(struct symbol *sym)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym)
sym_is_choice	scripts/kconfig/lkc.h	/^static inline bool sym_is_choice(struct symbol *sym)$/;"	f	language:C++	typeref:typename:bool	signature:(struct symbol * sym)
sym_is_choice_value	scripts/kconfig/lkc.h	/^static inline bool sym_is_choice_value(struct symbol *sym)$/;"	f	language:C++	typeref:typename:bool	signature:(struct symbol * sym)
sym_is_optional	scripts/kconfig/lkc.h	/^static inline bool sym_is_optional(struct symbol *sym)$/;"	f	language:C++	typeref:typename:bool	signature:(struct symbol * sym)
sym_lookup	scripts/kconfig/symbol.c	/^struct symbol *sym_lookup(const char *name, int isconst)$/;"	f	language:C	typeref:struct:symbol *	signature:(const char * name,int isconst)
sym_re_search	scripts/kconfig/symbol.c	/^struct symbol **sym_re_search(const char *pattern)$/;"	f	language:C	typeref:struct:symbol **	signature:(const char * pattern)
sym_set_all_changed	scripts/kconfig/symbol.c	/^void sym_set_all_changed(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sym_set_change_count	scripts/kconfig/confdata.c	/^void sym_set_change_count(int count)$/;"	f	language:C	typeref:typename:void	signature:(int count)
sym_set_changed	scripts/kconfig/symbol.c	/^void sym_set_changed(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	signature:(struct symbol * sym)
sym_set_choice_value	scripts/kconfig/lkc.h	/^static inline bool sym_set_choice_value(struct symbol *ch, struct symbol *chval)$/;"	f	language:C++	typeref:typename:bool	signature:(struct symbol * ch,struct symbol * chval)
sym_set_string_value	scripts/kconfig/symbol.c	/^bool sym_set_string_value(struct symbol *sym, const char *newval)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym,const char * newval)
sym_set_tristate_value	scripts/kconfig/symbol.c	/^bool sym_set_tristate_value(struct symbol *sym, tristate val)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym,tristate val)
sym_string_valid	scripts/kconfig/symbol.c	/^bool sym_string_valid(struct symbol *sym, const char *str)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym,const char * str)
sym_string_within_range	scripts/kconfig/symbol.c	/^bool sym_string_within_range(struct symbol *sym, const char *str)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym,const char * str)
sym_toggle_tristate_value	scripts/kconfig/symbol.c	/^tristate sym_toggle_tristate_value(struct symbol *sym)$/;"	f	language:C	typeref:typename:tristate	signature:(struct symbol * sym)
sym_tristate_within_range	scripts/kconfig/symbol.c	/^bool sym_tristate_within_range(struct symbol *sym, tristate val)$/;"	f	language:C	typeref:typename:bool	signature:(struct symbol * sym,tristate val)
sym_type_name	scripts/kconfig/symbol.c	/^const char *sym_type_name(enum symbol_type type)$/;"	f	language:C	typeref:typename:const char *	signature:(enum symbol_type type)
sym_validate_range	scripts/kconfig/symbol.c	/^static void sym_validate_range(struct symbol *sym)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct symbol * sym)
symbol	scripts/kconfig/expr.h	/^struct symbol {$/;"	s	language:C++
symbol	scripts/kconfig/zconf.tab.c	/^	struct symbol *symbol;$/;"	m	language:C	union:YYSTYPE	typeref:struct:symbol *	file:
symbol	scripts/kconfig/zconf.y	/^symbol:	  T_WORD	{ $$ = sym_lookup($1, 0); free($1); }$/;"	l	language:YACC
symbolInfo	scripts/kconfig/qconf.cc	/^void ConfigInfoView::symbolInfo(void)$/;"	f	language:C++	class:ConfigInfoView	typeref:typename:void	signature:(void)
symbolModPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
symbolMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode, listMode$/;"	e	language:C++	enum:listMode
symbolNoPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
symbolYesPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
symbol_hash	scripts/kconfig/zconf.tab.c	/^struct symbol *symbol_hash[257];$/;"	v	language:C	typeref:struct:symbol * [257]
symbol_option	scripts/kconfig/zconf.y	/^symbol_option: T_OPTION symbol_option_list T_EOL$/;"	l	language:YACC
symbol_option_arg	scripts/kconfig/zconf.y	/^symbol_option_arg:$/;"	l	language:YACC
symbol_option_list	scripts/kconfig/zconf.y	/^symbol_option_list:$/;"	l	language:YACC
symbol_type	scripts/kconfig/expr.h	/^enum symbol_type {$/;"	g	language:C++
symbol_value	scripts/kconfig/expr.h	/^struct symbol_value {$/;"	s	language:C++
symbol_yes	scripts/kconfig/symbol.c	/^struct symbol symbol_yes = {$/;"	v	language:C	typeref:struct:symbol
sysname	scripts/kconfig/lkc_port.h	/^	char sysname[_UTSNAME_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
tabify	scripts/checkpatch.pl	/^sub tabify {$/;"	s	language:Perl
tag	scripts/kconfig/lxdialog/dialog.h	/^	char tag;$/;"	m	language:C++	struct:dialog_item	typeref:typename:char
tag	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
tag1	scripts/kconfig/gconf.c	/^GtkTextTag *tag1, *tag2;$/;"	v	language:C	typeref:typename:GtkTextTag *
tag2	scripts/kconfig/gconf.c	/^GtkTextTag *tag1, *tag2;$/;"	v	language:C	typeref:typename:GtkTextTag **
tag_key	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_key;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
tag_key_selected	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_key_selected;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
tag_selected	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_selected;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
target	scripts/basic/fixdep.c	/^char *target;$/;"	v	language:C	typeref:typename:char *
targets	Makefile	/^targets := $(wildcard $(sort $(targets)))$/;"	m	language:Make
testUpdateMenu	scripts/kconfig/qconf.cc	/^void ConfigItem::testUpdateMenu(bool v)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(bool v)
text	scripts/kconfig/expr.h	/^	const char *text;$/;"	m	language:C++	struct:property	typeref:typename:const char *
text	scripts/kconfig/lex.zconf.c	/^static char *text;$/;"	v	language:C	typeref:typename:char *	file:
text	scripts/kconfig/qconf.h	/^	QString text(colIdx idx) const$/;"	f	language:C++	class:ConfigItem	typeref:typename:QString	signature:(colIdx idx) const
text_asize	scripts/kconfig/lex.zconf.c	/^static int text_size, text_asize;$/;"	v	language:C	typeref:typename:int	file:
text_insert_help	scripts/kconfig/gconf.c	/^static void text_insert_help(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
text_insert_msg	scripts/kconfig/gconf.c	/^static void text_insert_msg(const char *title, const char *message)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * title,const char * message)
text_size	scripts/kconfig/lex.zconf.c	/^static int text_size, text_asize;$/;"	v	language:C	typeref:typename:int	file:
text_w	scripts/kconfig/gconf.c	/^GtkWidget *text_w = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
textdomain	scripts/kconfig/lkc.h	/^# define textdomain(/;"	d	language:C++	signature:(Domainname)
textview3	scripts/kconfig/gconf.glade	/^		    <widget class="GtkTextView" id="textview3">$/;"	i	language:Glade
title	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color title;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
toggle_sym_value	scripts/kconfig/gconf.c	/^static void toggle_sym_value(struct menu *menu)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * menu)
token	scripts/kconfig/lkc.h	/^	int token;$/;"	m	language:C++	struct:kconf_id	typeref:typename:int
toolBar	scripts/kconfig/qconf.h	/^	QToolBar *toolBar;$/;"	m	language:C++	class:ConfigMainWindow	typeref:typename:QToolBar *
toolbar1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkToolbar" id="toolbar1">$/;"	i	language:Glade
toolitem1	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolItem" id="toolitem1">$/;"	i	language:Glade
toolitem2	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolItem" id="toolitem2">$/;"	i	language:Glade
toolitem3	scripts/kconfig/gconf.glade	/^		<widget class="GtkToolItem" id="toolitem3">$/;"	i	language:Glade
top_of_kernel_tree	scripts/checkpatch.pl	/^sub top_of_kernel_tree {$/;"	s	language:Perl
trans_count	scripts/kconfig/expr.c	/^static int trans_count;$/;"	v	language:C	typeref:typename:int	file:
traps	scripts/basic/fixdep.c	/^void traps(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
tree	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v	language:C	typeref:typename:GtkTreeStore ***
tree1	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v	language:C	typeref:typename:GtkTreeStore *
tree1_w	scripts/kconfig/gconf.c	/^GtkWidget *tree1_w = NULL;	\/\/ left  frame$/;"	v	language:C	typeref:typename:GtkWidget *
tree2	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v	language:C	typeref:typename:GtkTreeStore **
tree2_w	scripts/kconfig/gconf.c	/^GtkWidget *tree2_w = NULL;	\/\/ right frame$/;"	v	language:C	typeref:typename:GtkWidget *
treeview1	scripts/kconfig/gconf.glade	/^		<widget class="GtkTreeView" id="treeview1">$/;"	i	language:Glade
treeview2	scripts/kconfig/gconf.glade	/^		    <widget class="GtkTreeView" id="treeview2">$/;"	i	language:Glade
tri	scripts/kconfig/expr.h	/^	tristate tri;$/;"	m	language:C++	struct:expr_value	typeref:typename:tristate
tri	scripts/kconfig/expr.h	/^	tristate tri;$/;"	m	language:C++	struct:symbol_value	typeref:typename:tristate
trim	scripts/checkpatch.pl	/^sub trim {$/;"	s	language:Perl
tristate	scripts/kconfig/expr.h	/^typedef enum tristate {$/;"	g	language:C++
tristate	scripts/kconfig/expr.h	/^} tristate;$/;"	t	language:C++	typeref:enum:tristate
true	scripts/kconfig/lkc_port.h	/^#define true /;"	d	language:C++
ts	scripts/kconfig/lex.zconf.c	/^	int ts, i;$/;"	v	language:C	typeref:typename:int
type	scripts/kconfig/expr.h	/^	enum expr_type type;$/;"	m	language:C++	struct:expr	typeref:enum:expr_type
type	scripts/kconfig/expr.h	/^	enum prop_type type;$/;"	m	language:C++	struct:property	typeref:enum:prop_type
type	scripts/kconfig/expr.h	/^	enum symbol_type type;$/;"	m	language:C++	struct:symbol	typeref:enum:symbol_type
uarrow	scripts/kconfig/lxdialog/dialog.h	/^	struct dialog_color uarrow;$/;"	m	language:C++	struct:dialog_info	typeref:struct:dialog_color
uart_init	arch/arm64/mach-rpi/mini_uart.c	/^void uart_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
uart_init	arch/arm64/mach-rpi/pl_uart.c	/^void uart_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
uart_recv	arch/arm64/mach-rpi/mini_uart.c	/^char uart_recv(void)$/;"	f	language:C	typeref:typename:char	signature:(void)
uart_recv	arch/arm64/mach-rpi/pl_uart.c	/^char uart_recv(void)$/;"	f	language:C	typeref:typename:char	signature:(void)
uart_send	arch/arm64/mach-rpi/mini_uart.c	/^void uart_send(char c)$/;"	f	language:C	typeref:typename:void	signature:(char c)
uart_send	arch/arm64/mach-rpi/pl_uart.c	/^void uart_send(char c)$/;"	f	language:C	typeref:typename:void	signature:(char c)
uart_send_string	arch/arm64/mach-rpi/mini_uart.c	/^void uart_send_string(char *str)$/;"	f	language:C	typeref:typename:void	signature:(char * str)
uart_send_string	arch/arm64/mach-rpi/pl_uart.c	/^void uart_send_string(char *str)$/;"	f	language:C	typeref:typename:void	signature:(char * str)
uname	scripts/kconfig/lkc_port.h	/^static inline int uname(struct utsname * uts)$/;"	f	language:C++	typeref:typename:int	signature:(struct utsname * uts)
uniq	scripts/checkpatch.pl	/^sub uniq {$/;"	s	language:Perl
unput	scripts/kconfig/lex.zconf.c	/^#define unput(/;"	d	language:C	file:	signature:(c)
update-po-config	scripts/kconfig/Makefile	/^update-po-config: $(obj)\/kxgettext$/;"	t	language:Make
updateAll	scripts/kconfig/qconf.h	/^	bool updateAll;$/;"	m	language:C++	class:ConfigList	typeref:typename:bool
updateList	scripts/kconfig/qconf.cc	/^void ConfigList::updateList(ConfigItem* item)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(ConfigItem * item)
updateList	scripts/kconfig/qconf.cc	/^void ConfigView::updateList(ConfigItem* item)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(ConfigItem * item)
updateListAll	scripts/kconfig/qconf.cc	/^void ConfigView::updateListAll(void)$/;"	f	language:C++	class:ConfigView	typeref:typename:void	signature:(void)
updateListAll	scripts/kconfig/qconf.h	/^	void updateListAll(void)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(void)
updateMenu	scripts/kconfig/qconf.cc	/^void ConfigItem::updateMenu(void)$/;"	f	language:C++	class:ConfigItem	typeref:typename:void	signature:(void)
updateMenuList	scripts/kconfig/qconf.cc	/^void ConfigList::updateMenuList(P* parent, struct menu* menu)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(P * parent,struct menu * menu)
updateSelection	scripts/kconfig/qconf.cc	/^void ConfigList::updateSelection(void)$/;"	f	language:C++	class:ConfigList	typeref:typename:void	signature:(void)
update_tree	scripts/kconfig/gconf.c	/^static void update_tree(struct menu *src, GtkTreeIter * dst)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct menu * src,GtkTreeIter * dst)
usage	scripts/basic/fixdep.c	/^void usage(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
usage	scripts/kconfig/lxdialog/check-lxdialog.sh	/^usage() {$/;"	f	language:Sh
usage	scripts/kconfig/qconf.cc	/^static void usage(void)$/;"	f	language:C++	typeref:typename:void	file:	signature:(void)
use_config	scripts/basic/fixdep.c	/^void use_config(char *m, int slen)$/;"	f	language:C	typeref:typename:void	signature:(char * m,int slen)
uts_len	Makefile	/^uts_len := 64$/;"	m	language:Make
utsname	scripts/kconfig/lkc_port.h	/^struct utsname {$/;"	s	language:C++
val	scripts/kconfig/expr.h	/^	void *val;$/;"	m	language:C++	struct:symbol_value	typeref:typename:void *
valid_stdin	scripts/kconfig/conf.c	/^static int valid_stdin = 1;$/;"	v	language:C	typeref:typename:int	file:
vbox1	scripts/kconfig/gconf.glade	/^    <widget class="GtkVBox" id="vbox1">$/;"	i	language:Glade
version	scripts/kconfig/lkc_port.h	/^	char version[_UTSNAME_LENGTH];$/;"	m	language:C++	struct:utsname	typeref:typename:char[]
viewList	scripts/kconfig/qconf.cc	/^ConfigView* ConfigView::viewList;$/;"	m	language:C++	class:ConfigView	typeref:typename:ConfigView *
viewList	scripts/kconfig/qconf.h	/^	static ConfigView* viewList;$/;"	m	language:C++	class:ConfigView	typeref:typename:ConfigView *
view_mode	scripts/kconfig/gconf.c	/^static gint view_mode = FULL_VIEW;$/;"	v	language:C	typeref:typename:gint	file:
visible	scripts/kconfig/expr.h	/^	struct expr_value visible;$/;"	m	language:C++	struct:property	typeref:struct:expr_value
visible	scripts/kconfig/expr.h	/^	tristate visible;$/;"	m	language:C++	struct:symbol	typeref:typename:tristate
visible	scripts/kconfig/qconf.h	/^	bool visible;$/;"	m	language:C++	class:ConfigItem	typeref:typename:bool
voidPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	language:C++	class:ConfigList	typeref:typename:QPixmap
vpaned	scripts/kconfig/gconf.c	/^GtkWidget *vpaned = NULL;$/;"	v	language:C	typeref:typename:GtkWidget *
vpaned1	scripts/kconfig/gconf.glade	/^	    <widget class="GtkVPaned" id="vpaned1">$/;"	i	language:Glade
vseparator1	scripts/kconfig/gconf.glade	/^		    <widget class="GtkVSeparator" id="vseparator1">$/;"	i	language:Glade
vseparator2	scripts/kconfig/gconf.glade	/^		    <widget class="GtkVSeparator" id="vseparator2">$/;"	i	language:Glade
vseparator3	scripts/kconfig/gconf.glade	/^		    <widget class="GtkVSeparator" id="vseparator3">$/;"	i	language:Glade
vsnprintf	scripts/kconfig/lkc_port.h	/^#define vsnprintf	/;"	d	language:C++
wbkgdset	scripts/kconfig/lxdialog/dialog.h	/^#define wbkgdset(/;"	d	language:C++	signature:(w,p)
which	scripts/checkpatch.pl	/^sub which {$/;"	s	language:Perl
which_conf	scripts/checkpatch.pl	/^sub which_conf {$/;"	s	language:Perl
window1	scripts/kconfig/gconf.glade	/^<widget class="GtkWindow" id="window1">$/;"	i	language:Glade
writeEntry	scripts/kconfig/qconf.h	/^	bool writeEntry(const QString& key, t value)$/;"	f	language:C++	class:QSettings	typeref:typename:bool	signature:(const QString & key,t value)
writeSizes	scripts/kconfig/qconf.cc	/^bool ConfigSettings::writeSizes(const QString& key, const QValueList<int>& value)$/;"	f	language:C++	class:ConfigSettings	typeref:typename:bool	signature:(const QString & key,const QValueList<int> & value)
writel	arch/arm64/include/asm/io.h	/^#define writel(/;"	d	language:C++	signature:(v,c)
writel	arch/arm64/include/asm/io.h	/^static inline void writel(unsigned int value, unsigned int addr)$/;"	f	language:C++	typeref:typename:void	signature:(unsigned int value,unsigned int addr)
xconfig	scripts/kconfig/Makefile	/^xconfig: $(obj)\/qconf$/;"	t	language:Make
xfgets	scripts/kconfig/conf.c	/^static void xfgets(char *str, int size, FILE *in)$/;"	f	language:C	typeref:typename:void	file:	signature:(char * str,int size,FILE * in)
xpm_back	scripts/kconfig/images.c	/^static const char *xpm_back[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_choice_no	scripts/kconfig/images.c	/^static const char *xpm_choice_no[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_choice_yes	scripts/kconfig/images.c	/^static const char *xpm_choice_yes[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_load	scripts/kconfig/images.c	/^static const char *xpm_load[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_menu	scripts/kconfig/images.c	/^static const char *xpm_menu[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_menu_inv	scripts/kconfig/images.c	/^static const char *xpm_menu_inv[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_menuback	scripts/kconfig/images.c	/^static const char *xpm_menuback[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_save	scripts/kconfig/images.c	/^static const char *xpm_save[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_single_view	scripts/kconfig/images.c	/^static const char *xpm_single_view[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_split_view	scripts/kconfig/images.c	/^static const char *xpm_split_view[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_symbol_mod	scripts/kconfig/images.c	/^static const char *xpm_symbol_mod[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_symbol_no	scripts/kconfig/images.c	/^static const char *xpm_symbol_no[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_symbol_yes	scripts/kconfig/images.c	/^static const char *xpm_symbol_yes[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_tree_view	scripts/kconfig/images.c	/^static const char *xpm_tree_view[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
xpm_void	scripts/kconfig/images.c	/^static const char *xpm_void[] = {$/;"	v	language:C	typeref:typename:const char * []	file:
yes	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	language:C++	enum:tristate
yesColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	language:C++	enum:colIdx
yy_accept	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int16_t yy_accept[61] =$/;"	v	language:C	typeref:typename:yyconst flex_int16_t[61]	file:
yy_act	scripts/kconfig/lex.zconf.c	/^	register int yy_act;$/;"	v	language:C	typeref:typename:register int
yy_amount_of_matched_text	scripts/kconfig/lex.zconf.c	/^		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;$/;"	v	language:C	typeref:typename:int
yy_at_bol	scripts/kconfig/lex.zconf.c	/^	int yy_at_bol;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_bp	scripts/kconfig/lex.zconf.c	/^	register char *yy_cp, *yy_bp;$/;"	v	language:C	typeref:typename:register char **
yy_bs_column	scripts/kconfig/lex.zconf.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_bs_lineno	scripts/kconfig/lex.zconf.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_buf_pos	scripts/kconfig/lex.zconf.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:char *	file:
yy_buf_size	scripts/kconfig/lex.zconf.c	/^	yy_size_t yy_buf_size;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:yy_size_t	file:
yy_buffer_stack	scripts/kconfig/lex.zconf.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	language:C	typeref:typename:YY_BUFFER_STATE *	file:
yy_buffer_stack_max	scripts/kconfig/lex.zconf.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	language:C	typeref:typename:size_t	file:
yy_buffer_stack_top	scripts/kconfig/lex.zconf.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	language:C	typeref:typename:size_t	file:
yy_buffer_state	scripts/kconfig/lex.zconf.c	/^struct yy_buffer_state$/;"	s	language:C	file:
yy_buffer_status	scripts/kconfig/lex.zconf.c	/^	int yy_buffer_status;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_c_buf_p	scripts/kconfig/lex.zconf.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	language:C	typeref:typename:char *	file:
yy_ch_buf	scripts/kconfig/lex.zconf.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:char *	file:
yy_cp	scripts/kconfig/lex.zconf.c	/^	register char *yy_cp, *yy_bp;$/;"	v	language:C	typeref:typename:register char *
yy_current_state	scripts/kconfig/lex.zconf.c	/^	register yy_state_type yy_current_state;$/;"	v	language:C	typeref:typename:register yy_state_type
yy_did_buffer_switch_on_eof	scripts/kconfig/lex.zconf.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	language:C	typeref:typename:int	file:
yy_ec	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	language:C	typeref:typename:yyconst flex_int32_t[256]	file:
yy_fatal_error	scripts/kconfig/lex.zconf.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	language:C	typeref:typename:void	file:	signature:(yyconst char * msg)
yy_fill_buffer	scripts/kconfig/lex.zconf.c	/^	int yy_fill_buffer;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_flex_strlen	scripts/kconfig/lex.zconf.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	language:C	typeref:typename:int	file:	signature:(yyconst char * s)
yy_flex_strncpy	scripts/kconfig/lex.zconf.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	language:C	typeref:typename:void	file:	signature:(char * s1,yyconst char * s2,int n)
yy_get_next_buffer	scripts/kconfig/lex.zconf.c	/^static int yy_get_next_buffer (void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
yy_get_previous_state	scripts/kconfig/lex.zconf.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	language:C	typeref:typename:yy_state_type	file:	signature:(void)
yy_hold_char	scripts/kconfig/lex.zconf.c	/^static char yy_hold_char;$/;"	v	language:C	typeref:typename:char	file:
yy_init	scripts/kconfig/lex.zconf.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	language:C	typeref:typename:int	file:
yy_init_globals	scripts/kconfig/lex.zconf.c	/^static int yy_init_globals (void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
yy_input_file	scripts/kconfig/lex.zconf.c	/^	FILE *yy_input_file;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:FILE *	file:
yy_is_interactive	scripts/kconfig/lex.zconf.c	/^	int yy_is_interactive;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_is_our_buffer	scripts/kconfig/lex.zconf.c	/^	int yy_is_our_buffer;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_n_chars	scripts/kconfig/lex.zconf.c	/^	int yy_n_chars;$/;"	m	language:C	struct:yy_buffer_state	typeref:typename:int	file:
yy_n_chars	scripts/kconfig/lex.zconf.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	language:C	typeref:typename:int	file:
yy_new_buffer	scripts/kconfig/lex.zconf.c	/^#define yy_new_buffer /;"	d	language:C	file:
yy_next_state	scripts/kconfig/lex.zconf.c	/^			yy_state_type yy_next_state;$/;"	v	language:C	typeref:typename:yy_state_type
yy_nxt	scripts/kconfig/lex.zconf.c	/^	flex_int32_t yy_nxt;$/;"	m	language:C	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yy_nxt	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int16_t yy_nxt[][17] =$/;"	v	language:C	typeref:typename:yyconst flex_int16_t[][17]	file:
yy_reduce_print	scripts/kconfig/zconf.tab.c	/^yy_reduce_print (int yyrule)$/;"	f	language:C	typeref:typename:void	file:	signature:(int yyrule)
yy_set_bol	scripts/kconfig/lex.zconf.c	/^#define yy_set_bol(/;"	d	language:C	file:	signature:(at_bol)
yy_set_interactive	scripts/kconfig/lex.zconf.c	/^#define yy_set_interactive(/;"	d	language:C	file:	signature:(is_interactive)
yy_size_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned int yy_size_t;$/;"	t	language:C	typeref:typename:unsigned int	file:
yy_stack_print	scripts/kconfig/zconf.tab.c	/^yy_stack_print (short int *bottom, short int *top)$/;"	f	language:C	typeref:typename:void	file:	signature:(short int * bottom,short int * top)
yy_start	scripts/kconfig/lex.zconf.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	language:C	typeref:typename:int	file:
yy_state_type	scripts/kconfig/lex.zconf.c	/^typedef int yy_state_type;$/;"	t	language:C	typeref:typename:int	file:
yy_trans_info	scripts/kconfig/lex.zconf.c	/^struct yy_trans_info$/;"	s	language:C	file:
yy_try_NUL_trans	scripts/kconfig/lex.zconf.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	language:C	typeref:typename:yy_state_type	file:	signature:(yy_state_type yy_current_state)
yy_verify	scripts/kconfig/lex.zconf.c	/^	flex_int32_t yy_verify;$/;"	m	language:C	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yyalloc	scripts/kconfig/zconf.tab.c	/^union yyalloc$/;"	u	language:C	file:
yychar	scripts/kconfig/zconf.tab.c	/^#define yychar /;"	d	language:C	file:
yychar	scripts/kconfig/zconf.tab.c	/^int yychar;$/;"	v	language:C	typeref:typename:int
yycheck	scripts/kconfig/zconf.tab.c	/^static const short int yycheck[] =$/;"	v	language:C	typeref:typename:const short int[]	file:
yyclearin	scripts/kconfig/zconf.tab.c	/^#define yyclearin	/;"	d	language:C	file:
yyconst	scripts/kconfig/lex.zconf.c	/^#define yyconst /;"	d	language:C	file:
yyconst	scripts/kconfig/lex.zconf.c	/^#define yyconst$/;"	d	language:C	file:
yydebug	scripts/kconfig/zconf.tab.c	/^#define yydebug /;"	d	language:C	file:
yydebug	scripts/kconfig/zconf.tab.c	/^int yydebug;$/;"	v	language:C	typeref:typename:int
yydefact	scripts/kconfig/zconf.tab.c	/^static const unsigned char yydefact[] =$/;"	v	language:C	typeref:typename:const unsigned char[]	file:
yydefgoto	scripts/kconfig/zconf.tab.c	/^static const short int yydefgoto[] =$/;"	v	language:C	typeref:typename:const short int[]	file:
yydestruct	scripts/kconfig/zconf.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * yymsg,int yytype,YYSTYPE * yyvaluep)
yyerrok	scripts/kconfig/zconf.tab.c	/^#define yyerrok	/;"	d	language:C	file:
yyerror	scripts/kconfig/zconf.tab.c	/^#define yyerror /;"	d	language:C	file:
yyinput	scripts/kconfig/lex.zconf.c	/^    static int yyinput (void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
yyless	scripts/kconfig/lex.zconf.c	/^#define yyless(/;"	d	language:C	file:	signature:(n)
yylex	scripts/kconfig/zconf.tab.c	/^#define yylex /;"	d	language:C	file:
yylval	scripts/kconfig/zconf.tab.c	/^#define yylval /;"	d	language:C	file:
yylval	scripts/kconfig/zconf.tab.c	/^YYSTYPE yylval;$/;"	v	language:C	typeref:typename:YYSTYPE
yymore	scripts/kconfig/lex.zconf.c	/^#define yymore(/;"	d	language:C	file:	signature:()
yynerrs	scripts/kconfig/zconf.tab.c	/^#define yynerrs /;"	d	language:C	file:
yynerrs	scripts/kconfig/zconf.tab.c	/^int yynerrs;$/;"	v	language:C	typeref:typename:int
yypact	scripts/kconfig/zconf.tab.c	/^static const short int yypact[] =$/;"	v	language:C	typeref:typename:const short int[]	file:
yyparse	scripts/kconfig/zconf.tab.c	/^#define yyparse /;"	d	language:C	file:
yyparse	scripts/kconfig/zconf.tab.c	/^int yyparse (void *YYPARSE_PARAM)$/;"	f	language:C	typeref:typename:int	signature:(void * YYPARSE_PARAM)
yypgoto	scripts/kconfig/zconf.tab.c	/^static const short int yypgoto[] =$/;"	v	language:C	typeref:typename:const short int[]	file:
yyprhs	scripts/kconfig/zconf.tab.c	/^static const unsigned short int yyprhs[] =$/;"	v	language:C	typeref:typename:const unsigned short int[]	file:
yyr1	scripts/kconfig/zconf.tab.c	/^static const unsigned char yyr1[] =$/;"	v	language:C	typeref:typename:const unsigned char[]	file:
yyr2	scripts/kconfig/zconf.tab.c	/^static const unsigned char yyr2[] =$/;"	v	language:C	typeref:typename:const unsigned char[]	file:
yyrhs	scripts/kconfig/zconf.tab.c	/^static const yysigned_char yyrhs[] =$/;"	v	language:C	typeref:typename:const yysigned_char[]	file:
yyrline	scripts/kconfig/zconf.tab.c	/^static const unsigned short int yyrline[] =$/;"	v	language:C	typeref:typename:const unsigned short int[]	file:
yysigned_char	scripts/kconfig/zconf.tab.c	/^   typedef short int yysigned_char;$/;"	t	language:C	typeref:typename:short int	file:
yysigned_char	scripts/kconfig/zconf.tab.c	/^   typedef signed char yysigned_char;$/;"	t	language:C	typeref:typename:signed char	file:
yyss	scripts/kconfig/zconf.tab.c	/^  short int yyss;$/;"	m	language:C	union:yyalloc	typeref:typename:short int	file:
yystos	scripts/kconfig/zconf.tab.c	/^static const unsigned char yystos[] =$/;"	v	language:C	typeref:typename:const unsigned char[]	file:
yystpcpy	scripts/kconfig/zconf.tab.c	/^#   define yystpcpy /;"	d	language:C	file:
yystpcpy	scripts/kconfig/zconf.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	language:C	typeref:typename:char *	file:	signature:(char * yydest,const char * yysrc)
yystrlen	scripts/kconfig/zconf.tab.c	/^#   define yystrlen /;"	d	language:C	file:
yystrlen	scripts/kconfig/zconf.tab.c	/^yystrlen (const char *yystr)$/;"	f	language:C	typeref:typename:YYSIZE_T	file:	signature:(const char * yystr)
yystype	scripts/kconfig/zconf.tab.c	/^# define yystype /;"	d	language:C	file:
yysymprint	scripts/kconfig/zconf.tab.c	/^yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)$/;"	f	language:C	typeref:typename:void	file:	signature:(FILE * yyoutput,int yytype,YYSTYPE * yyvaluep)
yytable	scripts/kconfig/zconf.tab.c	/^static const short int yytable[] =$/;"	v	language:C	typeref:typename:const short int[]	file:
yyterminate	scripts/kconfig/lex.zconf.c	/^#define yyterminate(/;"	d	language:C	file:	signature:()
yytext_ptr	scripts/kconfig/lex.zconf.c	/^#define yytext_ptr /;"	d	language:C	file:
yytname	scripts/kconfig/zconf.tab.c	/^static const char *const yytname[] =$/;"	v	language:C	typeref:typename:const char * const[]	file:
yytnamerr	scripts/kconfig/zconf.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	language:C	typeref:typename:YYSIZE_T	file:	signature:(char * yyres,const char * yystr)
yytokentype	scripts/kconfig/zconf.tab.c	/^   enum yytokentype {$/;"	g	language:C	file:
yytoknum	scripts/kconfig/zconf.tab.c	/^static const unsigned short int yytoknum[] =$/;"	v	language:C	typeref:typename:const unsigned short int[]	file:
yytranslate	scripts/kconfig/zconf.tab.c	/^static const unsigned char yytranslate[] =$/;"	v	language:C	typeref:typename:const unsigned char[]	file:
yyunput	scripts/kconfig/lex.zconf.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	language:C	typeref:typename:void	file:	signature:(int c,register char * yy_bp)
yyvs	scripts/kconfig/zconf.tab.c	/^  YYSTYPE yyvs;$/;"	m	language:C	union:yyalloc	typeref:typename:YYSTYPE	file:
zconf_create_buffer	scripts/kconfig/lex.zconf.c	/^    YY_BUFFER_STATE zconf_create_buffer  (FILE * file, int  size )$/;"	f	language:C	typeref:typename:YY_BUFFER_STATE	signature:(FILE * file,int size)
zconf_curname	scripts/kconfig/lex.zconf.c	/^char *zconf_curname(void)$/;"	f	language:C	typeref:typename:char *	signature:(void)
zconf_delete_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	language:C	typeref:typename:void	signature:(YY_BUFFER_STATE b)
zconf_endfile	scripts/kconfig/lex.zconf.c	/^static void zconf_endfile(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
zconf_endhelp	scripts/kconfig/lex.zconf.c	/^static void zconf_endhelp(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
zconf_endtoken	scripts/kconfig/zconf.tab.c	/^static bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken)$/;"	f	language:C	typeref:typename:bool	file:	signature:(struct kconf_id * id,int starttoken,int endtoken)
zconf_error	scripts/kconfig/zconf.tab.c	/^static void zconf_error(const char *err, ...)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * err,...)
zconf_flex_debug	scripts/kconfig/lex.zconf.c	/^int zconf_flex_debug = 0;$/;"	v	language:C	typeref:typename:int
zconf_flush_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	language:C	typeref:typename:void	signature:(YY_BUFFER_STATE b)
zconf_fopen	scripts/kconfig/lex.zconf.c	/^FILE *zconf_fopen(const char *name)$/;"	f	language:C	typeref:typename:FILE *	signature:(const char * name)
zconf_init_buffer	scripts/kconfig/lex.zconf.c	/^    static void zconf_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	language:C	typeref:typename:void	file:	signature:(YY_BUFFER_STATE b,FILE * file)
zconf_initscan	scripts/kconfig/lex.zconf.c	/^void zconf_initscan(const char *name)$/;"	f	language:C	typeref:typename:void	signature:(const char * name)
zconf_lineno	scripts/kconfig/lex.zconf.c	/^int zconf_lineno(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
zconf_load_buffer_state	scripts/kconfig/lex.zconf.c	/^static void zconf_load_buffer_state  (void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
zconf_nextfile	scripts/kconfig/lex.zconf.c	/^void zconf_nextfile(const char *name)$/;"	f	language:C	typeref:typename:void	signature:(const char * name)
zconf_scan_buffer	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_buffer  (char * base, yy_size_t  size )$/;"	f	language:C	typeref:typename:YY_BUFFER_STATE	signature:(char * base,yy_size_t size)
zconf_scan_bytes	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f	language:C	typeref:typename:YY_BUFFER_STATE	signature:(yyconst char * yybytes,int _yybytes_len)
zconf_scan_string	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_string (yyconst char * yystr )$/;"	f	language:C	typeref:typename:YY_BUFFER_STATE	signature:(yyconst char * yystr)
zconf_starthelp	scripts/kconfig/lex.zconf.c	/^void zconf_starthelp(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
zconf_switch_to_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	language:C	typeref:typename:void	signature:(YY_BUFFER_STATE new_buffer)
zconf_tokenname	scripts/kconfig/zconf.tab.c	/^const char *zconf_tokenname(int token)$/;"	f	language:C	typeref:typename:const char *	signature:(int token)
zconfalloc	scripts/kconfig/lex.zconf.c	/^void *zconfalloc (yy_size_t  size )$/;"	f	language:C	typeref:typename:void *	signature:(yy_size_t size)
zconfdump	scripts/kconfig/zconf.tab.c	/^void zconfdump(FILE *out)$/;"	f	language:C	typeref:typename:void	signature:(FILE * out)
zconfensure_buffer_stack	scripts/kconfig/lex.zconf.c	/^static void zconfensure_buffer_stack (void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
zconferror	scripts/kconfig/zconf.tab.c	/^static void zconferror(const char *err)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * err)
zconffree	scripts/kconfig/lex.zconf.c	/^void zconffree (void * ptr )$/;"	f	language:C	typeref:typename:void	signature:(void * ptr)
zconfget_debug	scripts/kconfig/lex.zconf.c	/^int zconfget_debug  (void)$/;"	f	language:C	typeref:typename:int	signature:(void)
zconfget_in	scripts/kconfig/lex.zconf.c	/^FILE *zconfget_in  (void)$/;"	f	language:C	typeref:typename:FILE *	signature:(void)
zconfget_leng	scripts/kconfig/lex.zconf.c	/^int zconfget_leng  (void)$/;"	f	language:C	typeref:typename:int	signature:(void)
zconfget_lineno	scripts/kconfig/lex.zconf.c	/^int zconfget_lineno  (void)$/;"	f	language:C	typeref:typename:int	signature:(void)
zconfget_out	scripts/kconfig/lex.zconf.c	/^FILE *zconfget_out  (void)$/;"	f	language:C	typeref:typename:FILE *	signature:(void)
zconfget_text	scripts/kconfig/lex.zconf.c	/^char *zconfget_text  (void)$/;"	f	language:C	typeref:typename:char *	signature:(void)
zconfin	scripts/kconfig/lex.zconf.c	/^FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;$/;"	v	language:C	typeref:typename:FILE *
zconfleng	scripts/kconfig/lex.zconf.c	/^int zconfleng;$/;"	v	language:C	typeref:typename:int
zconflex_destroy	scripts/kconfig/lex.zconf.c	/^int zconflex_destroy  (void)$/;"	f	language:C	typeref:typename:int	signature:(void)
zconflineno	scripts/kconfig/lex.zconf.c	/^int zconflineno = 1;$/;"	v	language:C	typeref:typename:int
zconfout	scripts/kconfig/lex.zconf.c	/^FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;$/;"	v	language:C	typeref:typename:FILE **
zconfpop_buffer_state	scripts/kconfig/lex.zconf.c	/^void zconfpop_buffer_state (void)$/;"	f	language:C	typeref:typename:void	signature:(void)
zconfprint	scripts/kconfig/zconf.tab.c	/^static void zconfprint(const char *err, ...)$/;"	f	language:C	typeref:typename:void	file:	signature:(const char * err,...)
zconfpush_buffer_state	scripts/kconfig/lex.zconf.c	/^void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	language:C	typeref:typename:void	signature:(YY_BUFFER_STATE new_buffer)
zconfrealloc	scripts/kconfig/lex.zconf.c	/^void *zconfrealloc  (void * ptr, yy_size_t  size )$/;"	f	language:C	typeref:typename:void *	signature:(void * ptr,yy_size_t size)
zconfrestart	scripts/kconfig/lex.zconf.c	/^    void zconfrestart  (FILE * input_file )$/;"	f	language:C	typeref:typename:void	signature:(FILE * input_file)
zconfset_debug	scripts/kconfig/lex.zconf.c	/^void zconfset_debug (int  bdebug )$/;"	f	language:C	typeref:typename:void	signature:(int bdebug)
zconfset_in	scripts/kconfig/lex.zconf.c	/^void zconfset_in (FILE *  in_str )$/;"	f	language:C	typeref:typename:void	signature:(FILE * in_str)
zconfset_lineno	scripts/kconfig/lex.zconf.c	/^void zconfset_lineno (int  line_number )$/;"	f	language:C	typeref:typename:void	signature:(int line_number)
zconfset_out	scripts/kconfig/lex.zconf.c	/^void zconfset_out (FILE *  out_str )$/;"	f	language:C	typeref:typename:void	signature:(FILE * out_str)
zconftext	scripts/kconfig/lex.zconf.c	/^char *zconftext;$/;"	v	language:C	typeref:typename:char *
zconfwrap	scripts/kconfig/lex.zconf.c	/^#define zconfwrap(/;"	d	language:C	file:	signature:()
~ConfigItem	scripts/kconfig/qconf.cc	/^ConfigItem::~ConfigItem(void)$/;"	f	language:C++	class:ConfigItem	signature:(void)
~ConfigView	scripts/kconfig/qconf.cc	/^ConfigView::~ConfigView(void)$/;"	f	language:C++	class:ConfigView	signature:(void)
